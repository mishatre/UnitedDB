
Процедура ДобавитьНоменклатуруНакладнойВДеревоТэгов(СтрокиДерева, ДанныеТаблицыТовары, ДанныеОШтрихКодах, Отказ, Сообщение)
	
	Для каждого СтрокаТаблицыТовары Из ДанныеТаблицыТовары Цикл
		
		СообщениеСтроки = "";
		
		Если Не ЗначениеЗаполнено(СтрокаТаблицыТовары.Количество) Тогда
			СообщениеСтроки = СообщениеСтроки + Символы.ПС + "- не заполнено количество";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТаблицыТовары.ИдТовара)
			И Не СтрокаТаблицыТовары.ЕдиницаИзмеренияСоответствуетНоменклатуреКонтрагента Тогда
			СообщениеСтроки = СообщениеСтроки + Символы.ПС + "- единица измерения не соответствует единице измерения номенклатуры контрагента: """ + СтрокаТаблицыТовары.ОКЕИ + """";
		КонецЕсли;
		
		СтрокиТовара = ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиДерева, "Товар").Строки;
		
		ИмяТипаДляЗаписи = "";
		ИдентификаторТовара = ЭлектронныеДокументы.ПолучитьИдентификаторТовараДляВыгрузки(СтрокаТаблицыТовары, ДанныеОШтрихКодах, Сообщение, ИмяТипаДляЗаписи);
		
		ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиТовара, "ИдТовара"  , ИдентификаторТовара, ИмяТипаДляЗаписи);
		
		//ДобавитьСтрокуВДеревоТэгов(СтрокиТовара, "ЕдиницаИзмерения", СтрокаТаблицыТовары.ОКЕИ.Код, "ОКЕИ");
		
		ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиТовара, "Количество", ЭлектронныеДокументы.ХМЛЧисло(СтрокаТаблицыТовары.Количество));
		
		СтрокиСтоимости = ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиТовара, "СуммаПоСтроке").Строки;
		ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиСтоимости, "Сумма", ЭлектронныеДокументы.ХМЛЧисло(СтрокаТаблицыТовары.Сумма), , Новый Структура("Валюта", СтрокаТаблицыТовары.Валюта));
		Если ЗначениеЗаполнено(СтрокаТаблицыТовары.СуммаНДС) Тогда
			СтрокиНалога = ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиСтоимости, "Налог").Строки;
			ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиНалога, "ТипНалога", "НДС");
			ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиНалога, "ВеличинаСтавкиНалога", ЭлектронныеДокументы.ХМЛЧисло(УчетНДС.ПолучитьСтавкуНДС(СтрокаТаблицыТовары.СтавкаНДС)));
			ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиНалога, "Сумма", ЭлектронныеДокументы.ХМЛЧисло(СтрокаТаблицыТовары.СуммаНДС));
			ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиНалога, "ВключеноВСтоимость", ЭлектронныеДокументы.ХМЛБулево(СтрокаТаблицыТовары.СуммаВключаетНДС));
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(СтрокаТаблицыТовары.Примечание) Тогда
			ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиТовара, "Примечание", СтрокаТаблицыТовары.Примечание);
		КонецЕсли;
		
		Если Не ПустаяСтрока(СообщениеСтроки) Тогда
			Сообщение = Сообщение + Символы.ПС + "Строка: " + СтрокаТаблицыТовары.НомерСтроки + "; Номенклатура:""" + СтрокаТаблицыТовары.Номенклатура + """ содержит ошибки:" + СообщениеСтроки;
			Отказ = Истина;
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры // () 

Процедура ЗаполнитьXMLАкцепт(СтрокиДерева, Отказ, Сообщение)
	
	ДанныеОШтрихКодах = Неопределено;
	ДанныеТаблицыТовары = ЭлектронныеДокументы.ПодготовитьНоменклатуруДокументаДляЭкспорта(УчетныйДокумент, ДанныеОШтрихКодах);
	
	ДобавитьНоменклатуруНакладнойВДеревоТэгов(СтрокиДерева, ДанныеТаблицыТовары, ДанныеОШтрихКодах, Отказ, Сообщение);
	
КонецПроцедуры // () 

Процедура ЗаполнитьXML(ОбъектXML, Отказ, Сообщение, ДобавлятьАтрибутПроверки = Ложь, ДополнятьИсходящееСообщениеПриложеннымиФайлами = Ложь) Экспорт
	
	ПрефиксИмен = "";
	ПространствоИменСОДИ    = "urn:moo-sodi.ru:commerceml_sodi";
	
	Если Акцептовать Тогда
		ОбъектXML.ЗаписатьНачалоЭлемента("АкцептНакладной", ПространствоИменСОДИ);
	Иначе
		ОбъектXML.ЗаписатьНачалоЭлемента("РеджектНакладной", ПространствоИменСОДИ);
	КонецЕсли;
	
	ОбъектXML.ЗаписатьСоответствиеПространстваИмен(ПрефиксИмен, ПространствоИменСОДИ);
	ОбъектXML.ЗаписатьСоответствиеПространстваИмен("xsi", "http://www.w3.org/2001/XMLSchema-instance");
	Если ДобавлятьАтрибутПроверки Тогда
		ОбъектXML.ЗаписатьАтрибут("xsi:schemaLocation","urn:moo-sodi.ru:commerceml_sodi cml-delivery-3.0sodi.xsd");
	КонецЕсли;
	
	ДеревоТэгов  = ЭлектронныеДокументы.ИнициализироватьДеревоТэгов(ЭтотОбъект, Отказ, Сообщение);
	СтрокиДерева = ДеревоТэгов.Строки;
	
	ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиДерева, "НомерИсходногоДокумента", ИсходныйДокумент.НомерВходящегоДокумента, "ДокументИД");
	
	Если Акцептовать Тогда
	
		ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиДерева, "НомерНакладнойКлиента", УчетныйДокумент.Номер, "ДокументИД");
		ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиДерева, "ДатаНакладной", ЭлектронныеДокументы.ХМЛДата(УчетныйДокумент.Дата));
		
	 	ЗаполнитьXMLАкцепт(СтрокиДерева, Отказ, Сообщение)
		
	КонецЕсли;
	
	ЭлектронныеДокументы.ЗаписатьИнформациюОПриложенныхФайлахКДокументу(ДополнятьИсходящееСообщениеПриложеннымиФайлами, СтрокиДерева, УчетныйДокумент);	
	
	ЭлектронныеДокументы.ЗаписатьТэгиВXMLДокумент(ОбъектXML, ДеревоТэгов.Строки, ПрефиксИмен);
	
	ОбъектXML.ЗаписатьКонецЭлемента();
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(Основание)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ВходящаяЭлектроннаяНакладная") Тогда
		
		ЭлектронныеДокументы.ЗаполнитьШапкуИсходящегоДокументаПоОснованию(ЭтотОбъект, Основание);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ВозможноАкцептовать(Сообщение = "") Экспорт
	
	Если Не ЗначениеЗаполнено(УчетныйДокумент) Тогда
		Сообщение = Сообщение + Символы.ПС + " - не создан документ поступления";
		Возврат Ложь;
	ИначеЕсли Не УчетныйДокумент.Проведен Тогда
		Сообщение = Сообщение + Символы.ПС + " - документ поступления должен быть проведен";
	КонецЕсли;	
	
	Если Не Организация = УчетныйДокумент.Организация Тогда
		Сообщение = Сообщение + Символы.ПС + " - организация учетного документа не соответствует входящей электронной накладной";
	КонецЕсли;
	
	Если Не Контрагент = УчетныйДокумент.Контрагент Тогда
		Сообщение = Сообщение + Символы.ПС + " - контрагент учетного документа не соответствует входящей электронной накладной";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИсходныйДокумент.ВалютаДокумента) и Не ИсходныйДокумент.ВалютаДокумента = УчетныйДокумент.ВалютаДокумента Тогда
		Сообщение = Сообщение + Символы.ПС + " - валюта учетного документа не соответствует входящей электронной накладной";
	КонецЕсли;
	
	Если Не ИсходныйДокумент.СуммаВключаетНДС = УчетныйДокумент.СуммаВключаетНДС Тогда
		Сообщение = Сообщение + Символы.ПС + " - способ включения НДС в сумму учетного документа не соответствует входящей электронной накладной";
	КонецЕсли;
	
	Если Не ПустаяСтрока(Сообщение) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ПустаяСтрока(Сообщение);
	
КонецФункции // () 

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Сообщение = "";
	
	ЭлектронныеДокументы.ПроверитьРеквизитИсходныйДокумент(ЭтотОбъект, Отказ, Сообщение);
	
	Если Отказ Тогда
		Сообщить("Электронный документ """ + ЭтотОбъект + """ не может быть записан:" + Сообщение, СтатусСообщения.Внимание);
	ИначеЕсли НЕ ПустаяСтрока(Сообщение) Тогда
		Сообщить("При записи электронного документа """ + ЭтотОбъект + """ обнаружены ошибки:" + Сообщение, СтатусСообщения.Внимание);
	КонецЕсли;	
	
КонецПроцедуры

Функция SOAPAction() Экспорт
	
	Если Акцептовать Тогда
		Возврат "accept_delivery";
	Иначе
		Возврат "reject_delivery";
	КонецЕсли;
	
КонецФункции // () 
