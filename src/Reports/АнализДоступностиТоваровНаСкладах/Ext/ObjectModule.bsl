#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "ТоварыНаСкладах";
	
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	// Описание исходного текста запроса.
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Склад КАК Склад,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВложенныйЗапрос.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ВложенныйЗапрос.Качество КАК Качество,
	|	ВложенныйЗапрос.ДокументОснование КАК ДокументОснование,
	|	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.Номенклатура) КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатурыПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.СерияНоменклатуры) КАК СерияНоменклатурыПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.Качество) КАК КачествоПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.ДокументОснование) КАК ДокументОснованиеПредставление,
	|	ВложенныйЗапрос.КоличествоОстаток КАК КоличествоОстаток,
	|	ВложенныйЗапрос.КоличествоВРезерве КАК КоличествоВРезерве,
	|	ВложенныйЗапрос.КоличествоКПолучению КАК КоличествоКПолучению,
	|	ВложенныйЗапрос.КоличествоКПередаче КАК КоличествоКПередаче,
	|	ВложенныйЗапрос.КоличествоЗаказаноУПоставщиков КАК КоличествоЗаказаноУПоставщиков,
	|	ВложенныйЗапрос.КоличествоОстаток - ВложенныйЗапрос.КоличествоВРезерве - ВложенныйЗапрос.КоличествоКПередаче КАК СвободныйОстаток,
	|	ВложенныйЗапрос.КоличествоОстаток * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоОстатокБазовыхЕдиниц,
	|	ВложенныйЗапрос.КоличествоВРезерве * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоВРезервеБазовыхЕдиниц,
	|	ВложенныйЗапрос.КоличествоКПолучению * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоКПолучениюБазовыхЕдиниц,
	|	ВложенныйЗапрос.КоличествоКПередаче * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоКПередачеБазовыхЕдиниц,
	|	ВложенныйЗапрос.КоличествоЗаказаноУПоставщиков * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоЗаказаноУПоставщиковБазовыхЕдиниц,
	|	(ВложенныйЗапрос.КоличествоОстаток - ВложенныйЗапрос.КоличествоВРезерве - ВложенныйЗапрос.КоличествоКПередаче) * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК СвободныйОстатокБазовыхЕдиниц,
	|	ВложенныйЗапрос.КоличествоОстаток * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК КоличествоОстатокЕдиницОтчетов,
	|	ВложенныйЗапрос.КоличествоВРезерве * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК КоличествоВРезервеЕдиницОтчетов,
	|	ВложенныйЗапрос.КоличествоКПолучению * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК КоличествоКПолучениюЕдиницОтчетов,
	|	ВложенныйЗапрос.КоличествоКПередаче * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК КоличествоКПередачеЕдиницОтчетов,
	|	ВложенныйЗапрос.КоличествоЗаказаноУПоставщиков * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК КоличествоЗаказаноУПоставщиковЕдиницОтчетов,
	|	(ВложенныйЗапрос.КоличествоОстаток - ВложенныйЗапрос.КоличествоВРезерве - ВложенныйЗапрос.КоличествоКПередаче) * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК СвободныйОстатокЕдиницОтчетов
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
	|{ВЫБРАТЬ
	|	Склад.*,
	|	Номенклатура.*,
	|	ХарактеристикаНоменклатуры.*,
	|	СерияНоменклатуры.*,
	|	Качество.*,
	|	ДокументОснование.*,
	|	КоличествоОстаток,
	|	КоличествоВРезерве,
	|	КоличествоКПолучению,
	|	КоличествоКПередаче,
	|	КоличествоЗаказаноУПоставщиков,
	|	СвободныйОстаток,
	|	КоличествоОстатокБазовыхЕдиниц,
	|	КоличествоВРезервеБазовыхЕдиниц,
	|	КоличествоКПолучениюБазовыхЕдиниц,
	|	КоличествоКПередачеБазовыхЕдиниц,
	|	КоличествоЗаказаноУПоставщиковБазовыхЕдиниц,
	|	СвободныйОстатокБазовыхЕдиниц,
	|	КоличествоОстатокЕдиницОтчетов,
	|	КоличествоВРезервеЕдиницОтчетов,
	|	КоличествоКПолучениюЕдиницОтчетов,
	|	КоличествоКПередачеЕдиницОтчетов,
	|	КоличествоЗаказаноУПоставщиковЕдиницОтчетов,
	|	СвободныйОстатокЕдиницОтчетов
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВложенныйЗапрос.Склад КАК Склад,
	|		ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|		ВложенныйЗапрос.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ВложенныйЗапрос.СерияНоменклатуры КАК СерияНоменклатуры,
	|		ВложенныйЗапрос.Качество КАК Качество,
	|		ВложенныйЗапрос.ДокументОснование КАК ДокументОснование,
	|		СУММА(ВложенныйЗапрос.КоличествоОстаток) КАК КоличествоОстаток,
	|		СУММА(ВложенныйЗапрос.КоличествоВРезерве) КАК КоличествоВРезерве,
	|		СУММА(ВложенныйЗапрос.КоличествоКПолучению) КАК КоличествоКПолучению,
	|		СУММА(ВложенныйЗапрос.КоличествоКПередаче) КАК КоличествоКПередаче,
	|		СУММА(ВложенныйЗапрос.КоличествоЗаказаноУПоставщиков) КАК КоличествоЗаказаноУПоставщиков
	|	{ВЫБРАТЬ
	|		Склад,
	|		Номенклатура,
	|		ХарактеристикаНоменклатуры,
	|		СерияНоменклатуры,
	|		Качество,
	|		ДокументОснование}
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТоварыНаСкладахОстатки.Склад КАК Склад,
	|			ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|			ТоварыНаСкладахОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|			ТоварыНаСкладахОстатки.СерияНоменклатуры КАК СерияНоменклатуры,
	|			ТоварыНаСкладахОстатки.Качество КАК Качество,
	|			НЕОПРЕДЕЛЕНО КАК ДокументОснование,
	|			ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|			0 КАК КоличествоВРезерве,
	|			0 КАК КоличествоКПолучению,
	|			0 КАК КоличествоКПередаче,
	|			0 КАК КоличествоЗаказаноУПоставщиков
	|		ИЗ
	|			РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаКон, {(Склад).* КАК Склад, (Качество).* КАК Качество, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры, (СерияНоменклатуры).* КАК СерияНоменклатуры}) КАК ТоварыНаСкладахОстатки
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТоварыВРозницеОстатки.Склад,
	|			ТоварыВРозницеОстатки.Номенклатура,
	|			ТоварыВРозницеОстатки.ХарактеристикаНоменклатуры,
	|			ТоварыВРозницеОстатки.СерияНоменклатуры,
	|			ТоварыВРозницеОстатки.Качество,
	|			НЕОПРЕДЕЛЕНО,
	|			ТоварыВРозницеОстатки.КоличествоОстаток,
	|			0,
	|			0,
	|			0,
	|			0
	|		ИЗ
	|			РегистрНакопления.ТоварыВРознице.Остатки(&ДатаКон, {(Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры, (СерияНоменклатуры).* КАК СерияНоменклатуры, (Качество).* КАК Качество}) КАК ТоварыВРозницеОстатки
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТоварыВРезервеНаСкладахОстатки.Склад,
	|			ТоварыВРезервеНаСкладахОстатки.Номенклатура,
	|			ТоварыВРезервеНаСкладахОстатки.ХарактеристикаНоменклатуры,
	|			ТоварыВРезервеНаСкладахОстатки.СерияНоменклатуры,
	|			ЗНАЧЕНИЕ(Справочник.Качество.Новый) КАК Качество,
	|			ТоварыВРезервеНаСкладахОстатки.ДокументРезерва,
	|			0,
	|			ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток,
	|			0,
	|			0,
	|			0
	|		ИЗ
	|			РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(&ДатаКон, {(Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры, (СерияНоменклатуры).* КАК СерияНоменклатуры, (ДокументРезерва).* КАК ДокументОснование}) КАК ТоварыВРезервеНаСкладахОстатки
	|		{ГДЕ ЗНАЧЕНИЕ(Справочник.Качество.Новый) КАК Качество}
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТоварыКПолучениюНаСкладыОстатки.Склад,
	|			ТоварыКПолучениюНаСкладыОстатки.Номенклатура,
	|			ТоварыКПолучениюНаСкладыОстатки.ХарактеристикаНоменклатуры,
	|			ТоварыКПолучениюНаСкладыОстатки.СерияНоменклатуры,
	|			ТоварыКПолучениюНаСкладыОстатки.Качество,
	|			ТоварыКПолучениюНаСкладыОстатки.ДокументПолучения,
	|			0,
	|			0,
	|			ТоварыКПолучениюНаСкладыОстатки.КоличествоОстаток,
	|			0,
	|			0
	|		ИЗ
	|			РегистрНакопления.ТоварыКПолучениюНаСклады.Остатки(&ДатаКон, {(Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры, (СерияНоменклатуры).* КАК СерияНоменклатуры, (Качество).* КАК Качество, (ДокументПолучения).* КАК ДокументОснование}) КАК ТоварыКПолучениюНаСкладыОстатки
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТоварыКПередачеСоСкладовОстатки.Склад,
	|			ТоварыКПередачеСоСкладовОстатки.Номенклатура,
	|			ТоварыКПередачеСоСкладовОстатки.ХарактеристикаНоменклатуры,
	|			ТоварыКПередачеСоСкладовОстатки.СерияНоменклатуры,
	|			ТоварыКПередачеСоСкладовОстатки.Качество,
	|			ТоварыКПередачеСоСкладовОстатки.ДокументПередачи,
	|			0,
	|			0,
	|			0,
	|			ТоварыКПередачеСоСкладовОстатки.КоличествоОстаток,
	|			0
	|		ИЗ
	|			РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки(&ДатаКон, {(Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры, (СерияНоменклатуры).* КАК СерияНоменклатуры, (Качество).* КАК Качество, (ДокументПередачи).* КАК ДокументОснование}) КАК ТоварыКПередачеСоСкладовОстатки
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ЗаказыПоставщикамОстатки.ЗаказПоставщику.Склад,
	|			ЗаказыПоставщикамОстатки.Номенклатура,
	|			ЗаказыПоставщикамОстатки.ХарактеристикаНоменклатуры,
	|			ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
	|			ЗНАЧЕНИЕ(Справочник.Качество.Новый),
	|			ЗаказыПоставщикамОстатки.ЗаказПоставщику,
	|			0,
	|			0,
	|			0,
	|			0,
	|			ЗаказыПоставщикамОстатки.КоличествоОстаток
	|		ИЗ
	|			РегистрНакопления.ЗаказыПоставщикам.Остатки(&ДатаКон, {(ЗаказПоставщику.Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры, (ЗаказПоставщику).* КАК ДокументОснование}) КАК ЗаказыПоставщикамОстатки
	|		{ГДЕ ЗНАЧЕНИЕ(Справочник.Качество.Новый) КАК Качество}
	|		) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.Склад,
	|		ВложенныйЗапрос.Номенклатура,
	|		ВложенныйЗапрос.ХарактеристикаНоменклатуры,
	|		ВложенныйЗапрос.СерияНоменклатуры,
	|		ВложенныйЗапрос.Качество,
	|		ВложенныйЗапрос.ДокументОснование
	|	) КАК ВложенныйЗапрос
	|//СОЕДИНЕНИЯ
	|{ГДЕ
	|	ВложенныйЗапрос.Качество.* КАК Качество,
	|	ВложенныйЗапрос.КоличествоОстаток КАК КоличествоОстаток,
	|	ВложенныйЗапрос.КоличествоВРезерве КАК КоличествоВРезерве,
	|	ВложенныйЗапрос.КоличествоКПолучению КАК КоличествоКПолучению,
	|	ВложенныйЗапрос.КоличествоКПередаче КАК КоличествоКПередаче,
	|	ВложенныйЗапрос.КоличествоЗаказаноУПоставщиков КАК КоличествоЗаказаноУПоставщиков,
	|	ВложенныйЗапрос.КоличествоОстаток - ВложенныйЗапрос.КоличествоВРезерве - ВложенныйЗапрос.КоличествоКПередаче КАК СвободныйОстаток,
	|	ВложенныйЗапрос.КоличествоОстаток * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоОстатокБазовыхЕдиниц,
	|	ВложенныйЗапрос.КоличествоВРезерве * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоВРезервеБазовыхЕдиниц,
	|	ВложенныйЗапрос.КоличествоКПолучению * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоКПолучениюБазовыхЕдиниц,
	|	ВложенныйЗапрос.КоличествоКПередаче * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоКПередачеБазовыхЕдиниц,
	|	ВложенныйЗапрос.КоличествоЗаказаноУПоставщиков * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоЗаказаноУПоставщиковБазовыхЕдиниц,
	|	(ВложенныйЗапрос.КоличествоОстаток - ВложенныйЗапрос.КоличествоВРезерве - ВложенныйЗапрос.КоличествоКПередаче) * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК СвободныйОстатокБазовыхЕдиниц,
	|	ВложенныйЗапрос.КоличествоОстаток * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК КоличествоОстатокЕдиницОтчетов,
	|	ВложенныйЗапрос.КоличествоВРезерве * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК КоличествоВРезервеЕдиницОтчетов,
	|	ВложенныйЗапрос.КоличествоКПолучению * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК КоличествоКПолучениюЕдиницОтчетов,
	|	ВложенныйЗапрос.КоличествоКПередаче * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК КоличествоКПередачеЕдиницОтчетов,
	|	ВложенныйЗапрос.КоличествоЗаказаноУПоставщиков * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК КоличествоЗаказаноУПоставщиковЕдиницОтчетов,
	|	(ВложенныйЗапрос.КоличествоОстаток - ВложенныйЗапрос.КоличествоВРезерве - ВложенныйЗапрос.КоличествоКПередаче) * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК СвободныйОстатокЕдиницОтчетов
	|	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ	
	|}
	|{УПОРЯДОЧИТЬ ПО
	|	Склад.*,
	|	Номенклатура.*,
	|	ХарактеристикаНоменклатуры.*,
	|	СерияНоменклатуры.*,
	|	Качество.*,
	|	ДокументОснование.*,
	|	КоличествоОстаток,
	|	КоличествоВРезерве,
	|	КоличествоКПолучению,
	|	КоличествоКПередаче,
	|	КоличествоЗаказаноУПоставщиков,
	|	СвободныйОстаток,
	|	КоличествоОстатокБазовыхЕдиниц,
	|	КоличествоВРезервеБазовыхЕдиниц,
	|	КоличествоКПолучениюБазовыхЕдиниц,
	|	КоличествоКПередачеБазовыхЕдиниц,
	|	КоличествоЗаказаноУПоставщиковБазовыхЕдиниц,
	|	СвободныйОстатокБазовыхЕдиниц,
	|	КоличествоОстатокЕдиницОтчетов,
	|	КоличествоВРезервеЕдиницОтчетов,
	|	КоличествоКПолучениюЕдиницОтчетов,
	|	КоличествоКПередачеЕдиницОтчетов,
	|	КоличествоЗаказаноУПоставщиковЕдиницОтчетов,
	|	СвободныйОстатокЕдиницОтчетов
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|ИТОГИ
	|	СУММА(КоличествоОстаток),
	|	СУММА(КоличествоВРезерве),
	|	СУММА(КоличествоКПолучению),
	|	СУММА(КоличествоКПередаче),
	|	СУММА(КоличествоЗаказаноУПоставщиков),
	|	СУММА(СвободныйОстаток),
	|	СУММА(КоличествоОстатокБазовыхЕдиниц),
	|	СУММА(КоличествоВРезервеБазовыхЕдиниц),
	|	СУММА(КоличествоКПолучениюБазовыхЕдиниц),
	|	СУММА(КоличествоКПередачеБазовыхЕдиниц),
	|	СУММА(КоличествоЗаказаноУПоставщиковБазовыхЕдиниц),
	|	СУММА(СвободныйОстатокБазовыхЕдиниц),
	|	СУММА(КоличествоОстатокЕдиницОтчетов),
	|	СУММА(КоличествоВРезервеЕдиницОтчетов),
	|	СУММА(КоличествоКПолучениюЕдиницОтчетов),
	|	СУММА(КоличествоКПередачеЕдиницОтчетов),
	|	СУММА(КоличествоЗаказаноУПоставщиковЕдиницОтчетов),
	|	СУММА(СвободныйОстатокЕдиницОтчетов)
	|	//ИТОГИ_СВОЙСТВА
	|	//ИТОГИ_КАТЕГОРИИ
	|ПО
	|	ОБЩИЕ
	|{ИТОГИ ПО
	|	Склад.*,
	|	Номенклатура.*,
	|	ХарактеристикаНоменклатуры.*,
	|	СерияНоменклатуры.*,
	|	Качество.*,
	|	ДокументОснование.*
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}";

	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ВложенныйЗапрос.Номенклатура", "Номенклатура", "Номенклатура", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ВложенныйЗапрос.ХарактеристикаНоменклатуры", "ХарактеристикаНоменклатуры", "Характеристика номенклатуры", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ВложенныйЗапрос.Склад", "Склад", "Склад", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Склады);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ВложенныйЗапрос.ДокументОснование", "ДокументОснование", "Документ-основание", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы);
        УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ВложенныйЗапрос.ДокументОснование", "ДокументОснование", "Документ-основание", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документ_ЗаказПокупателя);

		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Склад", "Склад");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Номенклатура", "Номенклатура");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ХарактеристикаНоменклатуры", "Характеристика номенклатуры");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СерияНоменклатуры", "Серия номенклатуры");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Качество", "Качество");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДокументОснование", "Документ-основание");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоОстаток", "Остаток (в ед. хранения)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоВРезерве", "Зарезервировано (в ед. хранения)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКПолучению", "К получению (в ед. хранения)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКПередаче", "К передаче (в ед. хранения)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоЗаказаноУПоставщиков", "Заказано у поставщиков (в ед. хранения)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СвободныйОстаток", "Свободный остаток (в ед. хранения)");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоОстатокБазовыхЕдиниц", "Остаток (в базовых ед.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоВРезервеБазовыхЕдиниц", "Зарезервировано (в базовых ед.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКПолучениюБазовыхЕдиниц", "К получению (в базовых ед.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКПередачеБазовыхЕдиниц", "К передаче (в базовых ед.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоЗаказаноУПоставщиковБазовыхЕдиниц", "Заказано у поставщиков (в базовых ед.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СвободныйОстатокБазовыхЕдиниц", "Свободный остаток (в базовых ед.)");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоОстатокЕдиницОтчетов", "Остаток (в ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоВРезервеЕдиницОтчетов", "Зарезервировано (в ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКПолучениюЕдиницОтчетов", "К получению (в ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКПередачеЕдиницОтчетов", "К передаче (в ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоЗаказаноУПоставщиковЕдиницОтчетов", "Заказано у поставщиков (в ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СвободныйОстатокЕдиницОтчетов", "Свободный остаток (в ед. отчетов)");

	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоОстаток", "В ед. хранения", Истина, "ЧЦ=15; ЧДЦ=3", "Остаток", "Остаток");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоВРезерве", "В ед. хранения", Истина, "ЧЦ=15; ЧДЦ=3", "Зарезервировано", "Зарезервировано");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКПолучению", "В ед. хранения", Истина, "ЧЦ=15; ЧДЦ=3", "КПолучению", "К получению");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКПередаче", "В ед. хранения", Истина, "ЧЦ=15; ЧДЦ=3", "КПередаче", "К передаче");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоЗаказаноУПоставщиков", "В ед. хранения", Истина, "ЧЦ=15; ЧДЦ=3", "ЗаказаноУПоставщиков", "Заказано у поставщиков");
	УниверсальныйОтчет.ДобавитьПоказатель("СвободныйОстаток", "В ед. хранения", Истина, "ЧЦ=15; ЧДЦ=3", "СвободныйОстаток", "Свободный остаток");
	
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоОстатокБазовыхЕдиниц", "В базовых ед.", Ложь, "ЧЦ=15; ЧДЦ=3", "Остаток", "Остаток");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоВРезервеБазовыхЕдиниц", "В базовых ед.", Ложь, "ЧЦ=15; ЧДЦ=3", "Зарезервировано", "Зарезервировано");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКПолучениюБазовыхЕдиниц", "В базовых ед.", Ложь, "ЧЦ=15; ЧДЦ=3", "КПолучению", "К получению");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКПередачеБазовыхЕдиниц", "В базовых ед.", Ложь, "ЧЦ=15; ЧДЦ=3", "КПередаче", "К передаче");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоЗаказаноУПоставщиковБазовыхЕдиниц", "В базовых ед.", Ложь, "ЧЦ=15; ЧДЦ=3", "ЗаказаноУПоставщиков", "Заказано у поставщиков");
	УниверсальныйОтчет.ДобавитьПоказатель("СвободныйОстатокБазовыхЕдиниц", "В базовых ед.", Ложь, "ЧЦ=15; ЧДЦ=3", "СвободныйОстаток", "Свободный остаток");
	
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоОстатокЕдиницОтчетов", "В ед. отчетов", Ложь, "ЧЦ=15; ЧДЦ=3", "Остаток", "Остаток");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоВРезервеЕдиницОтчетов", "В ед. отчетов", Ложь, "ЧЦ=15; ЧДЦ=3", "Зарезервировано", "Зарезервировано");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКПолучениюЕдиницОтчетов", "В ед. отчетов", Ложь, "ЧЦ=15; ЧДЦ=3", "КПолучению", "К получению");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКПередачеЕдиницОтчетов", "В ед. отчетов", Ложь, "ЧЦ=15; ЧДЦ=3", "КПередаче", "К передаче");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоЗаказаноУПоставщиковЕдиницОтчетов", "В ед. отчетов", Ложь, "ЧЦ=15; ЧДЦ=3", "ЗаказаноУПоставщиков", "Заказано у поставщиков");
	УниверсальныйОтчет.ДобавитьПоказатель("СвободныйОстатокЕдиницОтчетов", "В ед. отчетов", Ложь, "ЧЦ=15; ЧДЦ=3", "СвободныйОстаток", "Свободный остаток");
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Склад");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Номенклатура");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Склад");
	УниверсальныйОтчет.ДобавитьОтбор("Номенклатура");
	
	// Добавление предопределенных полей порядка отчета.
	// Необходимо вызывать для каждого добавляемого поля порядка.
	// УниверсальныйОтчет.ДобавитьПорядок(<ПутьКДанным>);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДаннымРодитель>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>, <Размещение>, <Положение>);
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);

КонецПроцедуры // СформироватьОтчет()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = Неопределено;
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли
