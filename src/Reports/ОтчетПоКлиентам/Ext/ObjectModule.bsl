#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	 УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "ТоварыНаСкладах";
	
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	// Описание исходного текста запроса.
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗапросПоВзаиморасчетам.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(ЗапросПоВзаиморасчетам.Организация) КАК ОрганизацияПредставление,
	|	ЗапросПоВзаиморасчетам.Контрагент КАК Контрагент,
	|	ПРЕДСТАВЛЕНИЕ(ЗапросПоВзаиморасчетам.Контрагент) КАК КонтрагентПредставление,
	|	ЗапросПоВзаиморасчетам.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ПРЕДСТАВЛЕНИЕ(ЗапросПоВзаиморасчетам.ДоговорКонтрагента) КАК ДоговорКонтрагентаПредставление,
	|	ЗапросПоВзаиморасчетам.ДокументСделка КАК ДокументСделка,
	|	ПРЕДСТАВЛЕНИЕ(ЗапросПоВзаиморасчетам.ДокументСделка) КАК ДокументСделкаПредставление,
	|	ЗапросПоВзаиморасчетам.Номенклатура КАК Номенклатура,
	|	ПРЕДСТАВЛЕНИЕ(ЗапросПоВзаиморасчетам.Номенклатура) КАК НоменклатураПредставление,
	|	ЗапросПоВзаиморасчетам.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(ЗапросПоВзаиморасчетам.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатурыПредставление,
	|	ЗапросПоВзаиморасчетам.ДокументДвижения КАК ДокументДвижения,
	|	ПРЕДСТАВЛЕНИЕ(ЗапросПоВзаиморасчетам.ДокументДвижения) КАК ДокументДвиженияПредставление,
	|	ЗапросПоВзаиморасчетам.СуммаНачальныйДолг КАК СуммаНачальныйДолг,
	|	ЗапросПоВзаиморасчетам.СуммаКонечныйДолг КАК СуммаКонечныйДолг,
	|	ЗапросПоВзаиморасчетам.СуммаПриход КАК СуммаПриход,
	|	ЗапросПоВзаиморасчетам.СуммаРасход КАК СуммаРасход,
	|	ЗапросПоВзаиморасчетам.СуммаОплаченоДеб КАК СуммаОплаченоДеб,
	|	ЗапросПоВзаиморасчетам.СуммаОплаченоКред КАК СуммаОплаченоКред,
	|	ЗапросПоВзаиморасчетам.КоличествоПриход КАК КоличествоПриход,
	|	ЗапросПоВзаиморасчетам.КоличествоРасход КАК КоличествоРасход,
	|	ЗапросПоВзаиморасчетам.КоличествоЕдиницДляОтчетовПриход КАК КоличествоЕдиницДляОтчетовПриход,
	|	ЗапросПоВзаиморасчетам.КоличествоЕдиницДляОтчетовРасход КАК КоличествоЕдиницДляОтчетовРасход,
	|	ВЫБОР
	|		КОГДА ЗапросПоВзаиморасчетам.КоличествоПриход = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЗапросПоВзаиморасчетам.СуммаПриход / ЗапросПоВзаиморасчетам.КоличествоПриход
	|	КОНЕЦ КАК ЦенаПриход,
	|	ВЫБОР
	|		КОГДА ЗапросПоВзаиморасчетам.КоличествоРасход = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЗапросПоВзаиморасчетам.СуммаРасход / ЗапросПоВзаиморасчетам.КоличествоРасход
	|	КОНЕЦ КАК ЦенаРасход
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
	|{ВЫБРАТЬ
	|	Организация.*,
	|	Контрагент.*,
	|	ДоговорКонтрагента.*,
	|	ДокументСделка.*,
	|	Номенклатура.*,
	|	ХарактеристикаНоменклатуры.*,
	|	ДокументДвижения.*,
	|	СуммаНачальныйДолг,
	|	СуммаКонечныйДолг,
	|	СуммаПриход,
	|	СуммаРасход,
	|	СуммаОплаченоДеб,
	|	СуммаОплаченоКред,
	|	КоличествоПриход,
	|	КоличествоРасход,
	|	КоличествоЕдиницДляОтчетовПриход,
	|	КоличествоЕдиницДляОтчетовРасход,
	|	ЦенаПриход,
	|	ЦенаРасход
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.Организация КАК Организация,
	|		ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.Контрагент КАК Контрагент,
	|		ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.Сделка КАК ДокументСделка,
	|		NULL КАК Номенклатура,
	|		NULL КАК ХарактеристикаНоменклатуры,
	|		NULL КАК ДокументДвижения,
	|		ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.СуммаУпрНачальныйОстаток КАК СуммаНачальныйДолг,
	|		ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.СуммаУпрКонечныйОстаток КАК СуммаКонечныйДолг,
	|		0 КАК СуммаПриход,
	|		0 КАК СуммаРасход,
	|		0 КАК СуммаОплаченоДеб,
	|		0 КАК СуммаОплаченоКред,
	|		0 КАК КоличествоПриход,
	|		0 КАК КоличествоРасход,
	|		0 КАК КоличествоЕдиницДляОтчетовПриход,
	|		0 КАК КоличествоЕдиницДляОтчетовРасход
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыСКонтрагентами.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Регистратор {&Периодичность}, , {ДоговорКонтрагента.Организация.* КАК Организация, ДоговорКонтрагента.Владелец.* КАК Контрагент, ДоговорКонтрагента.* КАК ДоговорКонтрагента, Сделка.* КАК ДокументСделка}) КАК ВзаиморасчетыСКонтрагентамиОстаткиИОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗакупкиОбороты.Организация КАК Организация,
	|		ЗакупкиОбороты.Контрагент КАК Контрагент,
	|		ЗакупкиОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		ЗакупкиОбороты.ЗаказПоставщику КАК ДокументСделка,
	|		ЗакупкиОбороты.Номенклатура КАК Номенклатура,
	|		ЗакупкиОбороты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ЗакупкиОбороты.ДокументЗакупки КАК ДокументДвижения,
	|		0 КАК СуммаНачальныйДолг,
	|		0 КАК СуммаКонечныйДолг,
	|		ЗакупкиОбороты.СтоимостьОборот КАК СуммаПриход,
	|		0 КАК СуммаРасход,
	|		0 КАК СуммаОплаченоДеб,
	|		0 КАК СуммаОплаченоКред,
	|		ЗакупкиОбороты.КоличествоОборот КАК КоличествоПриход,
	|		0 КАК КоличествоРасход,
	|		ВЫБОР 	КОГДА ЗакупкиОбороты.Номенклатура.ЕдиницаДляОтчетов.Коэффициент = 0
	|				ТОГДА 0
	|				ИНАЧЕ ЗакупкиОбороты.КоличествоОборот * ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ЗакупкиОбороты.Номенклатура.ЕдиницаДляОтчетов.Коэффициент
	|		КОНЕЦ КАК КоличествоЕдиницДляОтчетовПриход,
	|		0 КАК КоличествоЕдиницДляОтчетовРасход
	|	ИЗ
	|		РегистрНакопления.Закупки.Обороты(&ДатаНач, &ДатаКон, Регистратор {&Периодичность}, СтатусПартии = &ТоварКупленный {Организация.* КАК Организация, Контрагент.* КАК Контрагент, ДоговорКонтрагента.* КАК ДоговорКонтрагента, ЗаказПоставщику.* КАК ДокументСделка, Номенклатура.* КАК Номенклатура, ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры, ДокументЗакупки.* КАК ДокументДвижения}) КАК ЗакупкиОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПродажиОбороты.Организация КАК Организация,
	|		ПродажиОбороты.Контрагент КАК Контрагент,
	|		ПродажиОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		ПродажиОбороты.ЗаказПокупателя КАК ДокументСделка,
	|		ПродажиОбороты.Номенклатура КАК Номенклатура,
	|		ПродажиОбороты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ПродажиОбороты.ДокументПродажи КАК ДокументДвижения,
	|		0 КАК СуммаНачальныйДолг,
	|		0 КАК СуммаКонечныйДолг,
	|		0 КАК СуммаПриход,
	|		ПродажиОбороты.СтоимостьОборот КАК СуммаРасход,
	|		0 КАК СуммаОплаченоДеб,
	|		0 КАК СуммаОплаченоКред,
	|		0 КАК КоличествоПриход,
	|		ПродажиОбороты.КоличествоОборот КАК КоличествоРасход,
	|		0 КАК КоличествоЕдиницДляОтчетовПриход,
	|		ПродажиОбороты.КоличествоОборот * ПродажиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ПродажиОбороты.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК КоличествоЕдиницДляОтчетовРасход
	|	ИЗ
	|		РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, Регистратор {&Периодичность}, {Организация.* КАК Организация, Контрагент.* КАК Контрагент, ДоговорКонтрагента.* КАК ДоговорКонтрагента, ЗаказПокупателя.* КАК ДокументСделка, Номенклатура.* КАК Номенклатура, ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры, ДокументПродажи.* КАК ДокументДвижения}) КАК ПродажиОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДенежныхСредств.Организация КАК Организация,
	|		ВЫРАЗИТЬ(ДвиженияДенежныхСредств.Контрагент КАК Справочник.Контрагенты) КАК Контрагент,
	|		ДвиженияДенежныхСредств.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		ДвиженияДенежныхСредств.Сделка КАК ДокументСделка,
	|		NULL КАК Номенклатура,
	|		NULL КАК ХарактеристикаНоменклатуры,
	|		ДвиженияДенежныхСредств.ДокументДвижения КАК ДокументДвижения,
	|		0 КАК СуммаНачальныйДолг,
	|		0 КАК СуммаКонечныйДолг,
	|		0 КАК СуммаПриход,
	|		0 КАК СуммаРасход,
	|		ВЫБОР 	КОГДА ДвиженияДенежныхСредств.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Приход)
	|				ТОГДА ДвиженияДенежныхСредств.СуммаУпрОборот
	|				ИНАЧЕ 0.00 
	|		КОНЕЦ КАК СуммаОплаченоДеб,
	|		ВЫБОР 	КОГДА ДвиженияДенежныхСредств.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Расход)
	|				ТОГДА ДвиженияДенежныхСредств.СуммаУпрОборот 
	|				ИНАЧЕ 0.00
	|		КОНЕЦ КАК СуммаОплаченоКред,
	|		0 КАК КоличествоПриход,
	|		0 КАК КоличествоРасход,
	|		0 КАК КоличествоЕдиницДляОтчетовПриход,
	|		0 КАК КоличествоЕдиницДляОтчетовРасход
	|	ИЗ
	|		РегистрНакопления.ДвиженияДенежныхСредств.Обороты(&ДатаНач, &ДатаКон, Регистратор {&Периодичность}, {ДоговорКонтрагента.Организация.* КАК Организация, (ВЫРАЗИТЬ(ДоговорКонтрагента.Владелец КАК Справочник.Контрагенты)).* КАК Контрагент, ДоговорКонтрагента.* КАК ДоговорКонтрагента, Сделка.* КАК ДокументСделка}) КАК ДвиженияДенежныхСредств
	|	{ГДЕ
	|		ДвиженияДенежныхСредств.Регистратор.* КАК ДокументДвижения}) КАК ЗапросПоВзаиморасчетам
	|	//СОЕДИНЕНИЯ
	|{ГДЕ
	|	ЗапросПоВзаиморасчетам.Организация.* КАК Организация,
	|	ЗапросПоВзаиморасчетам.Контрагент.* КАК Контрагент,
	|	ЗапросПоВзаиморасчетам.ДоговорКонтрагента.* КАК ДоговорКонтрагента,
	|	ЗапросПоВзаиморасчетам.ДокументСделка.* КАК ДокументСделка,
	|	ЗапросПоВзаиморасчетам.Номенклатура.* КАК Номенклатура,
	|	ЗапросПоВзаиморасчетам.ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры,
	|	ЗапросПоВзаиморасчетам.ДокументДвижения.* КАК ДокументДвижения,
	|	ЗапросПоВзаиморасчетам.СуммаНачальныйДолг КАК СуммаНачальныйДолг,
	|	ЗапросПоВзаиморасчетам.СуммаКонечныйДолг КАК СуммаКонечныйДолг,
	|	ЗапросПоВзаиморасчетам.СуммаПриход КАК СуммаПриход,
	|	ЗапросПоВзаиморасчетам.СуммаРасход КАК СуммаРасход,
	|	ЗапросПоВзаиморасчетам.СуммаОплаченоДеб КАК СуммаОплаченоДеб,
	|	ЗапросПоВзаиморасчетам.СуммаОплаченоКред КАК СуммаОплаченоКред,
	|	ЗапросПоВзаиморасчетам.КоличествоПриход КАК КоличествоПриход,
	|	ЗапросПоВзаиморасчетам.КоличествоРасход КАК КоличествоРасход,
	|	ЗапросПоВзаиморасчетам.КоличествоЕдиницДляОтчетовПриход КАК КоличествоЕдиницДляОтчетовПриход,
	|	ЗапросПоВзаиморасчетам.КоличествоЕдиницДляОтчетовРасход КАК КоличествоЕдиницДляОтчетовРасход,
	|	ВЫБОР
	|		КОГДА ЗапросПоВзаиморасчетам.КоличествоПриход = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЗапросПоВзаиморасчетам.СуммаПриход / ЗапросПоВзаиморасчетам.КоличествоПриход
	|	КОНЕЦ КАК ЦенаПриход,
	|	ВЫБОР
	|		КОГДА ЗапросПоВзаиморасчетам.КоличествоРасход = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЗапросПоВзаиморасчетам.СуммаРасход / ЗапросПоВзаиморасчетам.КоличествоРасход
	|	КОНЕЦ КАК ЦенаРасход
	|	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ
	|}
	|{УПОРЯДОЧИТЬ ПО
	|	Организация.*,
	|	Контрагент.*,
	|	ДоговорКонтрагента.*,
	|	ДокументСделка.*,
	|	Номенклатура.*,
	|	ХарактеристикаНоменклатуры.*,
	|	ДокументДвижения.*,
	|	СуммаНачальныйДолг,
	|	СуммаКонечныйДолг,
	|	СуммаПриход,
	|	СуммаРасход,
	|	СуммаОплаченоДеб,
	|	СуммаОплаченоКред,
	|	КоличествоПриход,
	|	КоличествоРасход,
	|	КоличествоЕдиницДляОтчетовПриход,
	|	КоличествоЕдиницДляОтчетовРасход,
	|	ЦенаПриход,
	|	ЦенаРасход
	|//ПСЕВДОНИМЫ_СВОЙСТВА
	|//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|ИТОГИ
	|	СУММА(СуммаНачальныйДолг),
	|	СУММА(СуммаКонечныйДолг),
	|	СУММА(СуммаПриход),
	|	СУММА(СуммаРасход),
	|	СУММА(СуммаОплаченоДеб),
	|	СУММА(СуммаОплаченоКред),
	|	СУММА(КоличествоПриход),
	|	СУММА(КоличествоРасход),
	|	СУММА(КоличествоЕдиницДляОтчетовПриход),
	|	СУММА(КоличествоЕдиницДляОтчетовРасход),
	|	ВЫБОР КОГДА Номенклатура Есть NULL ТОГДА 0 ИНАЧЕ МАКСИМУМ(ЦенаПриход) КОНЕЦ КАК ЦенаПриход,
	|	ВЫБОР КОГДА Номенклатура Есть NULL ТОГДА 0 ИНАЧЕ МАКСИМУМ(ЦенаРасход) КОНЕЦ КАК ЦенаРасход
	|//ИТОГИ_СВОЙСТВА
	|//ИТОГИ_КАТЕГОРИИ
	|ПО
	|	ОБЩИЕ, Номенклатура
	|{ИТОГИ ПО
	|	Контрагент.*,
	|	ДоговорКонтрагента.*,
	|	Организация.*,
	|	ДокументСделка.*,
	|	Номенклатура.*,
	|	ХарактеристикаНоменклатуры.*,
	|	ДокументДвижения.*
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}";
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ЗапросПоВзаиморасчетам.Организация", "Организация", "Организация", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Организации);
        УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ЗапросПоВзаиморасчетам.Номенклатура", "Номенклатура", "Номенклатура", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
        УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ЗапросПоВзаиморасчетам.ХарактеристикаНоменклатуры", "ХарактеристикаНоменклатуры", "Характеристика номенклатуры", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ЗапросПоВзаиморасчетам.Контрагент", "Контрагент", "Контрагент", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ЗапросПоВзаиморасчетам.ДоговорКонтрагента", "ДоговорКонтрагента", "Договор контрагента", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ДоговорыКонтрагентов);
        
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	ВалютаУпр = глЗначениеПеременной("ВалютаУправленческогоУчета").Наименование;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Организация", "Организация");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Контрагент", "Контрагент");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДоговорКонтрагента", "Договор контрагента");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДокументСделка", "Сделка");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Номенклатура", "Номенклатура");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ХарактеристикаНоменклатуры", "Характеристика номенклатуры");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДокументДвижения", "Документ движения средств");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаНачальныйДолг", "Долг на начало");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаОплаченоДеб", "Всего (приход от контрагента)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаОплаченоКред", "Всего (расход на контрагента)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаПриход", "Сумма в " + ВалютаУпр + " (приход от контрагента)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаРасход", "Сумма в " + ВалютаУпр + " (расход на контрагента)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоПриход", "Количество (ед. хранения) (приход от контрагента)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоРасход", "Количество (ед. хранения) (расход на контрагента)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоЕдиницДляОтчетовПриход", "Количество (ед. отчетов) (приход от контрагента)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоЕдиницДляОтчетовРасход", "Количество (ед. отчетов) (расход на контрагента)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаКонечныйДолг", "Долг на конец");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЦенаПриход", "Цена (приход от контрагента)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЦенаРасход", "Цена (расход на контрагента)");
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаНачальныйДолг", "Долг на начало", Истина, "ЧЦ=15; ЧДЦ=2");
	//УниверсальныйОтчет.ДобавитьПоказатель("СуммаОплаченоДеб", "Всего", Истина, "ЧЦ=15; ЧДЦ=2", "Приход", "Приход от контрагента");
	//УниверсальныйОтчет.ДобавитьПоказатель("СуммаПриход", "Сумма в " + ВалютаУпр, Истина, "ЧЦ=15; ЧДЦ=2", "Приход", "Приход от контрагента");
	//УниверсальныйОтчет.ДобавитьПоказатель("КоличествоПриход", "Количество (ед. хранения)", Истина, "ЧЦ=15; ЧДЦ=3", "Приход", "Приход от контрагента");
	//УниверсальныйОтчет.ДобавитьПоказатель("КоличествоЕдиницДляОтчетовПриход", "Количество (ед. отчетов)", Ложь, "ЧЦ=15; ЧДЦ=3", "Приход", "Приход от контрагента");
	//УниверсальныйОтчет.ДобавитьПоказатель("ЦенаПриход", "Цена", Истина, "ЧЦ=15; ЧДЦ=2", "Приход", "Приход от контрагента");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаОплаченоДеб", "Всего", Истина, "ЧЦ=15; ЧДЦ=2", "Приход", "Поступление ТМЦ (работ, услуг)");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаПриход", "Сумма в " + ВалютаУпр, Истина, "ЧЦ=15; ЧДЦ=2", "Приход", "Поступление ТМЦ (работ, услуг)");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоПриход", "Количество (ед. хранения)", Истина, "ЧЦ=15; ЧДЦ=3", "Приход", "Поступление ТМЦ (работ, услуг)");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоЕдиницДляОтчетовПриход", "Количество (ед. отчетов)", Ложь, "ЧЦ=15; ЧДЦ=3", "Приход", "Поступление ТМЦ (работ, услуг)");
	УниверсальныйОтчет.ДобавитьПоказатель("ЦенаПриход", "Цена", Истина, "ЧЦ=15; ЧДЦ=2", "Приход", "Поступление ТМЦ (работ, услуг)");
	
	//УниверсальныйОтчет.ДобавитьПоказатель("СуммаОплаченоКред", "Всего", Истина, "ЧЦ=15; ЧДЦ=2", "Расход", "Расход на контрагента");
	//УниверсальныйОтчет.ДобавитьПоказатель("СуммаРасход", "Сумма в " + ВалютаУпр, Истина, "ЧЦ=15; ЧДЦ=2", "Расход", "Расход на контрагента");
	//УниверсальныйОтчет.ДобавитьПоказатель("КоличествоРасход", "Количество (ед. хранения)", Истина, "ЧЦ=15; ЧДЦ=3", "Расход", "Расход на контрагента");
	//УниверсальныйОтчет.ДобавитьПоказатель("КоличествоЕдиницДляОтчетовРасход", "Количество (ед. отчетов)", Ложь, "ЧЦ=15; ЧДЦ=3", "Расход", "Расход на контрагента");
	//УниверсальныйОтчет.ДобавитьПоказатель("ЦенаРасход", "Цена", Истина, "ЧЦ=15; ЧДЦ=2", "Расход", "Расход от контрагента");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаОплаченоКред", "Всего", Истина, "ЧЦ=15; ЧДЦ=2", "Расход", "Реализация ТМЦ (работ, услуг)");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаРасход", "Сумма в " + ВалютаУпр, Истина, "ЧЦ=15; ЧДЦ=2", "Расход", "Реализация ТМЦ (работ, услуг)");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоРасход", "Количество (ед. хранения)", Истина, "ЧЦ=15; ЧДЦ=3", "Расход", "Реализация ТМЦ (работ, услуг)");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоЕдиницДляОтчетовРасход", "Количество (ед. отчетов)", Ложь, "ЧЦ=15; ЧДЦ=3", "Расход", "Реализация ТМЦ (работ, услуг)");
	УниверсальныйОтчет.ДобавитьПоказатель("ЦенаРасход", "Цена", Истина, "ЧЦ=15; ЧДЦ=2", "Расход", "Реализация ТМЦ (работ, услуг)");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаКонечныйДолг",  "Долг на конец",        Истина, "ЧЦ=15; ЧДЦ=2");
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Контрагент");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ДоговорКонтрагента");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Организация");
	УниверсальныйОтчет.ДобавитьОтбор("Контрагент");
	УниверсальныйОтчет.ДобавитьОтбор("ДоговорКонтрагента");
	
	// Добавление предопределенных полей порядка отчета.
	// Необходимо вызывать для каждого добавляемого поля порядка.
	// УниверсальныйОтчет.ДобавитьПорядок(<ПутьКДанным>);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДаннымРодитель>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>, <Размещение>, <Положение>);
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	Параметры = УниверсальныйОтчет.ПостроительОтчета.Параметры;
	Параметры.Вставить( "ТоварКупленный", Перечисления.СтатусыПартийТоваров.Купленный);
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);

КонецПроцедуры // СформироватьОтчет()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = Неопределено;
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли
