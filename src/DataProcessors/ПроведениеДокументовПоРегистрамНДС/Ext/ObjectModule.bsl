Перем мВалютаРегламентированногоУчета Экспорт;

// Процедура проведения всех необходимых документов по регистрам подсистемы НДС.
//
Процедура ПровестиДокументы() Экспорт
	
	ПровестиПлатежныеДокументы();
	
	ПровестиДокументыПоРегистрамНДС();
	УправлениеЗапасамиПартионныйУчет.СписаниеНДСПартииТоваров(ДатаНач, ДатаКон, ПроводитьДокументыВыбранногоПериода);
	ПровестиКорректировкиПоРегистрамНДС();
	ПровестиПодтверждениеНулевойСтавки();
	
КонецПроцедуры // ПровестиДокументы()
		 
// Процедура очищает движения документа по регистрам подсистемы НДС.
//
Процедура ОчиститьДвиженияРегистровНДС(ДокументОбъект)
	
	Для Каждого Движение Из ДокументОбъект.Движения Цикл
		
		Если ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСВключенныйВСтоимость")
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСКосвенныеРасходы")
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСНачисленный")
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСПартииТоваров")
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСПредъявленный")
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСПредъявленныйРеализация0")
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСРасчетыСПокупателями")
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСРасчетыСПоставщиками")
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСРеализация0")
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСсАвансов") 
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСЗаписиКнигиПокупок")
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСЗаписиКнигиПродаж") Тогда
		
		    Движение.Прочитать();
		 	Если Движение.Количество() > 0 Тогда
				Движение.Очистить();
				Движение.Записать(Истина);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ОчиститьДвиженияРегистровНДС()

// Процедура записывает движения документа по регистрам подсистемы НДС.
//
Процедура ЗаписатьДвиженияРегистровНДС(ДокументОбъект)
	
	Для Каждого Движение Из ДокументОбъект.Движения Цикл
		
		Если ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСВключенныйВСтоимость")
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСКосвенныеРасходы")
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСНачисленный")
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСПартииТоваров")
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСПредъявленный")
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСПредъявленныйРеализация0")
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСРасчетыСПокупателями")
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСРасчетыСПоставщиками")
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСРеализация0")
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСсАвансов") 
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСЗаписиКнигиПокупок")
		 ИЛИ ТипЗнч(Движение) = Тип("РегистрНакопленияНаборЗаписей.НДСЗаписиКнигиПродаж") Тогда
		
			Если Движение.Количество() > 0 Тогда
		 		Движение.Записать(Истина);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ОчиститьДвиженияРегистровНДС()

// Процедура перепроводит документы по регистрам подсистемы НДС.
//
Процедура ПровестиДокументыПоРегистрамНДС()
	
	Перем Заголовок, СтруктураШапкиДокумента, СтруктураШапкиДокументаВалюта, СтруктураШапкиДокументаРубли;
	Перем ТаблицаПоТоварам, ТаблицаПоТоварамВалюта, ТаблицаПоПрочее, ТаблицаПоУслугам, ТаблицаПоТаре, ТаблицаПоТоварамВозврат, ТаблицаПоТоварамВзаиморасчеты;
	Перем ТаблицаРасчетыСПокупателямиКредиторскаяЗадолженность, ТаблицаРасчетыСПокупателямиДебиторскаяЗадолженность,
		  ТаблицаРасчетыСПоставщикамиКредиторскаяЗадолженность, ТаблицаРасчетыСПоставщикамиДебиторскаяЗадолженность;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.АвансовыйОтчет.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.АвансовыйОтчет.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
	
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоТоварам, ТаблицаПоПрочее);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
		
		ТаблицыДляПроведенияПоНДС = Новый Структура();
		ТаблицыДляПроведенияПоНДС.Вставить("ТаблицаПоТоварам", ТаблицаПоТоварам);
		ТаблицыДляПроведенияПоНДС.Вставить("ТаблицаПоПрочее",  ТаблицаПоПрочее);

		Отказ = Ложь;
		ДокументОбъект.ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокумента, ТаблицыДляПроведенияПоНДС, Отказ, Заголовок);
		
		ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		
	КонецЦикла;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.ВозвратТоваровОтПокупателя.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.ВозвратТоваровОтПокупателя.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента, РежимПроведенияДокумента.Неоперативный);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоТоварам);
		ДокументОбъект.ПодготовитьПараметрыУчетнойПолитики(Отказ, Заголовок);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
		
		Если СтруктураШапкиДокумента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем Тогда
								  
			СтруктураТаблицыВыручки = Новый структура("НомерСтроки, Номенклатура, ВидЦенности, Ценность, ДокументПартии, 
													  |СтавкаНДС, Сумма, СуммаВал, НДС, НДСВал, СуммаБезНДС, СуммаБезНДСВал,Комиссионный,Комитент,ДоговорКомиссии,ВалютаРасчетовСКомитентом,СуммаСписания, Количество");

			ТаблицаВыручки = ОбщегоНазначения.СформироватьТаблицуЗначений(ТаблицаПоТоварам,СтруктураТаблицыВыручки,,Истина);
			
			ТаблицаВыручки.ЗаполнитьЗначения(Ложь, "Комиссионный");
			ТаблицаВыручки.ЗаполнитьЗначения(0,    "Количество");
									  
			ДокументОбъект.ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокумента, ТаблицаВыручки, Отказ, Заголовок);
			
		КонецЕсли;
		
		ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		
	КонецЦикла;

	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.ВозвратТоваровПоставщику.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.ВозвратТоваровПоставщику.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента, Неопределено);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоТоварам);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
		
		Если СтруктураШапкиДокумента.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
								  
			ТаблицыДляПроведенияПоНДС = Новый Структура();
			ТаблицыДляПроведенияПоНДС.Вставить("ТаблицаПоТоварам", ТаблицаПоТоварам);
			
			ТаблицаАвансов = Новый ТаблицаЗначений;
			ДокументОбъект.ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокумента, ТаблицыДляПроведенияПоНДС, ТаблицаАвансов, Отказ, Заголовок);
			
		КонецЕсли;
		
		ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		
	КонецЦикла;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.ВозвратТоваровПоставщикуИзНТТ.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.ВозвратТоваровПоставщикуИзНТТ.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента, Неопределено);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоТоварам, Неопределено);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
		
		Если СтруктураШапкиДокумента.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
								  
			ТаблицыДляПроведенияПоНДС = Новый Структура();
			ТаблицыДляПроведенияПоНДС.Вставить("ТаблицаПоТоварам", ТаблицаПоТоварам);
			
			ТаблицаАвансов = Новый ТаблицаЗначений;
			ДокументОбъект.ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокумента, ТаблицыДляПроведенияПоНДС, ТаблицаАвансов, Отказ, Заголовок);
			
		КонецЕсли;
		
		ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		
	КонецЦикла;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.ВосстановлениеНДС.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.ВосстановлениеНДС.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоПрочее);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
		
		ДокументОбъект.ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоПрочее, Отказ, Заголовок);
		
		ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		
	КонецЦикла;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.ГТДИмпорт.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.ГТДИмпорт.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента, СтруктураШапкиДокументаРубли, СтруктураШапкиДокументаВалюта);
		ДокументОбъект.СформироватьТаблицыПоДокументуДляНДС(СтруктураШапкиДокумента, СтруктураШапкиДокументаРубли, СтруктураШапкиДокументаВалюта, ТаблицаПоТоварам, ТаблицаПоТоварамВалюта);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
		
		ДокументОбъект.ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокументаРубли, ТаблицаПоТоварам, Отказ);
		ДокументОбъект.ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокументаВалюта, ТаблицаПоТоварамВалюта, Отказ);
			
		ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		
	КонецЦикла;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.КорректировкаДолга.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.КорректировкаДолга.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоПрочее,
	                            ТаблицаРасчетыСПокупателямиКредиторскаяЗадолженность, ТаблицаРасчетыСПокупателямиДебиторскаяЗадолженность,
	                            ТаблицаРасчетыСПоставщикамиКредиторскаяЗадолженность, ТаблицаРасчетыСПоставщикамиДебиторскаяЗадолженность);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
		
		ДокументОбъект.ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокумента, ТаблицаПоПрочее, Отказ, Заголовок);
		
		ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		
	КонецЦикла;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.ОприходованиеТоваров.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.ОприходованиеТоваров.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоТоварам);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
		
		ДокументОбъект.ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокумента, ТаблицаПоТоварам, Отказ, Заголовок);
		
		ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		
	КонецЦикла;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.ОтражениеПоступленияТоваровИУслугНДС.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.ОтражениеПоступленияТоваровИУслугНДС.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоТоварам);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
		
		ДокументОбъект.ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокумента, ТаблицаПоТоварам, Отказ, Заголовок);
		
		ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		
	КонецЦикла;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.ОтражениеРеализацииТоваровИУслугНДС.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.ОтражениеРеализацииТоваровИУслугНДС.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоТоварам);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
		
		ДокументОбъект.ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокумента, ТаблицаПоТоварам, Отказ, Заголовок);
		
		ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		
	КонецЦикла;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.ОтчетКомиссионераОПродажах.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.ОтчетКомиссионераОПродажах.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если НЕ ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоУслугам, ТаблицаПоТоварам, ТаблицаПоПрочее);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
		
		ТаблицаАвансов = Новый ТаблицаЗначений;
		ДокументОбъект.ДвиженияРегистровПодсистемыНДСПоступление(СтруктураШапкиДокумента, ТаблицаПоУслугам, ТаблицаАвансов, Отказ);
		ДокументОбъект.ДвиженияРегистровПодсистемыНДСРеализация(СтруктураШапкиДокумента, ТаблицаПоТоварам, Отказ, Заголовок); 
		ДокументОбъект.ДвиженияПоРегистрамНДСДенежныеСредства(СтруктураШапкиДокумента, ТаблицаПоПрочее, Отказ, Заголовок);
		ДокументОбъект.СформироватьДвиженияАвансыПоДоговорамКомиссии(СтруктураШапкиДокумента, ТаблицаПоПрочее);
		
		ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		
	КонецЦикла;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.ОтчетКомитентуОПродажах.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.ОтчетКомитентуОПродажах.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоТоварам);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
		
		ТаблицаАвансов = Новый ТаблицаЗначений;
		ТаблицаАвансов.Колонки.Добавить("ДокументОплаты");
		ДокументОбъект.ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокумента, ТаблицаПоТоварам, Отказ);
		
		ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		
	КонецЦикла;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.ОтчетОРозничныхПродажах.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.ОтчетОРозничныхПродажах.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоТоварам);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
		
		СтруктураТаблицыВыручки = Новый структура("НомерСтроки, Номенклатура, Услуга, ВидЦенности, Ценность, Партия,СтавкаНДС, Сумма, СуммаВал,
												  |НДС, НДСВал, СуммаБезНДС, СуммаБезНДСВал,Комиссионный,Комитент,ДоговорКомиссии,
												  |ВалютаРасчетовСКомитентом,СуммаСписания, Количество");

		ТаблицаВыручки = ОбщегоНазначения.СформироватьТаблицуЗначений(ТаблицаПоТоварам, СтруктураТаблицыВыручки,,Истина);
		
		ТаблицаВыручки.ЗаполнитьЗначения(Ложь, "Комиссионный");
		ТаблицаВыручки.ЗаполнитьЗначения(0,    "Количество");
		ДокументОбъект.ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокумента, ТаблицаВыручки, Отказ, Заголовок);
		
		ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		
	КонецЦикла;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.ПоступлениеДопРасходов.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.ПоступлениеДопРасходов.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента, РежимПроведенияДокумента.Неоперативный);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоТоварам, Неопределено);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
		
		ТаблицыДокумента = Новый Структура();
		ТаблицыДокумента.Вставить("ТаблицаПоТоварам",ТаблицаПоТоварам);
		ТаблицаАвансов = Новый ТаблицаЗначений();
		ДокументОбъект.ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокумента, ТаблицыДокумента, ТаблицаАвансов, Отказ);
		
		ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		
	КонецЦикла;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.ПоступлениеТоваровУслуг.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.ПоступлениеТоваровУслуг.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоТоварам, ТаблицаПоУслугам, ТаблицаПоТаре);
		ДокументОбъект.ПодготовитьПараметрыУчетнойПолитики(Отказ, Заголовок);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
		
		Если СтруктураШапкиДокумента.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда

			ТаблицыДокумента = Новый Структура();
			ТаблицыДокумента.Вставить("ТаблицаПоТоварам",ТаблицаПоТоварам);
			ТаблицыДокумента.Вставить("ТаблицаПоУслугам",ТаблицаПоУслугам);

			ТаблицаАвансов = Новый ТаблицаЗначений;
			ДокументОбъект.ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокумента, ТаблицыДокумента, ТаблицаАвансов, Отказ, Заголовок);
			
			ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.ПоступлениеТоваровУслугВНТТ.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.ПоступлениеТоваровУслугВНТТ.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента, РежимПроведенияДокумента.Неоперативный);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоТоварам, ТаблицаПоУслугам);
		ДокументОбъект.ПодготовитьПараметрыУчетнойПолитики(Отказ, Заголовок);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
		
		Если СтруктураШапкиДокумента.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда

			ТаблицыДокумента = Новый Структура();
			ТаблицыДокумента.Вставить("ТаблицаПоТоварам",ТаблицаПоТоварам);
			ТаблицыДокумента.Вставить("ТаблицаПоУслугам",ТаблицаПоУслугам);

			ТаблицаАвансов = Новый ТаблицаЗначений;
			ДокументОбъект.ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокумента, ТаблицыДокумента, ТаблицаАвансов, Отказ, Заголовок);
			
			ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.РеализацияТоваровУслуг.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.РеализацияТоваровУслуг.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоТоварам, ТаблицаПоУслугам, ТаблицаПоТаре);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли

		Если СтруктураШапкиДокумента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем Тогда
								  
			СтруктураТаблицыВыручки = Новый структура("НомерСтроки, Номенклатура, ВидЦенности, Ценность, Партия, 
													  |СтавкаНДС, Сумма, СуммаВал, НДС, НДСВал, СуммаБезНДС, СуммаБезНДСВал,
													  |Комиссионный,Комитент,ДоговорКомиссии,ВалютаРасчетовСКомитентом,СуммаСписания, Количество");

			//Формируем таблицу выручки с нужной структурой и заполняем по таблице услуг
			ТаблицаВыручки = ОбщегоНазначения.СформироватьТаблицуЗначений(ТаблицаПоУслугам,СтруктураТаблицыВыручки,,Истина);
			
			ВыручкаПоТоварам = ОбщегоНазначения.СформироватьТаблицуЗначений(ТаблицаПоТоварам,СтруктураТаблицыВыручки,,Истина);
			ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ВыручкаПоТоварам,ТаблицаВыручки );
			
			ТаблицаВыручки.ЗаполнитьЗначения(Ложь, "Комиссионный");
			ТаблицаВыручки.ЗаполнитьЗначения(0,    "Количество");
									  
			ТаблицаАвансов = Новый ТаблицаЗначений;
			ТаблицаАвансов.Колонки.Добавить("ДокументОплаты");
			ДокументОбъект.ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокумента, ТаблицаПоУслугам, ТаблицаВыручки, ТаблицаАвансов, Отказ, Заголовок);
			
			ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.РаспределениеНДСКосвенныхРасходов.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.РаспределениеНДСКосвенныхРасходов.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
	
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоТоварам);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
		
		Отказ = Ложь;
		ДокументОбъект.ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокумента, ТаблицаПоТоварам, Отказ, Заголовок);
		
		ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		
	КонецЦикла;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.СчетФактураВыданный.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.СчетФактураВыданный.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если Не ДокументВыборка.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДокументВыборка.СформированПриВводеНачальныхОстатковНДС Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);
		ДокументОбъект.ПодготовитьТаблицыДокумента(ТаблицаВыручки, ТаблицаАвансов);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
				
		УчетНДСФормированиеДвижений.СформироватьДвиженияСчетФактураВыданныйНаАванс(СтруктураШапкиДокумента, ТаблицаАвансов);
		УчетНДСФормированиеДвижений.ПровестиИсправленныйВыданныйСчетФактуру(СтруктураШапкиДокумента, ТаблицаАвансов);
			
		ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		
	КонецЦикла;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.СчетФактураПолученный.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.СчетФактураПолученный.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если Не ДокументВыборка.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАванс Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДокументВыборка.СформированПриВводеНачальныхОстатковНДС Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента, Ложь);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаАвансов);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
				
		УчетНДСФормированиеДвижений.СформироватьДвиженияСчетФактураПолученныйНаАванс(СтруктураШапкиДокумента, ТаблицаАвансов);
		УчетНДСФормированиеДвижений.ПровестиИсправленныйПолученныйСчетФактуру(СтруктураШапкиДокумента, ТаблицаАвансов);
			
		ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		
	КонецЦикла;
	
КонецПроцедуры // ПровестиДокументыПоРегистрамНДС()

// Процедура перепроводит документы по регистрам подсистемы НДС.
//
Процедура ПровестиКорректировкиПоРегистрамНДС()
	
	Перем Заголовок, СтруктураШапкиДокумента, СтруктураШапкиДокументаВалюта, СтруктураШапкиДокументаРубли;
	Перем ТаблицаПоТоварам, ТаблицаПоТоварамВалюта, ТаблицаПоПрочее, ТаблицаПоУслугам, ТаблицаПоТаре, ТаблицаПоТоварамВозврат, ТаблицаПоТоварамВзаиморасчеты, ТаблицаПоТоварамНДС;
	Перем ТаблицаРасчетыСПокупателямиКредиторскаяЗадолженность, ТаблицаРасчетыСПокупателямиДебиторскаяЗадолженность,
		  ТаблицаРасчетыСПоставщикамиКредиторскаяЗадолженность, ТаблицаРасчетыСПоставщикамиДебиторскаяЗадолженность;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.КорректировкаПоступления.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.КорректировкаПоступления.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Если НЕ (ДокументОбъект.КорректироватьБУиНУ ИЛИ ДокументОбъект.КорректироватьНДС) Тогда
			Продолжить;
		КонецЕсли;

		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоТоварам, ТаблицаПоУслугам);
		ДокументОбъект.ПодготовитьПараметрыУчетнойПолитики(Отказ, Заголовок);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
		
		Если СтруктураШапкиДокумента.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СКомитентом 
			ИЛИ ТипЗнч(СтруктураШапкиДокумента.ДокументПоступленияСсылка) = Тип("ДокументСсылка.ОтчетКомитентуОПродажах") Тогда

			ТаблицыДокумента = Новый Структура();
			ТаблицыДокумента.Вставить("ТаблицаПоТоварам",ТаблицаПоТоварам);
			ТаблицыДокумента.Вставить("ТаблицаПоУслугам",ТаблицаПоУслугам);

			ТаблицаАвансов = Неопределено;
			ДокументОбъект.ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокумента, ТаблицыДокумента, ТаблицаАвансов, Отказ, Заголовок);
			
			ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.КорректировкаРеализации.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.КорректировкаРеализации.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Если НЕ (ДокументОбъект.КорректироватьБУиНУ ИЛИ ДокументОбъект.КорректироватьНДС) Тогда
			Продолжить;
		КонецЕсли;

		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоТоварам, ТаблицаПоУслугам, ТаблицаПоТоварамВозврат, ТаблицаПоТоварамВзаиморасчеты, ТаблицаПоТоварамНДС);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли

		Если СтруктураШапкиДокумента.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером 
			ИЛИ ТипЗнч(СтруктураШапкиДокумента.ДокументРеализацииСсылка) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") Тогда
								  
			СтруктураТаблицыВыручки = Новый структура("НомерСтроки, Номенклатура, ВидЦенности, Ценность, Партия, 
													  |СтавкаНДС, Сумма, СуммаВал, НДС, НДСВал, СуммаБезНДС, СуммаБезНДСВал,
													  |Комиссионный,Комитент,ДоговорКомиссии,ВалютаРасчетовСКомитентом,СуммаСписания, Количество");

			//Формируем таблицу выручки с нужной структурой и заполняем по таблице услуг
			ТаблицаВыручки = ОбщегоНазначения.СформироватьТаблицуЗначений(ТаблицаПоУслугам,СтруктураТаблицыВыручки,,Истина);
			
			ВыручкаПоТоварам = ОбщегоНазначения.СформироватьТаблицуЗначений(ТаблицаПоТоварамНДС,СтруктураТаблицыВыручки,,Истина);
			ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ВыручкаПоТоварам,ТаблицаВыручки );
			
			ТаблицаВыручки.ЗаполнитьЗначения(Ложь, "Комиссионный");
			ТаблицаВыручки.ЗаполнитьЗначения(0,    "Количество");
									  
			ТаблицаАвансов = Новый ТаблицаЗначений;
			ТаблицаАвансов.Колонки.Добавить("ДокументОплаты");
			ДокументОбъект.ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокумента, ТаблицаПоУслугам, ТаблицаВыручки, ТаблицаАвансов, Отказ, Заголовок);
			
			ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры // ПровестиДокументыПоРегистрамНДС()

// Процедура перепроводит документ ПодтверждениеНулевойСтавкиНДС (после проведения по партиям).
//
Процедура ПровестиПодтверждениеНулевойСтавки()
	
	Перем Заголовок, СтруктураШапкиДокумента;
	Перем ТаблицаПоДокументам;
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		ДокументВыборка = Документы.ПодтверждениеНулевойСтавкиНДС.Выбрать(ДатаНач, КонецДня(ДатаКон));
	Иначе
		ДокументВыборка = Документы.ПодтверждениеНулевойСтавкиНДС.Выбрать();
	КонецЕсли;
	Пока ДокументВыборка.Следующий() Цикл
		
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		
		ОчиститьДвиженияРегистровНДС(ДокументОбъект);
		
		Отказ = Ложь;
		ДокументОбъект.ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента, Отказ);
		ДокументОбъект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоДокументам);
		
		#Если Клиент Тогда
		Состояние(Заголовок);
		#КонецЕсли
		
		Если Не Отказ Тогда
			ДокументОбъект.ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоДокументам, Отказ, Заголовок);
			ЗаписатьДвиженияРегистровНДС(ДокументОбъект);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
	
// Процедура проводит платежный документ по регистрам подсистемы НДС.
//
Процедура ПровестиПлатежныйДокументПоРегистрамНДС(ДокументСсылка)
	
	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ДокументСсылка);
	
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(СтруктураШапкиДокумента);
	#Если Клиент Тогда
	Состояние(Заголовок);
	#КонецЕсли
	
	Объект = ДокументСсылка.ПолучитьОбъект();
	
	ОчиститьДвиженияРегистровНДС(Объект);

	Если Не ((ТипЗнч(Объект) = Тип("ДокументОбъект.АвансовыйОтчет") Или (Объект.Оплачено И УправлениеДенежнымиСредствами.ЕстьРасчетыСКонтрагентами(Объект.ВидОперации))) И Объект.ОтражатьВБухгалтерскомУчете ) Тогда
		Возврат;
	КонецЕсли;
	СтруктураПараметров = БухгалтерскийУчетРасчетовСКонтрагентами.ПодготовкаСтруктурыПараметровДляДвиженияДенег(ДокументСсылка, мВалютаРегламентированногоУчета);
	
	НаправлениеДвижения = БухгалтерскийУчетРасчетовСКонтрагентами.ОпределениеНаправленияДвиженияДляДокументаДвиженияДенежныхСредств(СтруктураПараметров.Регистратор.Метаданные().Имя).Направление;
	
	РеестрПроводок = СтруктураПараметров.Таблица;
	РеестрПроводок.Колонки.Добавить("РезультатРаспределения",Новый ОписаниеТипов("Булево"));
		
	Если СтруктураШапкиДокумента.ВидДокумента = "АвансовыйОтчет" Тогда
		ЭтоВозврат = Ложь;
	Иначе
		ЭтоВозврат = (БухгалтерскийУчетРасчетовСКонтрагентами.ОпределениеНаправленияДвиженияДляДокументаДвиженияДенежныхСредств(СтруктураШапкиДокумента.ВидДокумента,СтруктураШапкиДокумента.ВидОперации).РасчетыВозврат = Перечисления.РасчетыВозврат.Возврат);
	КонецЕсли;
		
	//1. Регистрируем оплату в регистре расчетов для НДС 
	Если не (НаправлениеДвижения = "Поступление") = ЭтоВозврат тогда 
		УчетНДСФормированиеДвижений.РегистрацияОплаты_НДСРасчетыСПокупателями(СтруктураШапкиДокумента, РеестрПроводок, Объект.Движения,ЭтоВозврат);
	Иначе
		УчетНДСФормированиеДвижений.РегистрацияОплаты_НДСРасчетыСПоставщиками(СтруктураШапкиДокумента, РеестрПроводок, Объект.Движения,ЭтоВозврат);
	КонецЕсли;
	
	ЗаписатьДвиженияРегистровНДС(Объект);
	
КонецПроцедуры // ПровестиПлатежныйДокументПоРегистрамНДС()

// Процедура проводит все платежные документы по регистрам подсистемы НДС.
//
Процедура ПровестиПлатежныеДокументы()
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить("АвансовыйОтчет"); 
	МассивОбъектов.Добавить("АккредитивПереданный"); 
	МассивОбъектов.Добавить("АккредитивПолученный"); 
	МассивОбъектов.Добавить("ИнкассовоеПоручениеПереданное"); 
	МассивОбъектов.Добавить("ИнкассовоеПоручениеПолученное"); 
	МассивОбъектов.Добавить("ПлатежноеПоручениеВходящее"); 
	МассивОбъектов.Добавить("ПлатежноеПоручениеИсходящее"); 
	МассивОбъектов.Добавить("ПлатежноеТребованиеВыставленное"); 
	МассивОбъектов.Добавить("ПлатежноеТребованиеПолученное"); 
	МассивОбъектов.Добавить("ПлатежныйОрдерПоступлениеДенежныхСредств"); 
	МассивОбъектов.Добавить("ПлатежныйОрдерСписаниеДенежныхСредств"); 
	МассивОбъектов.Добавить("ПриходныйКассовыйОрдер"); 
	МассивОбъектов.Добавить("РасходныйКассовыйОрдер");
	
	Если ПроводитьДокументыВыбранногоПериода Тогда
		УсловиеПериод = "И Дата МЕЖДУ &ДатаНач И &ДатаКон";
	Иначе
		УсловиеПериод = "";
	КонецЕсли;
	
	ТекстЗапроса = "";
	Для Каждого ДокИзМассива Из МассивОбъектов Цикл
		Если ТекстЗапроса <> "" Тогда
			ТекстЗапроса = ТекстЗапроса + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС;
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ Ссылка ИЗ Документ." + ДокИзМассива + " ГДЕ Проведен " + УсловиеПериод;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ДатаНач",       ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон",       КонецДня(ДатаКон));
	
	ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Строка Из ТаблицаДокументов Цикл
		ПровестиПлатежныйДокументПоРегистрамНДС(Строка.Ссылка);
	КонецЦикла;
	
КонецПроцедуры // ПровестиПлатежныеДокументы()

мВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");
