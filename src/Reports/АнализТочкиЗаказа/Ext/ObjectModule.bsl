#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "ТоварыНаСкладах";
	
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	// Описание исходного текста запроса.
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗначенияТочкиЗаказа.Склад КАК Склад,
	|	ЗначенияТочкиЗаказа.Номенклатура КАК Номенклатура,
	|	ЗначенияТочкиЗаказа.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВЫБОР
	|		КОГДА ЗначенияТочкиЗаказа.СпособОпределенияЗначенияТочкиЗаказа = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияЗначенияТочкиЗаказа.Фиксированная)
	|			ТОГДА МАКСИМУМ(ЗначенияТочкиЗаказа.ЗначениеТочкиЗаказа)
	|		КОГДА ЗначенияТочкиЗаказа.СпособОпределенияЗначенияТочкиЗаказа = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияЗначенияТочкиЗаказа.СреднийРазмерПартии)
	|			ТОГДА СУММА(Закупки.КоличествоОборот) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Закупки.ДокументЗакупки) * МАКСИМУМ(ЗначенияТочкиЗаказа.ПроцентнаяСтавкаЗначенияТочкиЗаказа) / 100
	|		КОГДА ЗначенияТочкиЗаказа.СпособОпределенияЗначенияТочкиЗаказа = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияЗначенияТочкиЗаказа.ОптимальныйРазмерЗаказа)
	|			ТОГДА СУММА(Продажи.КоличествоОборот) / (РАЗНОСТЬДАТ(МАКСИМУМ(ЗначенияТочкиЗаказа.ДатаНач), МАКСИМУМ(ЗначенияТочкиЗаказа.ДатаКон), ДЕНЬ) + 1) * ВЫБОР
	|					КОГДА ЗначенияТочкиЗаказа.Номенклатура.ОсновнойПоставщик.СрокВыполненияЗаказаПоставщиком > 0
	|						ТОГДА ЗначенияТочкиЗаказа.Номенклатура.ОсновнойПоставщик.СрокВыполненияЗаказаПоставщиком
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|	КОНЕЦ КАК ЗначениеТочкиЗаказа,
	|	ВЫБОР
	|		КОГДА ЗначенияТочкиЗаказа.СпособОпределенияЗначенияТочкиЗаказа = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияЗначенияТочкиЗаказа.Фиксированная)
	|			ТОГДА МАКСИМУМ(ЗначенияТочкиЗаказа.МинимальныйСтраховойЗапас)
	|		КОГДА ЗначенияТочкиЗаказа.СпособОпределенияЗначенияТочкиЗаказа = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияЗначенияТочкиЗаказа.СреднийРазмерПартии)
	|			ТОГДА СУММА(Закупки.КоличествоОборот) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Закупки.ДокументЗакупки) * МАКСИМУМ(ЗначенияТочкиЗаказа.ПроцентнаяСтавкаМинимальногоСтраховогоЗапаса) / 100
	|		КОГДА ЗначенияТочкиЗаказа.СпособОпределенияЗначенияТочкиЗаказа = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияЗначенияТочкиЗаказа.ОптимальныйРазмерЗаказа)
	|			ТОГДА (МАКСИМУМ(Продажи.КоличествоОборот) - СУММА(Продажи.КоличествоОборот) / (РАЗНОСТЬДАТ(МАКСИМУМ(ЗначенияТочкиЗаказа.ДатаНач), МАКСИМУМ(ЗначенияТочкиЗаказа.ДатаКон), ДЕНЬ) + 1)) * ВЫБОР
	|					КОГДА ЗначенияТочкиЗаказа.Номенклатура.ОсновнойПоставщик.СрокВыполненияЗаказаПоставщиком > 0
	|						ТОГДА ЗначенияТочкиЗаказа.Номенклатура.ОсновнойПоставщик.СрокВыполненияЗаказаПоставщиком
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|	КОНЕЦ КАК МинимальныйСтраховойЗапас
	|ПОМЕСТИТЬ ЗначенияТочкиЗаказа
	|ИЗ
	|	РегистрСведений.ЗначенияТочкиЗаказа.СрезПоследних(&ДатаКон, {(Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры, (СпособОпределенияЗначенияТочкиЗаказа) КАК СпособОпределенияЗначенияТочкиЗаказа}) КАК ЗначенияТочкиЗаказа
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Закупки.Обороты(, &ДатаКон, День, {(Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК Закупки
	|		ПО (ЗначенияТочкиЗаказа.СпособОпределенияЗначенияТочкиЗаказа = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияЗначенияТочкиЗаказа.СреднийРазмерПартии))
	|			И ЗначенияТочкиЗаказа.Номенклатура = Закупки.Номенклатура
	|			И (ВЫБОР
	|				КОГДА ЗначенияТочкиЗаказа.ХарактеристикаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|					ТОГДА ЗначенияТочкиЗаказа.ХарактеристикаНоменклатуры = Закупки.ХарактеристикаНоменклатуры
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И (Закупки.Период МЕЖДУ НАЧАЛОПЕРИОДА(ЗначенияТочкиЗаказа.ДатаНач, ДЕНЬ) И КОНЕЦПЕРИОДА(ЗначенияТочкиЗаказа.ДатаКон, ДЕНЬ))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(, &ДатаКон, День, {(Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК Продажи
	|		ПО (ЗначенияТочкиЗаказа.СпособОпределенияЗначенияТочкиЗаказа = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияЗначенияТочкиЗаказа.ОптимальныйРазмерЗаказа))
	|			И ЗначенияТочкиЗаказа.Номенклатура = Продажи.Номенклатура
	|			И (ВЫБОР
	|				КОГДА ЗначенияТочкиЗаказа.ХарактеристикаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|					ТОГДА ЗначенияТочкиЗаказа.ХарактеристикаНоменклатуры = Продажи.ХарактеристикаНоменклатуры
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И (Продажи.Период МЕЖДУ НАЧАЛОПЕРИОДА(ЗначенияТочкиЗаказа.ДатаНач, ДЕНЬ) И КОНЕЦПЕРИОДА(ЗначенияТочкиЗаказа.ДатаКон, ДЕНЬ))
	|ГДЕ
	|	ЗначенияТочкиЗаказа.СпособОпределенияЗначенияТочкиЗаказа <> ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияЗначенияТочкиЗаказа.НеКонтролировать)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗначенияТочкиЗаказа.Склад,
	|	ЗначенияТочкиЗаказа.Номенклатура,
	|	ЗначенияТочкиЗаказа.ХарактеристикаНоменклатуры,
	|	ЗначенияТочкиЗаказа.СпособОпределенияЗначенияТочкиЗаказа,
	|	ЗначенияТочкиЗаказа.Номенклатура.ОсновнойПоставщик.СрокВыполненияЗаказаПоставщиком
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Склад КАК Склад,
	|	ВложенныйЗапрос.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(ВложенныйЗапрос.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ТоварыНаСкладах
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыНаСкладах.Склад КАК Склад,
	|		ТоварыНаСкладах.Номенклатура КАК Номенклатура,
	|		ТоварыНаСкладах.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ТоварыНаСкладах.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаКон, {(Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК ТоварыНаСкладах
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		NULL,
	|		ТоварыНаСкладах.Номенклатура,
	|		ТоварыНаСкладах.ХарактеристикаНоменклатуры,
	|		ТоварыНаСкладах.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаКон, {(Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК ТоварыНаСкладах
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыНаСкладах.Склад,
	|		ТоварыНаСкладах.Номенклатура,
	|		NULL,
	|		ТоварыНаСкладах.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаКон, {(Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК ТоварыНаСкладах
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		NULL,
	|		ТоварыНаСкладах.Номенклатура,
	|		NULL,
	|		ТоварыНаСкладах.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаКон, {(Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК ТоварыНаСкладах
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыВРознице.Склад КАК Склад,
	|		ТоварыВРознице.Номенклатура КАК Номенклатура,
	|		ТоварыВРознице.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ТоварыВРознице.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыВРознице.Остатки(&ДатаКон, {(Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК ТоварыВРознице
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		NULL,
	|		ТоварыВРознице.Номенклатура,
	|		ТоварыВРознице.ХарактеристикаНоменклатуры,
	|		ТоварыВРознице.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыВРознице.Остатки(&ДатаКон, {(Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК ТоварыВРознице
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыВРознице.Склад,
	|		ТоварыВРознице.Номенклатура,
	|		NULL,
	|		ТоварыВРознице.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыВРознице.Остатки(&ДатаКон, {(Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК ТоварыВРознице
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		NULL,
	|		ТоварыВРознице.Номенклатура,
	|		NULL,
	|		ТоварыВРознице.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыВРознице.Остатки(&ДатаКон, {(Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК ТоварыВРознице
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыВНТТ.Склад КАК Склад,
	|		ТоварыВНТТ.Номенклатура КАК Номенклатура,
	|		ТоварыВНТТ.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ТоварыВНТТ.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыВНТТ.Остатки(&ДатаКон, {(Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК ТоварыВНТТ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		NULL,
	|		ТоварыВНТТ.Номенклатура,
	|		ТоварыВНТТ.ХарактеристикаНоменклатуры,
	|		ТоварыВНТТ.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыВНТТ.Остатки(&ДатаКон, {(Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК ТоварыВНТТ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыВНТТ.Склад,
	|		ТоварыВНТТ.Номенклатура,
	|		NULL,
	|		ТоварыВНТТ.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыВНТТ.Остатки(&ДатаКон, {(Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК ТоварыВНТТ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		NULL,
	|		ТоварыВНТТ.Номенклатура,
	|		NULL,
	|		ТоварыВНТТ.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыВНТТ.Остатки(&ДатаКон, {(Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК ТоварыВНТТ) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Склад,
	|	ВложенныйЗапрос.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Склад КАК Склад,
	|	ВложенныйЗапрос.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(ВложенныйЗапрос.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ЗаказыПоставщикамПросроченноеПоступление
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
	|		ЗаказыПоставщикамОстатки.ЗаказПоставщику.Склад КАК Склад,
	|		ЗаказыПоставщикамОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|				&ДатаКон,
	|				ЗаказПоставщику.ДатаПоступления < ВЫБОР
	|						КОГДА &ДатаКонца = ДАТАВРЕМЯ(3999, 12, 31)
	|							ТОГДА &ТекущаяДата
	|						ИНАЧЕ &ДатаКонца
	|					КОНЕЦ
	|					И ЗаказПоставщику.ДатаПоступления <> ДАТАВРЕМЯ(1, 1, 1) {(ЗаказПоставщику.Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК ЗаказыПоставщикамОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказыПоставщикамОстатки.Номенклатура,
	|		NULL,
	|		ЗаказыПоставщикамОстатки.ХарактеристикаНоменклатуры,
	|		ЗаказыПоставщикамОстатки.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|				&ДатаКон,
	|				ЗаказПоставщику.ДатаПоступления < ВЫБОР
	|						КОГДА &ДатаКонца = ДАТАВРЕМЯ(3999, 12, 31)
	|							ТОГДА &ТекущаяДата
	|						ИНАЧЕ &ДатаКонца
	|					КОНЕЦ
	|					И ЗаказПоставщику.ДатаПоступления <> ДАТАВРЕМЯ(1, 1, 1) {(ЗаказПоставщику.Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК ЗаказыПоставщикамОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказыПоставщикамОстатки.Номенклатура,
	|		ЗаказыПоставщикамОстатки.ЗаказПоставщику.Склад,
	|		NULL,
	|		ЗаказыПоставщикамОстатки.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|				&ДатаКон,
	|				ЗаказПоставщику.ДатаПоступления < ВЫБОР
	|						КОГДА &ДатаКонца = ДАТАВРЕМЯ(3999, 12, 31)
	|							ТОГДА &ТекущаяДата
	|						ИНАЧЕ &ДатаКонца
	|					КОНЕЦ
	|					И ЗаказПоставщику.ДатаПоступления <> ДАТАВРЕМЯ(1, 1, 1) {(ЗаказПоставщику.Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК ЗаказыПоставщикамОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказыПоставщикамОстатки.Номенклатура,
	|		NULL,
	|		NULL,
	|		ЗаказыПоставщикамОстатки.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|				&ДатаКон,
	|				ЗаказПоставщику.ДатаПоступления < ВЫБОР
	|						КОГДА &ДатаКонца = ДАТАВРЕМЯ(3999, 12, 31)
	|							ТОГДА &ТекущаяДата
	|						ИНАЧЕ &ДатаКонца
	|					КОНЕЦ
	|					И ЗаказПоставщику.ДатаПоступления <> ДАТАВРЕМЯ(1, 1, 1) {(ЗаказПоставщику.Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК ЗаказыПоставщикамОстатки) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Склад,
	|	ВложенныйЗапрос.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Склад КАК Склад,
	|	ВложенныйЗапрос.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(ВложенныйЗапрос.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ЗаказыПоставщикамОжидаемоеПоступление
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
	|		ЗаказыПоставщикамОстатки.ЗаказПоставщику.Склад КАК Склад,
	|		ЗаказыПоставщикамОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|				&ДатаКон,
	|				ЗаказПоставщику.ДатаПоступления >= ВЫБОР
	|						КОГДА &ДатаКонца = ДАТАВРЕМЯ(3999, 12, 31)
	|							ТОГДА &ТекущаяДата
	|						ИНАЧЕ &ДатаКонца
	|					КОНЕЦ
	|					ИЛИ ЗаказПоставщику.ДатаПоступления = ДАТАВРЕМЯ(1, 1, 1) {(ЗаказПоставщику.Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК ЗаказыПоставщикамОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказыПоставщикамОстатки.Номенклатура,
	|		NULL,
	|		ЗаказыПоставщикамОстатки.ХарактеристикаНоменклатуры,
	|		ЗаказыПоставщикамОстатки.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|				&ДатаКон,
	|				ЗаказПоставщику.ДатаПоступления >= ВЫБОР
	|						КОГДА &ДатаКонца = ДАТАВРЕМЯ(3999, 12, 31)
	|							ТОГДА &ТекущаяДата
	|						ИНАЧЕ &ДатаКонца
	|					КОНЕЦ
	|					ИЛИ ЗаказПоставщику.ДатаПоступления = ДАТАВРЕМЯ(1, 1, 1) {(ЗаказПоставщику.Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК ЗаказыПоставщикамОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказыПоставщикамОстатки.Номенклатура,
	|		ЗаказыПоставщикамОстатки.ЗаказПоставщику.Склад,
	|		NULL,
	|		ЗаказыПоставщикамОстатки.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|				&ДатаКон,
	|				ЗаказПоставщику.ДатаПоступления >= ВЫБОР
	|						КОГДА &ДатаКонца = ДАТАВРЕМЯ(3999, 12, 31)
	|							ТОГДА &ТекущаяДата
	|						ИНАЧЕ &ДатаКонца
	|					КОНЕЦ
	|					ИЛИ ЗаказПоставщику.ДатаПоступления = ДАТАВРЕМЯ(1, 1, 1) {(ЗаказПоставщику.Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК ЗаказыПоставщикамОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказыПоставщикамОстатки.Номенклатура,
	|		NULL,
	|		NULL,
	|		ЗаказыПоставщикамОстатки.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|				&ДатаКон,
	|				ЗаказПоставщику.ДатаПоступления >= ВЫБОР
	|						КОГДА &ДатаКонца = ДАТАВРЕМЯ(3999, 12, 31)
	|							ТОГДА &ТекущаяДата
	|						ИНАЧЕ &ДатаКонца
	|					КОНЕЦ
	|					ИЛИ ЗаказПоставщику.ДатаПоступления = ДАТАВРЕМЯ(1, 1, 1) {(ЗаказПоставщику.Склад).* КАК Склад, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры}) КАК ЗаказыПоставщикамОстатки) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Склад,
	|	ВложенныйЗапрос.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.МинимальныйСтраховойЗапас > 0
	|				И ВложенныйЗапрос.МинимальныйСтраховойЗапас > ВложенныйЗапрос.Остаток
	|			ТОГДА 0
	|		КОГДА ВложенныйЗапрос.ЗначениеТочкиЗаказа > 0
	|				И ВложенныйЗапрос.ЗначениеТочкиЗаказа > ВложенныйЗапрос.Остаток
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Состояние,
	|	ВложенныйЗапрос.Склад КАК Склад,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.Номенклатура) КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатурыПредставление,
	|	ВложенныйЗапрос.ЗначениеТочкиЗаказа КАК ЗначениеТочкиЗаказа,
	|	ВложенныйЗапрос.ЗначениеТочкиЗаказа * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК ЗначениеТочкиЗаказаЕдиницОтчетов,
	|	ВложенныйЗапрос.ЗначениеТочкиЗаказа * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК ЗначениеТочкиЗаказаБазовыхЕдиниц,
	|	ВложенныйЗапрос.МинимальныйСтраховойЗапас КАК МинимальныйСтраховойЗапас,
	|	ВложенныйЗапрос.МинимальныйСтраховойЗапас * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК МинимальныйСтраховойЗапасЕдиницОтчетов,
	|	ВложенныйЗапрос.МинимальныйСтраховойЗапас * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК МинимальныйСтраховойЗапасБазовыхЕдиниц,
	|	ВложенныйЗапрос.Остаток КАК Остаток,
	|	ВложенныйЗапрос.Остаток * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК ОстатокЕдиницОтчетов,
	|	ВложенныйЗапрос.Остаток * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК ОстатокБазовыхЕдиниц,
	|	ВложенныйЗапрос.ПросроченноеПоступление КАК ПросроченноеПоступление,
	|	ВложенныйЗапрос.ПросроченноеПоступление * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК ПросроченноеПоступлениеЕдиницОтчетов,
	|	ВложенныйЗапрос.ПросроченноеПоступление * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК ПросроченноеПоступлениеБазовыхЕдиниц,
	|	ВложенныйЗапрос.ОжидаемоеПоступление КАК ОжидаемоеПоступление,
	|	ВложенныйЗапрос.ОжидаемоеПоступление * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК ОжидаемоеПоступлениеЕдиницОтчетов,
	|	ВложенныйЗапрос.ОжидаемоеПоступление * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК ОжидаемоеПоступлениеБазовыхЕдиниц,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ЗначениеТочкиЗаказа > ВложенныйЗапрос.Остаток
	|				ИЛИ ВложенныйЗапрос.МинимальныйСтраховойЗапас > ВложенныйЗапрос.Остаток
	|			ТОГДА ВложенныйЗапрос.ЗначениеТочкиЗаказа - ВложенныйЗапрос.Остаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РекомендуемыйОбъемЗакупки,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ЗначениеТочкиЗаказа > ВложенныйЗапрос.Остаток
	|				ИЛИ ВложенныйЗапрос.МинимальныйСтраховойЗапас > ВложенныйЗапрос.Остаток
	|			ТОГДА ВложенныйЗапрос.ЗначениеТочкиЗаказа - ВложенныйЗапрос.Остаток
	|		ИНАЧЕ 0
	|	КОНЕЦ * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК РекомендуемыйОбъемЗакупкиЕдиницОтчетов,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ЗначениеТочкиЗаказа > ВложенныйЗапрос.Остаток
	|				ИЛИ ВложенныйЗапрос.МинимальныйСтраховойЗапас > ВложенныйЗапрос.Остаток
	|			ТОГДА ВложенныйЗапрос.ЗначениеТочкиЗаказа - ВложенныйЗапрос.Остаток
	|		ИНАЧЕ 0
	|	КОНЕЦ * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК РекомендуемыйОбъемЗакупкиБазовыхЕдиниц,
	|	ВложенныйЗапрос.Номенклатура.ОсновнойПоставщик.СрокВыполненияЗаказаПоставщиком КАК СрокДоставки
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
	|{ВЫБРАТЬ
	|	Состояние,
	|	Склад.*,
	|	Номенклатура.*,
	|	ХарактеристикаНоменклатуры.*,
	|	ЗначениеТочкиЗаказа,
	|	ЗначениеТочкиЗаказаЕдиницОтчетов,
	|	ЗначениеТочкиЗаказаБазовыхЕдиниц,
	|	МинимальныйСтраховойЗапас,
	|	МинимальныйСтраховойЗапасЕдиницОтчетов,
	|	МинимальныйСтраховойЗапасБазовыхЕдиниц,
	|	Остаток,
	|	ОстатокЕдиницОтчетов,
	|	ОстатокБазовыхЕдиниц,
	|	ПросроченноеПоступление,
	|	ПросроченноеПоступлениеЕдиницОтчетов,
	|	ПросроченноеПоступлениеБазовыхЕдиниц,
	|	ОжидаемоеПоступление,
	|	ОжидаемоеПоступлениеЕдиницОтчетов,
	|	ОжидаемоеПоступлениеБазовыхЕдиниц,
	|	РекомендуемыйОбъемЗакупки,
	|	РекомендуемыйОбъемЗакупкиЕдиницОтчетов,
	|	РекомендуемыйОбъемЗакупкиБазовыхЕдиниц,
	|	СрокДоставки
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗначенияТочкиЗаказа.Склад КАК Склад,
	|		ЗначенияТочкиЗаказа.Номенклатура КАК Номенклатура,
	|		ЗначенияТочкиЗаказа.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ЗначенияТочкиЗаказа.ЗначениеТочкиЗаказа КАК ЗначениеТочкиЗаказа,
	|		ЗначенияТочкиЗаказа.МинимальныйСтраховойЗапас КАК МинимальныйСтраховойЗапас,
	|		ЕСТЬNULL(ТоварыНаСкладах.КоличествоОстаток, 0) КАК Остаток,
	|		ЕСТЬNULL(ЗаказыПоставщикамПросроченноеПоступление.КоличествоОстаток, 0) КАК ПросроченноеПоступление,
	|		ЕСТЬNULL(ЗаказыПоставщикамОжидаемоеПоступление.КоличествоОстаток, 0) КАК ОжидаемоеПоступление
	|	ИЗ
	|		ЗначенияТочкиЗаказа КАК ЗначенияТочкиЗаказа
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТоварыНаСкладах КАК ТоварыНаСкладах
	|			ПО ЗначенияТочкиЗаказа.Номенклатура = ТоварыНаСкладах.Номенклатура
	|				И (ВЫБОР
	|					КОГДА ЗначенияТочкиЗаказа.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|						ТОГДА ТоварыНаСкладах.Склад ЕСТЬ NULL 
	|					ИНАЧЕ ЗначенияТочкиЗаказа.Склад = ТоварыНаСкладах.Склад
	|				КОНЕЦ)
	|				И (ВЫБОР
	|					КОГДА ЗначенияТочкиЗаказа.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|						ТОГДА ТоварыНаСкладах.ХарактеристикаНоменклатуры ЕСТЬ NULL 
	|					ИНАЧЕ ЗначенияТочкиЗаказа.ХарактеристикаНоменклатуры = ТоварыНаСкладах.ХарактеристикаНоменклатуры
	|				КОНЕЦ)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ЗаказыПоставщикамПросроченноеПоступление КАК ЗаказыПоставщикамПросроченноеПоступление
	|			ПО ЗначенияТочкиЗаказа.Номенклатура = ЗаказыПоставщикамПросроченноеПоступление.Номенклатура
	|				И (ВЫБОР
	|					КОГДА ЗначенияТочкиЗаказа.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|						ТОГДА ЗаказыПоставщикамПросроченноеПоступление.Склад ЕСТЬ NULL 
	|					ИНАЧЕ ЗначенияТочкиЗаказа.Склад = ЗаказыПоставщикамПросроченноеПоступление.Склад
	|				КОНЕЦ)
	|				И (ВЫБОР
	|					КОГДА ЗначенияТочкиЗаказа.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|						ТОГДА ЗаказыПоставщикамПросроченноеПоступление.ХарактеристикаНоменклатуры ЕСТЬ NULL 
	|					ИНАЧЕ ЗначенияТочкиЗаказа.ХарактеристикаНоменклатуры = ЗаказыПоставщикамПросроченноеПоступление.ХарактеристикаНоменклатуры
	|				КОНЕЦ)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ЗаказыПоставщикамОжидаемоеПоступление КАК ЗаказыПоставщикамОжидаемоеПоступление
	|			ПО ЗначенияТочкиЗаказа.Номенклатура = ЗаказыПоставщикамОжидаемоеПоступление.Номенклатура
	|				И (ВЫБОР
	|					КОГДА ЗначенияТочкиЗаказа.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|						ТОГДА ЗаказыПоставщикамОжидаемоеПоступление.Склад ЕСТЬ NULL 
	|					ИНАЧЕ ЗначенияТочкиЗаказа.Склад = ЗаказыПоставщикамОжидаемоеПоступление.Склад
	|				КОНЕЦ)
	|				И (ВЫБОР
	|					КОГДА ЗначенияТочкиЗаказа.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|						ТОГДА ЗаказыПоставщикамОжидаемоеПоступление.ХарактеристикаНоменклатуры ЕСТЬ NULL 
	|					ИНАЧЕ ЗначенияТочкиЗаказа.ХарактеристикаНоменклатуры = ЗаказыПоставщикамОжидаемоеПоступление.ХарактеристикаНоменклатуры
	|				КОНЕЦ)) КАК ВложенныйЗапрос
	|	//СОЕДИНЕНИЯ
	|{ГДЕ
	|	(ВЫБОР
	|			КОГДА ВложенныйЗапрос.МинимальныйСтраховойЗапас > 0
	|					И ВложенныйЗапрос.МинимальныйСтраховойЗапас > ВложенныйЗапрос.Остаток
	|				ТОГДА 0
	|			КОГДА ВложенныйЗапрос.ЗначениеТочкиЗаказа > 0
	|					И ВложенныйЗапрос.ЗначениеТочкиЗаказа > ВложенныйЗапрос.Остаток
	|				ТОГДА 1
	|			ИНАЧЕ 2
	|		КОНЕЦ) КАК Состояние,
	|	ВложенныйЗапрос.ЗначениеТочкиЗаказа КАК ЗначениеТочкиЗаказа,
	|	(ВложенныйЗапрос.ЗначениеТочкиЗаказа * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент) КАК ЗначениеТочкиЗаказаЕдиницОтчетов,
	|	(ВложенныйЗапрос.ЗначениеТочкиЗаказа * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК ЗначениеТочкиЗаказаБазовыхЕдиниц,
	|	ВложенныйЗапрос.МинимальныйСтраховойЗапас КАК МинимальныйСтраховойЗапас,
	|	(ВложенныйЗапрос.МинимальныйСтраховойЗапас * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент) КАК МинимальныйСтраховойЗапасЕдиницОтчетов,
	|	(ВложенныйЗапрос.МинимальныйСтраховойЗапас * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК МинимальныйСтраховойЗапасБазовыхЕдиниц,
	|	ВложенныйЗапрос.Остаток КАК Остаток,
	|	(ВложенныйЗапрос.Остаток * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент) КАК ОстатокЕдиницОтчетов,
	|	(ВложенныйЗапрос.Остаток * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК ОстатокБазовыхЕдиниц,
	|	ВложенныйЗапрос.ПросроченноеПоступление КАК ПросроченноеПоступление,
	|	(ВложенныйЗапрос.ПросроченноеПоступление * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент) КАК ПросроченноеПоступлениеЕдиницОтчетов,
	|	(ВложенныйЗапрос.ПросроченноеПоступление * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК ПросроченноеПоступлениеБазовыхЕдиниц,
	|	ВложенныйЗапрос.ОжидаемоеПоступление КАК ОжидаемоеПоступление,
	|	(ВложенныйЗапрос.ОжидаемоеПоступление * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент) КАК ОжидаемоеПоступлениеЕдиницОтчетов,
	|	(ВложенныйЗапрос.ОжидаемоеПоступление * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК ОжидаемоеПоступлениеБазовыхЕдиниц,
	|	(ВЫБОР
	|			КОГДА ВложенныйЗапрос.ЗначениеТочкиЗаказа > ВложенныйЗапрос.Остаток
	|					ИЛИ ВложенныйЗапрос.МинимальныйСтраховойЗапас > ВложенныйЗапрос.Остаток
	|				ТОГДА ВложенныйЗапрос.ЗначениеТочкиЗаказа - ВложенныйЗапрос.Остаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РекомендуемыйОбъемЗакупки,
	|	(ВЫБОР
	|			КОГДА ВложенныйЗапрос.ЗначениеТочкиЗаказа > ВложенныйЗапрос.Остаток
	|					ИЛИ ВложенныйЗапрос.МинимальныйСтраховойЗапас > ВложенныйЗапрос.Остаток
	|				ТОГДА ВложенныйЗапрос.ЗначениеТочкиЗаказа - ВложенныйЗапрос.Остаток
	|			ИНАЧЕ 0
	|		КОНЕЦ * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаДляОтчетов.Коэффициент) КАК РекомендуемыйОбъемЗакупкиЕдиницОтчетов,
	|	(ВЫБОР
	|			КОГДА ВложенныйЗапрос.ЗначениеТочкиЗаказа > ВложенныйЗапрос.Остаток
	|					ИЛИ ВложенныйЗапрос.МинимальныйСтраховойЗапас > ВложенныйЗапрос.Остаток
	|				ТОГДА ВложенныйЗапрос.ЗначениеТочкиЗаказа - ВложенныйЗапрос.Остаток
	|			ИНАЧЕ 0
	|		КОНЕЦ * ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК РекомендуемыйОбъемЗакупкиБазовыхЕдиниц,
	|	ВложенныйЗапрос.Номенклатура.ОсновнойПоставщик.СрокВыполненияЗаказаПоставщиком КАК СрокДоставки
	|	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ
	|}
	|{УПОРЯДОЧИТЬ ПО
	|	Состояние,
	|	Склад.*,
	|	Номенклатура.*,
	|	ХарактеристикаНоменклатуры.*,
	|	ЗначениеТочкиЗаказа,
	|	ЗначениеТочкиЗаказаЕдиницОтчетов,
	|	ЗначениеТочкиЗаказаБазовыхЕдиниц,
	|	МинимальныйСтраховойЗапас,
	|	МинимальныйСтраховойЗапасЕдиницОтчетов,
	|	МинимальныйСтраховойЗапасБазовыхЕдиниц,
	|	Остаток,
	|	ОстатокЕдиницОтчетов,
	|	ОстатокБазовыхЕдиниц,
	|	ПросроченноеПоступление,
	|	ПросроченноеПоступлениеЕдиницОтчетов,
	|	ПросроченноеПоступлениеБазовыхЕдиниц,
	|	ОжидаемоеПоступление,
	|	ОжидаемоеПоступлениеЕдиницОтчетов,
	|	ОжидаемоеПоступлениеБазовыхЕдиниц,
	|	РекомендуемыйОбъемЗакупки,
	|	РекомендуемыйОбъемЗакупкиЕдиницОтчетов,
	|	РекомендуемыйОбъемЗакупкиБазовыхЕдиниц,
	|	СрокДоставки
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|ИТОГИ
	|	СУММА(ЗначениеТочкиЗаказа),
	|	СУММА(ЗначениеТочкиЗаказаЕдиницОтчетов),
	|	СУММА(ЗначениеТочкиЗаказаБазовыхЕдиниц),
	|	СУММА(МинимальныйСтраховойЗапас),
	|	СУММА(МинимальныйСтраховойЗапасЕдиницОтчетов),
	|	СУММА(МинимальныйСтраховойЗапасБазовыхЕдиниц),
	|	СУММА(Остаток),
	|	СУММА(ОстатокЕдиницОтчетов),
	|	СУММА(ОстатокБазовыхЕдиниц),
	|	СУММА(ПросроченноеПоступление),
	|	СУММА(ПросроченноеПоступлениеЕдиницОтчетов),
	|	СУММА(ПросроченноеПоступлениеБазовыхЕдиниц),
	|	СУММА(ОжидаемоеПоступление),
	|	СУММА(ОжидаемоеПоступлениеЕдиницОтчетов),
	|	СУММА(ОжидаемоеПоступлениеБазовыхЕдиниц),
	|	СУММА(РекомендуемыйОбъемЗакупки),
	|	СУММА(РекомендуемыйОбъемЗакупкиЕдиницОтчетов),
	|	СУММА(РекомендуемыйОбъемЗакупкиБазовыхЕдиниц),
	|	МАКСИМУМ(СрокДоставки)
	|	//ИТОГИ_СВОЙСТВА
	|	//ИТОГИ_КАТЕГОРИИ
	|ПО
	|	Состояние,
	|	Склад,
	|	Номенклатура
	|{ИТОГИ ПО
	|	Состояние,
	|	Склад.*,
	|	Номенклатура.*,
	|	ХарактеристикаНоменклатуры.*
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}";
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ВложенныйЗапрос.Склад", "Склад", "Склад", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Склады);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ВложенныйЗапрос.Номенклатура", "Номенклатура", "Номенклатура", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ВложенныйЗапрос.ХарактеристикаНоменклатуры", "ХарактеристикаНоменклатуры", "Характеристика номенклатуры", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Состояние", "Состояние");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Склад", "Склад");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Номенклатура", "Номенклатура");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ХарактеристикаНоменклатуры", "Характеристика номенклатуры");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЗначениеТочкиЗаказа", "Значение точки заказа (ед. хранения)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЗначениеТочкиЗаказаЕдиницОтчетов", "Значение точки заказа (ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЗначениеТочкиЗаказаБазовыхЕдиниц", "Значение точки заказа (базовых ед.)");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("МинимальныйСтраховойЗапас", "Минимальный страховой запас (ед. хранения)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("МинимальныйСтраховойЗапасЕдиницОтчетов", "Минимальный страховой запас (ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("МинимальныйСтраховойЗапасБазовыхЕдиниц", "Минимальный страховой запас (базовых ед.)");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Остаток", "Остаток (ед. хранения)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ОстатокЕдиницОтчетов", "Остаток (ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ОстатокБазовыхЕдиниц", "Остаток (базовых ед.)");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПросроченноеПоступление", "Просроченное поступление (ед. хранения)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПросроченноеПоступлениеЕдиницОтчетов", "Просроченное поступление (ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПросроченноеПоступлениеБазовыхЕдиниц", "Просроченное поступление (базовых ед.)");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ОжидаемоеПоступление", "Ожидаемое поступление (ед. хранения)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ОжидаемоеПоступлениеЕдиницОтчетов", "Ожидаемое поступление (ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ОжидаемоеПоступлениеБазовыхЕдиниц", "Ожидаемое поступление (базовых ед.)");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("РекомендуемыйОбъемЗакупки", "Рекомендуемый объем закупки (ед. хранения)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("РекомендуемыйОбъемЗакупкиЕдиницОтчетов", "Рекомендуемый объем закупки (ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("РекомендуемыйОбъемЗакупкиБазовыхЕдиниц", "Рекомендуемый объем закупки (базовых ед.)");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СрокДоставки", "Срок доставки (в днях)");
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	УниверсальныйОтчет.ДобавитьПоказатель("ЗначениеТочкиЗаказа", "Ед. хранения", Истина, "ЧЦ=15; ЧДЦ=3", "ЗначениеТочкиЗаказа", "Значение" + Символы.ПС + "точки заказа");
	УниверсальныйОтчет.ДобавитьПоказатель("ЗначениеТочкиЗаказаБазовыхЕдиниц", "Базовых ед.", Ложь, "ЧЦ=15; ЧДЦ=3", "ЗначениеТочкиЗаказа");
	УниверсальныйОтчет.ДобавитьПоказатель("ЗначениеТочкиЗаказаЕдиницОтчетов", "Ед. отчетов", Ложь, "ЧЦ=15; ЧДЦ=3", "ЗначениеТочкиЗаказа");
	
	УниверсальныйОтчет.ДобавитьПоказатель("МинимальныйСтраховойЗапас", "Ед. хранения", Истина, "ЧЦ=15; ЧДЦ=3", "МинимальныйСтраховойЗапас", "Минимальный" + Символы.ПС + "страховой запас");
	УниверсальныйОтчет.ДобавитьПоказатель("МинимальныйСтраховойЗапасБазовыхЕдиниц", "Базовых ед.", Ложь, "ЧЦ=15; ЧДЦ=3", "МинимальныйСтраховойЗапас");
	УниверсальныйОтчет.ДобавитьПоказатель("МинимальныйСтраховойЗапасЕдиницОтчетов", "Ед. отчетов", Ложь, "ЧЦ=15; ЧДЦ=3", "МинимальныйСтраховойЗапас");
	
	УниверсальныйОтчет.ДобавитьПоказатель("Остаток", "Ед. хранения", Истина, "ЧЦ=15; ЧДЦ=3", "Остаток", "Остаток");
	УниверсальныйОтчет.ДобавитьПоказатель("ОстатокБазовыхЕдиниц", "Базовых ед.", Ложь, "ЧЦ=15; ЧДЦ=3", "Остаток");
	УниверсальныйОтчет.ДобавитьПоказатель("ОстатокЕдиницОтчетов", "Ед. отчетов", Ложь, "ЧЦ=15; ЧДЦ=3", "Остаток");
	
	УниверсальныйОтчет.ДобавитьПоказатель("ПросроченноеПоступление", "Ед. хранения", Истина, "ЧЦ=15; ЧДЦ=3", "ПросроченноеПоступление", "Просроченное" + Символы.ПС + "поступление");
	УниверсальныйОтчет.ДобавитьПоказатель("ПросроченноеПоступлениеБазовыхЕдиниц", "Базовых ед.", Ложь, "ЧЦ=15; ЧДЦ=3", "ПросроченноеПоступление");
	УниверсальныйОтчет.ДобавитьПоказатель("ПросроченноеПоступлениеЕдиницОтчетов", "Ед. отчетов", Ложь, "ЧЦ=15; ЧДЦ=3", "ПросроченноеПоступление");
	
	УниверсальныйОтчет.ДобавитьПоказатель("ОжидаемоеПоступление", "Ед. хранения", Истина, "ЧЦ=15; ЧДЦ=3", "ОжидаемоеПоступление", "Ожидаемое" + Символы.ПС + "поступление");
	УниверсальныйОтчет.ДобавитьПоказатель("ОжидаемоеПоступлениеБазовыхЕдиниц", "Базовых ед.", Ложь, "ЧЦ=15; ЧДЦ=3", "ОжидаемоеПоступление");
	УниверсальныйОтчет.ДобавитьПоказатель("ОжидаемоеПоступлениеЕдиницОтчетов", "Ед. отчетов", Ложь, "ЧЦ=15; ЧДЦ=3", "ОжидаемоеПоступление");
	
	УниверсальныйОтчет.ДобавитьПоказатель("РекомендуемыйОбъемЗакупки", "Ед. хранения", Истина, "ЧЦ=15; ЧДЦ=3", "РекомендуемыйОбъемЗакупки", "Рекомендуемый" + Символы.ПС + "объем закупки");
	УниверсальныйОтчет.ДобавитьПоказатель("РекомендуемыйОбъемЗакупкиБазовыхЕдиниц", "Базовых ед.", Ложь, "ЧЦ=15; ЧДЦ=3", "РекомендуемыйОбъемЗакупки");
	УниверсальныйОтчет.ДобавитьПоказатель("РекомендуемыйОбъемЗакупкиЕдиницОтчетов", "Ед. отчетов", Ложь, "ЧЦ=15; ЧДЦ=3", "РекомендуемыйОбъемЗакупки");
	
	УниверсальныйОтчет.ДобавитьПоказатель("СрокДоставки", "Срок доставки" + Символы.ПС + "(в днях)", Истина, "ЧЦ=15; ЧДЦ=0");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Склад");
	УниверсальныйОтчет.ДобавитьОтбор("Номенклатура");
	
	// Добавление предопределенных полей порядка отчета.
	// Необходимо вызывать для каждого добавляемого поля порядка.
	// УниверсальныйОтчет.ДобавитьПорядок(<ПутьКДанным>);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДаннымРодитель>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>, <Размещение>, <Положение>);
	
	// Условное оформление поля "Состояние"
	ЭлементОформления = УниверсальныйОтчет.ПостроительОтчета.УсловноеОформление.Добавить("ТребуетсяЗаказать", "Требуется заказать");
	
	ЭлементОформления.Область.Добавить("Состояние", "Состояние", ТипОбластиОформления.Поле);
	ЭлементОтбора = ЭлементОформления.Отбор.Добавить("Состояние");
	ЭлементОтбора.ВидСравнения = ВидСравнения.Равно;
	ЭлементОтбора.Значение = 0;
	ЭлементОтбора.Использование = Истина;
	ЭлементОформления.Оформление.ЦветТекста.Значение = WebЦвета.Красный;
	ЭлементОформления.Оформление.ЦветТекста.Использование = Истина;
	ЭлементОформления.Оформление.Текст.Значение = "Требуется заказать";
	ЭлементОформления.Оформление.Текст.Использование = Истина;
	
	ЭлементОформления.Использование = Истина;
	
	ЭлементОформления = УниверсальныйОтчет.ПостроительОтчета.УсловноеОформление.Добавить("РекомендуетсяЗаказать", "Рекомендуется заказать");
	
	ЭлементОформления.Область.Добавить("Состояние", "Состояние", ТипОбластиОформления.Поле);
	ЭлементОтбора = ЭлементОформления.Отбор.Добавить("Состояние");
	ЭлементОтбора.ВидСравнения = ВидСравнения.Равно;
	ЭлементОтбора.Значение = 1;
	ЭлементОтбора.Использование = Истина;
	ЭлементОформления.Оформление.ЦветТекста.Значение = WebЦвета.Коричневый;
	ЭлементОформления.Оформление.ЦветТекста.Использование = Истина;
	ЭлементОформления.Оформление.Текст.Значение = "Рекомендуется заказать";
	ЭлементОформления.Оформление.Текст.Использование = Истина;
	
	ЭлементОформления.Использование = Истина;
	
	ЭлементОформления = УниверсальныйОтчет.ПостроительОтчета.УсловноеОформление.Добавить("НеТребуетсяЗаказывать", "Не требуется заказывать");
	
	ЭлементОформления.Область.Добавить("Состояние", "Состояние", ТипОбластиОформления.Поле);
	ЭлементОтбора = ЭлементОформления.Отбор.Добавить("Состояние");
	ЭлементОтбора.ВидСравнения = ВидСравнения.Равно;
	ЭлементОтбора.Значение = 2;
	ЭлементОтбора.Использование = Истина;
	ЭлементОформления.Оформление.ЦветТекста.Значение = WebЦвета.Зеленый;
	ЭлементОформления.Оформление.ЦветТекста.Использование = Истина;
	ЭлементОформления.Оформление.Текст.Значение = "Не требуется заказывать";
	ЭлементОформления.Оформление.Текст.Использование = Истина;
	
	ЭлементОформления.Использование = Истина;
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ТекущаяДата", ТекущаяДата());
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);

КонецПроцедуры // СформироватьОтчет()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = Неопределено;
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;
УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли
