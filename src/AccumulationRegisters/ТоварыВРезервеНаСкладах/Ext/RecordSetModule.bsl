Перем мПериод          Экспорт; // Период движений
Перем мТаблицаДвижений Экспорт; // Таблица движений
// Переменные, используемые в процедурах контроля остатков
Перем МетаданныеДокумента, ИмяДокумента, ИмяТабличнойЧасти, ИмяТаблицы, Заголовок, СтруктураШапкиДокумента, Отказ; 
Перем ИспользоватьУказаниеСерийНоменклатурыПриРезервировании;

// Выполняет приход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьПриход() Экспорт

	ОбщегоНазначения.ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Приход);

КонецПроцедуры // ВыполнитьПриход()

// Выполняет расход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьРасход() Экспорт

	ОбщегоНазначения.ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Расход);

КонецПроцедуры // ВыполнитьРасход()

// Выполняет движения по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьДвижения() Экспорт

	Загрузить(мТаблицаДвижений);

КонецПроцедуры // ВыполнитьДвижения()

// Процедура контролирует остаток по данному регистру по переданному документу
// и его табличной части. В случае недостатка товаров выставляется флаг отказа и 
// выдается сообщение.
//
// Параметры:
//  ДокументОбъект     - объект проводимого документа, 
//  ИмяТабЧасти        - строка, имя табличной части, которая проводится по регистру, 
//  СтруктураШапки     - структура, содержащая значения "через точку" ссылочных реквизитов по шапке документа,
//  ОтказПроведения    - флаг отказа в проведении,
//  ЗаголовокСообщения - строка, заголовок сообщения об ошибке проведения.
//
Процедура КонтрольОстатков(ДокументОбъект, ИмяТабЧасти, СтруктураШапки, ОтказПроведения, ЗаголовокСообщения) Экспорт

	Если ИмяТабЧасти<>"" Тогда  //Имя таб части может быть не указана для документа КомплектацияНоменклатуры с видом операции Разукомплектация
		Если ДокументОбъект[ИмяТабЧасти].Количество()=0 Тогда //если в таб.части ничего нет - не надо проверять
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СтруктураШапкиДокумента = СтруктураШапки;
	ИмяТабличнойЧасти       = ИмяТабЧасти;
	Отказ                   = ОтказПроведения;
	Заголовок               = ЗаголовокСообщения;

	МетаданныеДокумента = ДокументОбъект.Метаданные();
	ИмяДокумента        = МетаданныеДокумента.Имя;
	ИмяТаблицы          = ИмяДокумента + "." + СокрЛП(ИмяТабличнойЧасти);
	ИспользоватьУказаниеСерийНоменклатурыПриРезервировании = Константы.ИспользоватьУказаниеСерийНоменклатурыПриРезервировании.Получить();

	Если 
		ИмяДокумента = "РеализацияТоваровУслуг" Тогда  
		//контроль достаточности остатков в резерве для снятия резерва по заказу
			КонтрольОстатков_Реализация(ДокументОбъект);
	ИначеЕсли 
		ИмяДокумента = "ВозвратТоваровПоставщику" ИЛИ ИмяДокумента = "ТребованиеНакладная" Тогда
		//контроль достаточности остатков в резерве для снятия резерва по заказу
			КонтрольОстатков_СкладВТабЧасти_ЗаказВТабЧасти();
	ИначеЕсли //Склад в ТЧ, заказ в шапке - РезервированиеТоваров (в отдельной ветке), Авансовый отчет (документ резерва = приходный ордер из шапки документа)
		ИмяДокумента = "АвансовыйОтчет" Тогда
		//контроль достаточности остатков в резерве для снятия резерва по приходному ордеру без права продажи
			КонтрольОстатков_СкладВТабЧасти_ЗаказВШапке();
	ИначеЕсли 
		ИмяДокумента = "РезервированиеТоваров" Тогда
		// в документе РезервированиеТоваров контроля остатков должно быть два - 
		//	1) контроль остатка по регистру ТоварыВРезерве для снятия резерва (для строк с указанием склада в реквизите ИсходноеРазмещение)
		//	2) контроль достаточности свободного остатка для резервирования (для строк с указанием склада в реквизите НовоеРазмещение)
		КонтрольОстатков_СкладВТабЧасти_ЗаказВШапке();
	    КонтрольСвободныхОстатков_Заказ_КорректировкаЗаказа_Резервирование(ДокументОбъект);
	ИначеЕсли 
		 ИмяДокумента = "КомплектацияНоменклатуры" Тогда //процедура контроля остатков зависит от вида операции документа
		 флКонтролироватьОстатки = истина;
		 Если СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация Тогда
		 	ИмяТаблицы = ИмяДокумента;  //при разукомплектации реквизиты берутся из шапки документа - переприсвоим имя таблицы.
			Если СтруктураШапкиДокумента.СпособСписанияОстаткаТоваров <> Перечисления.СпособыСписанияОстаткаТоваров.ИзРезерва Тогда
				//списание комплекта не из резерва - не надо контролировать остатки
				флКонтролироватьОстатки = ложь;
			КонецЕсли;
		КонецЕсли;
		Если флКонтролироватьОстатки Тогда
			//контроль достаточности остатков в резерве для снятия резерва по комплекту или комплектующим
		 	КонтрольОстатков_СкладВШапке_ЗаказВШапке();
		КонецЕсли;	
	ИначеЕсли  //Склад и заказ расположены в шапке документа
	    ИмяДокумента = "РасходныйОрдерНаТовары"  Тогда
		//контроль достаточности остатков в резерве для снятия резерва 
			КонтрольОстатков_СкладВШапке_ЗаказВШапке();
	ИначеЕсли //Склад в шапке, заказ в таб части 
	   	ИмяДокумента = "СписаниеТоваров" ИЛИ 
	   	ИмяДокумента = "ПеремещениеТоваров"  Тогда
		//контроль достаточности остатков в резерве для снятия резерва
			КонтрольОстатков_СкладВШапке_ЗаказВТабЧасти();
	ИначеЕсли 
		ИмяДокумента = "ПоступлениеТоваровУслуг"	Тогда
		//Контроль свободных остатков для резервирования под заказ
		ТабРаспределениеОбособленныйУчет = новый ТаблицаЗначений;
		ТабРаспределениеОбособленныйУчет.Колонки.Добавить("Номенклатура");
		ТабРаспределениеОбособленныйУчет.Колонки.Добавить("ХарактеристикаНоменклатуры");
		ТабРаспределениеОбособленныйУчет.Колонки.Добавить("Склад");
		ТабРаспределениеОбособленныйУчет.Колонки.Добавить("Количество");
		
		//для ТЧ Товары контроль свободных остатков может происходить в два приема: для заказов покупателей с обособленным учетом и
		//	для всех остальных заказов
		Если ИмяТабличнойЧасти = "Товары" и ИспользоватьУказаниеСерийНоменклатурыПриРезервировании Тогда
			//первый проход - контроль свободных остатков для строк табличной части, в которых указан заказ покупателя с обособленным учетом. Происходит с учетом серий номенклатуры.
			//	в процессе контроля происходит заполнение таблицы ТабРаспределениеОбособленныйУчет
	      КонтрольСвободныхОстатков_ПТиУ(истина, ТабРаспределениеОбособленныйУчет);
	  	КонецЕсли;
	    //второй проход - происходит без учета серий номенклатуры.
		//	в процессе контроля происходит анализ таблицы ТабРаспределениеОбособленныйУчет, заполненной на первом проходе
	  	КонтрольСвободныхОстатков_ПТиУ(ложь, ТабРаспределениеОбособленныйУчет);
	ИначеЕсли 
		ИмяДокумента = "КорректировкаЗаказаПокупателя" ИЛИ
		ИмяДокумента = "КорректировкаВнутреннегоЗаказа" или 
		ИмяДокумента = "ЗаказПокупателя" или
		ИмяДокумента = "ВнутреннийЗаказ" Тогда
		  КонтрольСвободныхОстатков_Заказ_КорректировкаЗаказа_Резервирование(ДокументОбъект);

	Иначе
		 Сообщить("Для документа "+ДокументОбъект+" не предусмотрен вызов процедуры 'Контроль остатков' модуля регистра 'Товары в резерве на складах'");
	КонецЕсли;
	
	//вернем обратно признак отказа от проведения документа 
	ОтказПроведения = Отказ;
    ЗаголовокСообщения = Заголовок;

КонецПроцедуры // КонтрольОстатков()

//Процедура контролирует остаток по данному регистру для документа РеализацияТоваровИУслуг
//Особенность документа - наличие дополнительной табличной части "Состав набора", в которой может быть списание состава набора из резерва по заказу.
//	В этом случае необходимо контролировать также остатки по резервам для состава набора.
//
// Параметры:
//  ДокументОбъект     - объект проводимого документа. 
//
Процедура КонтрольОстатков_Реализация(ДокументОбъект)

	ЕстьСоставНабора    = Ложь;
	Если ДокументОбъект.СоставНабора.Количество() > 0 и ИмяТабличнойЧасти="Товары" Тогда
		ЕстьСоставНабора = Истина;
	КонецЕсли;

	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	Если ЕстьСоставНабора Тогда
		ТекстЗапросаСписокНоменклатуры = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Док.Номенклатура КАК Номенклатура
		|ИЗ
		|	(
		|	ВЫБРАТЬ
		|		Док.Номенклатура
		|	ИЗ
		|		Документ." + ИмяТаблицы +" КАК Док
		|	ГДЕ
		|		Док.Ссылка = &ДокументСсылка
		|		И НЕ Док.Номенклатура.Комплект
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Док.Номенклатура
		|	ИЗ
		|		Документ." + ИмяДокумента + ".СоставНабора КАК Док
		|	ГДЕ
		|		Док.Ссылка = &ДокументСсылка
		|	) КАК Док
		|";

		ТекстЗапросаРеквизитыДокумента = "
		|	(ВЫБРАТЬ
		//Строки ТЧ Товары, в которых номенклатура - не комплект
		|			Док.Ссылка,
		|			Док.Номенклатура,
		|			Док.Склад,
		|			Док.СпособСписанияОстаткаТоваров,
		|			Док.ХарактеристикаНоменклатуры,
		|			Док.СерияНоменклатуры,
		|			Док.Коэффициент,
		|			Док.ЗаказПокупателя,
		|			Док.ЕдиницаИзмерения,
		|			Док.Количество
		|		ИЗ
		|			Документ." + ИмяТаблицы + " КАК Док
		|		ГДЕ
		|			Док.Ссылка = &ДокументСсылка
		|			И НЕ Док.Номенклатура.Комплект
		|           И Док.СпособСписанияОстаткаТоваров = &ИзРезерва
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		//Строки ТЧ Состав набора
		|		ВЫБРАТЬ
		|			Док.Ссылка,
		|			Док.Номенклатура,
		|			Док.Склад,
		|			Док.СпособСписанияОстаткаТоваров,
		|			Док.ХарактеристикаНоменклатуры,
		|			Док.СерияНоменклатуры,
		|			Док.Коэффициент,
		|			Док.ЗаказПокупателя,
		|			Док.ЕдиницаИзмерения,
		|			Док.Количество
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ДокНаб.Ссылка,
		|				ДокНаб.Номенклатура,
		//Склад может быть указан в целом для набора в строке ТЧ Товары, или для каждого элемента набора в ТЧ СоставНабора
		|				ВЫБОР
		|					КОГДА ДокНаб.Склад = &ПустойСклад ТОГДА ДокТов.Склад
		|					ИНАЧЕ ДокНаб.Склад
		|				КОНЕЦ КАК Склад,
		//СпособСписанияОстатков может быть указан в целом для набора в строке ТЧ Товары, или для каждого элемента набора в ТЧ СоставНабора
		|				ВЫБОР
		|					КОГДА ДокНаб.СпособСписанияОстаткаТоваров = &ПустойСпособСписания ТОГДА ДокТов.СпособСписанияОстаткаТоваров
		|					ИНАЧЕ ДокНаб.СпособСписанияОстаткаТоваров
		|				КОНЕЦ КАК СпособСписанияОстаткаТоваров,
		|				ДокНаб.ХарактеристикаНоменклатуры,
		|				ДокНаб.СерияНоменклатуры,
		|				ДокНаб.ЕдиницаИзмерения.Коэффициент КАК Коэффициент,
		|				ДокТов.ЗаказПокупателя,
		|				ДокТов.ЕдиницаИзмерения,
		|				ДокНаб.Количество * ДокТов.Количество КАК Количество
		|			ИЗ
		|				Документ." + ИмяДокумента + ".СоставНабора   КАК ДокНаб
		|				ЛЕВОЕ СОЕДИНЕНИЕ Документ." + ИмяТаблицы + " КАК ДокТов
		|					ПО ДокТов.КлючСтроки = ДокНаб.КлючСтроки
		|					 И ДокТов.Ссылка     = &ДокументСсылка
		|			ГДЕ
		|				ДокНаб.Ссылка = &ДокументСсылка
		|
		|			) КАК Док
		|       ГДЕ Док.СпособСписанияОстаткаТоваров = &ИзРезерва
		|		) КАК Док
		|";
		
		//склады могут задаваться как в ТЧ Товары, так и в ТЧ СоставНабора
		ТекстЗапросаСклады = "ВЫБРАТЬ РАЗЛИЧНЫЕ 
		|Склад ИЗ Документ."+ИмяТаблицы+"
		|ГДЕ Ссылка=&ДокументСсылка
        |
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ Склад ИЗ Документ." + ИмяДокумента + ".СоставНабора
		|ГДЕ Ссылка=&ДокументСсылка 
		//склад может быть не задан - в этом случае используется склад из соответствующей строки ТЧ Товары
		|И Склад<>&ПустойСклад";
	Иначе
		ТекстЗапросаСписокНоменклатуры = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Номенклатура 
		|ИЗ
		|	Документ." + ИмяТаблицы +"
		|ГДЕ  Ссылка = &ДокументСсылка
		|";

		ТекстЗапросаРеквизитыДокумента = "
		|	Документ." + ИмяТаблицы + "
		|	КАК Док
		|";
		ТекстЗапросаСклады = "Выбрать различные Склад ИЗ Документ."+ИмяТаблицы+"
		|ГДЕ Ссылка=&ДокументСсылка";

	КонецЕсли;
	
	ЗапросСклады = новый Запрос;
	ЗапросСклады.Текст = ТекстЗапросаСклады;
	ЗапросСклады.УстановитьПараметр("ДокументСсылка",СтруктураШапкиДокумента.Ссылка);
	ЗапросСклады.УстановитьПараметр("ПустойСклад",Справочники.Склады.ПустаяСсылка());
	СписокСкладов = ЗапросСклады.Выполнить().Выгрузить().ВыгрузитьКолонку("Склад");
	
	ТекстЗапросаДокументыРезерва = " 		
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаказПокупателя КАК ДокументРезерва 
		|ИЗ
		|	Документ." + ИмяТаблицы +"
		|ГДЕ  Ссылка = &ДокументСсылка
		|";
    ЗапросДокументыРезерва = новый Запрос;
	ЗапросДокументыРезерва.Текст = ТекстЗапросаДокументыРезерва;
	ЗапросДокументыРезерва.УстановитьПараметр("ДокументСсылка",СтруктураШапкиДокумента.Ссылка);
    СписокДокументыРезерва = ЗапросДокументыРезерва.Выполнить().Выгрузить().ВыгрузитьКолонку("ДокументРезерва");


	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",        СтруктураШапкиДокумента.Ссылка);
	Запрос.УстановитьПараметр("СписокСкладов",         СписокСкладов);
	Запрос.УстановитьПараметр("СписокДокументовРезерва", СписокДокументыРезерва);
	Запрос.УстановитьПараметр("ИзРезерва",             Перечисления.СпособыСписанияОстаткаТоваров.ИзРезерва);
	Запрос.УстановитьПараметр("ПустойСпособСписания",  Перечисления.СпособыСписанияОстаткаТоваров.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойСклад",  		   Справочники.Склады.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяХарактеристика",  Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСерия",  		   Справочники.СерииНоменклатуры.ПустаяСсылка());

	МассивПустыхСсылок = Новый Массив;
	МассивПустыхСсылок.Добавить(Неопределено);
	МассивПустыхСсылок.Добавить(Документы.ЗаказПокупателя.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("МассивПустыхСсылок", МассивПустыхСсылок);

	ТекстЗапроса = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление               			КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление  КАК ЕдиницаХраненияОстатковПредставление,
	|   %ПОЛЕ_Док_Характеристика% 								КАК ХарактеристикаНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(%ПОЛЕ_Док_Характеристика%) 				КАК ХарактеристикаНоменклатурыПредставление,
	|   %ПОЛЕ_Док_Серия% 										КАК СерияНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(%ПОЛЕ_Док_Серия%) 						КАК СерияНоменклатурыПредставление,
	|	Док.ЗаказПокупателя 									КАК ДокументРезерва,
	|   Док.Склад               								КАК Склад,
	|   %ПОЛЕ_Док_Количество% 									КАК ДокументКоличество,
	|	ЕСТЬNULL(МАКСИМУМ(Резервы.КоличествоОстаток), 0) 		КАК РезервыКоличество
	|ИЗ 
	|	"+ ТекстЗапросаРеквизитыДокумента + "
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(,Склад в (&СписокСкладов) И
	|		ДокументРезерва в (&СписокДокументовРезерва) И
	|		%ВыборкаПоНоменклатуре%) КАК Резервы
	|ПО 
	|	Док.Номенклатура                = Резервы.Номенклатура
	|	И Док.Склад 					= Резервы.Склад
	|	И Док.ЗаказПокупателя 			= Резервы.ДокументРезерва
	|   //СОЕДИНЕНИЕ_Характеристика_Резервы
	|   //СОЕДИНЕНИЕ_Серия_Резервы
	|ГДЕ
	|	Не Док.Номенклатура.Комплект
	|	И Док.Ссылка  =  &ДокументСсылка
	| 	И Док.СпособСписанияОстаткаТоваров = &ИзРезерва
	|	И (НЕ Док.ЗаказПокупателя В (&МассивПустыхСсылок))
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура,
	|   %ПОЛЕ_Док_Характеристика%,
	|   %ПОЛЕ_Док_Серия%,
	|	Док.ЗаказПокупателя,
	|	Док.Склад
	|ИМЕЮЩИЕ ЕСТЬNULL(МАКСИМУМ(Резервы.КоличествоОстаток), 0) < %ПОЛЕ_Док_Количество%
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";
	УчитыватьСерии = ложь;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ВыборкаПоНоменклатуре%","Номенклатура В ("+ТекстЗапросаСписокНоменклатуры+")");

	Если ИмяТабличнойЧасти = "ВозвратнаяТара" Тогда
		//нет серии, характеристики, единицы измерения и коэффициента
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество%","Сумма(Док.Количество)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Характеристика%","&ПустаяХарактеристика");

	Иначе
		//есть характеристика, единица измерения и коэффициент. 
		//Наличие серии зависит от того, ведется ли по договору обособленный учет.
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество%","Сумма(ВЫРАЗИТЬ(Док.Количество * Док.Коэффициент / Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3)))");
		
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Характеристика%","Док.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_Резервы","И Док.ХарактеристикаНоменклатуры  = Резервы.ХарактеристикаНоменклатуры");

		Если ИспользоватьУказаниеСерийНоменклатурыПриРезервировании Тогда
			//считаем что договор в заказах соответствует договору в шапке документа.
			Если СтруктураШапкиДокумента.ОбособленныйУчетТоваровПоЗаказамПокупателей Тогда
				УчитыватьСерии = истина;
		        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Серия%","Док.СерияНоменклатуры");
		        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Серия_Резервы","И (Док.СерияНоменклатуры  = Резервы.СерияНоменклатуры)");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если не УчитыватьСерии Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Серия%","&ПустаяСерия");
	КонецЕсли;

    Запрос.Текст = ТекстЗапроса;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		СтрокаСообщения = "Остатка резерва " + 
		УправлениеЗапасами.ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
								  ?(ИмяТабличнойЧасти <> "ВозвратнаяТара", " "+Выборка.ХарактеристикаНоменклатурыПредставление, ""),
								  ?(УчитыватьСерии, " "+Выборка.СерияНоменклатурыПредставление, "")) +
		" на складе """ + СокрЛП(Выборка.Склад) + """ по документу """ + СокрЛП(Выборка.ДокументРезерва) + 
		""" недостаточно.";

		УправлениеЗапасами.ОшибкаНетОстатка(СтрокаСообщения, Выборка.РезервыКоличество, Выборка.ДокументКоличество,
		Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);

	КонецЦикла;


КонецПроцедуры  //КонтрольОстатков_Реализация()

//Процедура контролирует остаток по данному регистру для документов, у которых склад и документ резерва находятся в табличной части
//	Особенность документа: 
//	Наличие склада и документа резерва в табличной части.
//	В связи с этим склад и документ резерва извлекаются из таб части документа и используется соединение 
//	с виртуальной таблицей ТоварыВРезерве по складу и документу резерва
Процедура КонтрольОстатков_СкладВТабЧасти_ЗаказВТабЧасти()
	ИмяДокументРезерва  = "Заказ";

	Если ИмяДокумента = "ТребованиеНакладная" Тогда
		ИмяДокументРезерва  = "ЗаказРезерв";
    КонецЕсли;
	ТекстЗапросаСписокНоменклатуры = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ  Ссылка = &ДокументСсылка
	|";

	ЗапросСклады = новый Запрос;
	ЗапросСклады.Текст = "Выбрать различные Склад ИЗ Документ."+ИмяТаблицы+"
	|ГДЕ Ссылка=&ДокументСсылка";
	ЗапросСклады.УстановитьПараметр("ДокументСсылка",СтруктураШапкиДокумента.Ссылка);
	СписокСкладов = ЗапросСклады.Выполнить().Выгрузить().ВыгрузитьКолонку("Склад");

	ТекстЗапросаДокументыРезерва = " 		
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	"+ИмяДокументРезерва+" КАК ДокументРезерва 
		|ИЗ
		|	Документ." + ИмяТаблицы +"
		|ГДЕ  Ссылка = &ДокументСсылка
		|";
    ЗапросДокументыРезерва = новый Запрос;
	ЗапросДокументыРезерва.Текст = ТекстЗапросаДокументыРезерва;
	ЗапросДокументыРезерва.УстановитьПараметр("ДокументСсылка",СтруктураШапкиДокумента.Ссылка);
    СписокДокументыРезерва = ЗапросДокументыРезерва.Выполнить().Выгрузить().ВыгрузитьКолонку("ДокументРезерва");

	

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",        СтруктураШапкиДокумента.Ссылка);
	Запрос.УстановитьПараметр("СписокСкладов",         СписокСкладов);
	Запрос.УстановитьПараметр("СписокДокументовРезерва", СписокДокументыРезерва);
	Запрос.УстановитьПараметр("ПустойЗаказПокупателя", Документы.ЗаказПокупателя.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяХарактеристика",  Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСерия",  		   Справочники.СерииНоменклатуры.ПустаяСсылка());


	МассивПустыхСсылок = ОбщегоНазначения.МассивПустыхЗначений(МетаданныеДокумента.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты[ИмяДокументРезерва].Тип);
	
	Запрос.УстановитьПараметр("МассивПустыхСсылок", МассивПустыхСсылок);

	ТекстЗапроса = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление               				КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление      КАК ЕдиницаХраненияОстатковПредставление,
	|   %ПОЛЕ_Док_Характеристика% 									КАК ХарактеристикаНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(%ПОЛЕ_Док_Характеристика%) 					КАК ХарактеристикаНоменклатурыПредставление,
	|   %ПОЛЕ_Док_Серия% 											КАК СерияНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(%ПОЛЕ_Док_Серия%) 							КАК СерияНоменклатурыПредставление,
	|   %ПОЛЕ_Док_Количество% 										КАК ДокументКоличество,
	|	%ПОЛЕ_Док_Заказ% 											КАК ДокументРезерва,
	|   Док.Склад               									КАК Склад,
	|	ЕСТЬNULL(Максимум(Резервы.КоличествоОстаток), 0) 			КАК РезервыКоличество
	|ИЗ  Документ." + ИмяТаблицы + " 								КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(,Склад в (&СписокСкладов) И
	|		ДокументРезерва в (&СписокДокументовРезерва) И
	|		%ВыборкаПоНоменклатуре%) КАК Резервы
	|ПО 
	|	Док.Номенклатура                = Резервы.Номенклатура
	|	И Док.Склад 					= Резервы.Склад
	| 	И %ПОЛЕ_Док_Заказ%      				= Резервы.ДокументРезерва
	|   //СОЕДИНЕНИЕ_Характеристика_Резервы
	|   //СОЕДИНЕНИЕ_Серия_Резервы
	|ГДЕ
	|	Не Док.Номенклатура.Комплект
	|	И Док.Ссылка  =  &ДокументСсылка
	|	И НЕ %ПОЛЕ_Док_Заказ% В (&МассивПустыхСсылок)
	|СГРУППИРОВАТЬ ПО
	|	Док.Номенклатура,
	|   %ПОЛЕ_Док_Характеристика%,
	|   %ПОЛЕ_Док_Серия%,
	|//Сгруппировать_Серия
	|	%ПОЛЕ_Док_Заказ%,
	|	Док.Склад
	|ИМЕЮЩИЕ ЕСТЬNULL(МАКСИМУМ(Резервы.КоличествоОстаток), 0) < %ПОЛЕ_Док_Количество%
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";
	
	УчитыватьСерии = ложь;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ВыборкаПоНоменклатуре%","Номенклатура В ("+ТекстЗапросаСписокНоменклатуры+")");
    ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Заказ%","Док."+ИмяДокументРезерва);

	Если ИмяТабличнойЧасти = "ВозвратнаяТара" Тогда
		//нет серии, характеристики, единицы измерения и коэффициента
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество%","Сумма(Док.Количество)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Характеристика%","&ПустаяХарактеристика");
	Иначе
		//есть характеристика, единица измерения и коэффициент. 
		//Наличие серии зависит от того, ведется ли по договору обособленный учет.
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество%","Сумма(ВЫРАЗИТЬ(Док.Количество * Док.Коэффициент / Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3)))");
		
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Характеристика%","Док.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_Резервы","И Док.ХарактеристикаНоменклатуры  = Резервы.ХарактеристикаНоменклатуры");

		Если ИспользоватьУказаниеСерийНоменклатурыПриРезервировании Тогда
			УчитыватьСерии = истина;

			//серии контролируются для строк, в которых указан заказ по которому ведется обособленный учет товаров по заказу покупателя
			ТекстСерия = "ВЫБОР КОГДА ЕстьNull(ВЫРАЗИТЬ(Док."+ИмяДокументРезерва+" КАК Документ.ЗаказПокупателя).ДоговорКонтрагента.ОбособленныйУчетТоваровПоЗаказамПокупателей,ложь) ТОГДА Док.СерияНоменклатуры ИНАЧЕ &ПустаяСерия КОНЕЦ";
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Серия%",ТекстСерия);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Серия_Резервы","И ((НЕ ЕстьNull(ВЫРАЗИТЬ(Док."+ИмяДокументРезерва+" КАК Документ.ЗаказПокупателя).ДоговорКонтрагента.ОбособленныйУчетТоваровПоЗаказамПокупателей,ложь)) ИЛИ (Док.СерияНоменклатуры  = Резервы.СерияНоменклатуры))");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//Сгруппировать_Серия","Док.СерияНоменклатуры,"); //необходимо чтобы корректно отработало соединение  по серии с таблицей резервов

		КонецЕсли;
	КонецЕсли;
	Если не УчитыватьСерии Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Серия%","&ПустаяСерия");
	КонецЕсли;

	
    Запрос.Текст = ТекстЗапроса;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		СтрокаСообщения = "Остатка резерва " + 
		УправлениеЗапасами.ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
								  ?(ИмяТабличнойЧасти <> "ВозвратнаяТара", " "+Выборка.ХарактеристикаНоменклатурыПредставление, ""),
								  ?(УчитыватьСерии, " "+Выборка.СерияНоменклатурыПредставление, "")) +
		" на складе """ + СокрЛП(Выборка.Склад) + """ по документу """ + СокрЛП(Выборка.ДокументРезерва) + 
		""" недостаточно.";

		УправлениеЗапасами.ОшибкаНетОстатка(СтрокаСообщения, Выборка.РезервыКоличество, Выборка.ДокументКоличество,
		Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);

	КонецЦикла;


КонецПроцедуры //КонтрольОстатков_ВозвратТоваровПоставщику()

//Процедура контролирует остаток по данному регистру для документов, у которых склад в таб части, а документ резерва (заказ) - в шапке
//	В связи с этим:
//	1) Склад извлекается из таб части документа и используется соединение с виртуальной таблицей ТоварыВРезерве по складу
//	2) Используется отбор в виртуальной таблица ТоварыВРезерве по документу резерва, указанному в шапке документа 
Процедура КонтрольОстатков_СкладВТабЧасти_ЗаказВШапке()
	
	Если ИмяДокумента = "АвансовыйОтчет" Тогда
		ИмяСкладТабличнойЧасти = "Склад";  //АвОтчет
		ИмяДокументРезерва = "СкладОрдер";
	ИначеЕсли ИмяДокумента = "РезервированиеТоваров" Тогда
		ИмяСкладТабличнойЧасти = "ИсходноеРазмещение";   //Резервирование
		ИмяДокументРезерва = "Заказ";
    КонецЕсли;
	
	ТекстЗапросаСписокНоменклатуры = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ  Ссылка = &ДокументСсылка
	|";

	ЗапросСклады = новый Запрос;
	ТекстЗапросаСклады = "Выбрать различные %ПОЛЕ_Склад% КАК Склад 
	|ИЗ Документ."+ИмяТаблицы+"
	|ГДЕ %ПОЛЕ_Склад% ССЫЛКА Справочник.Склады и %ПОЛЕ_Склад%<>&ПустойСклад
	| 	И Ссылка=&ДокументСсылка";
	ТекстЗапросаСклады = СтрЗаменить(ТекстЗапросаСклады,"%ПОЛЕ_Склад%",ИмяСкладТабличнойЧасти);

	ЗапросСклады.Текст = ТекстЗапросаСклады;
	ЗапросСклады.УстановитьПараметр("ПустойСклад",Справочники.Склады.ПустаяСсылка());
	ЗапросСклады.УстановитьПараметр("ДокументСсылка",СтруктураШапкиДокумента.Ссылка);
	СписокСкладов = ЗапросСклады.Выполнить().Выгрузить().ВыгрузитьКолонку("Склад");

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",        	СтруктураШапкиДокумента.Ссылка);
	Запрос.УстановитьПараметр("СписокСкладов",         	СписокСкладов);
	Запрос.УстановитьПараметр("ПустойСклад",         	Справочники.Склады.ПустаяСсылка());
	Запрос.УстановитьПараметр("ДокументРезерва", 		СтруктураШапкиДокумента[ИмяДокументРезерва]);
    Запрос.УстановитьПараметр("ПустаяХарактеристика",  	Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСерия",  		   	Справочники.СерииНоменклатуры.ПустаяСсылка());


	ТекстЗапроса = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление               			КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление  КАК ЕдиницаХраненияОстатковПредставление,
	|   %ПОЛЕ_Док_Характеристика% 								КАК ХарактеристикаНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(%ПОЛЕ_Док_Характеристика%) 				КАК ХарактеристикаНоменклатурыПредставление,
	|   %ПОЛЕ_Док_Серия% 										КАК СерияНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(%ПОЛЕ_Док_Серия%) 						КАК СерияНоменклатурыПредставление,
	|   %ПОЛЕ_Док_Количество% 									КАК ДокументКоличество,
	|   &ДокументРезерва                             			КАК ДокументРезерва,
	|   %ПОЛЕ_Док_Склад%               							КАК Склад,
	|	ЕСТЬNULL(МАКСИМУМ(Резервы.КоличествоОстаток), 0) 		КАК РезервыКоличество
	|ИЗ 
	|	Документ." + ИмяТаблицы + " КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(,Склад в (&СписокСкладов) И
	|		%ВыборкаПоНоменклатуре%
	|       И ДокументРезерва = &ДокументРезерва) КАК Резервы
	|ПО 
	|	Док.Номенклатура                = Резервы.Номенклатура
	|   //СОЕДИНЕНИЕ_Характеристика_Резервы
	|   //СОЕДИНЕНИЕ_Серия_Резервы
	| 	И %ПОЛЕ_Док_Склад%  = Резервы.Склад
	|ГДЕ
	|	Не Док.Номенклатура.Комплект
	|	И Док.Ссылка  =  &ДокументСсылка
	|	И %ПОЛЕ_Док_Склад%  ССЫЛКА Справочник.Склады 
	|	И %ПОЛЕ_Док_Склад%<>&ПустойСклад
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура,
	|   %ПОЛЕ_Док_Характеристика%,
	|   %ПОЛЕ_Док_Серия%,
	|	%ПОЛЕ_Док_Склад%
	|ИМЕЮЩИЕ ЕСТЬNULL(МАКСИМУМ(Резервы.КоличествоОстаток), 0) < %ПОЛЕ_Док_Количество%
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";

	УчитыватьСерии = ложь;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ВыборкаПоНоменклатуре%","Номенклатура В ("+ТекстЗапросаСписокНоменклатуры+")");
    ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Склад%","Док."+ИмяСкладТабличнойЧасти);

	Если ИмяТабличнойЧасти = "ВозвратнаяТара" Тогда
		//нет серии, характеристики, единицы измерения и коэффициента
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество%","Сумма(Док.Количество)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Характеристика%","&ПустаяХарактеристика");
	Иначе
		//есть характеристика, единица измерения и коэффициент. 
		//Наличие серии зависит от того, ведется ли по заказу под который резервируем обособленный учет.
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество%","Сумма(ВЫРАЗИТЬ(Док.Количество * Док.Коэффициент / Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3)))");
		
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Характеристика%","Док.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_Резервы","И Док.ХарактеристикаНоменклатуры  = Резервы.ХарактеристикаНоменклатуры");

		Если ИспользоватьУказаниеСерийНоменклатурыПриРезервировании И ИмяДокумента = "РезервированиеТоваров" Тогда
			//для авансового отчета не проверяем - там контроль остатков происходит по документу резерва ПриходныйОрдер
			Если СтруктураШапкиДокумента.ОбособленныйУчетТоваровПоЗаказамПокупателей Тогда
				УчитыватьСерии = истина;

				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Серия%","Док.СерияНоменклатуры");
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Серия_Резервы","И Док.СерияНоменклатуры  = Резервы.СерияНоменклатуры");
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	Если не УчитыватьСерии Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Серия%","&ПустаяСерия");
	КонецЕсли;

	
    Запрос.Текст = ТекстЗапроса;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		СтрокаСообщения = "Остатка резерва " + 
		УправлениеЗапасами.ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
								  ?(ИмяТабличнойЧасти <> "ВозвратнаяТара", " "+Выборка.ХарактеристикаНоменклатурыПредставление, ""),
								  ?(УчитыватьСерии, " "+Выборка.СерияНоменклатурыПредставление, "")) +
		" на складе """ + СокрЛП(Выборка.Склад) + """ по документу """ + СокрЛП(Выборка.ДокументРезерва) + 
		""" недостаточно.";

		УправлениеЗапасами.ОшибкаНетОстатка(СтрокаСообщения, Выборка.РезервыКоличество, Выборка.ДокументКоличество,
		Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);

	КонецЦикла;


КонецПроцедуры  //КонтрольОстатков_СкладВТабЧасти_ЗаказВШапке

//Процедура контролирует остаток по данному регистру для документов, у которых склад в шапке, а документ резерва - в таб части
//	В связи с этим:
//	1) Документ резерва извлекается из таб части документа и используется соединение с виртуальной таблицей ТоварыВРезерве по измерению ДОкументРезерва
//	2) Используется отбор в виртуальной таблица ТоварыВРезерве по складу, указанному в шапке документа 
Процедура КонтрольОстатков_СкладВШапке_ЗаказВТабЧасти()
	ИмяДокументРезерва = "ДокументРезерва";
	ИмяРеквизитаСклад = "Склад";
	Если ИмяДокумента = "ПеремещениеТоваров" Тогда
		ИмяРеквизитаСклад = "СкладОтправитель";
	КонецЕсли;
	ТекСклад               = СтруктураШапкиДокумента[ИмяРеквизитаСклад];

	ТекстЗапросаСписокНоменклатуры = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ  Ссылка = &ДокументСсылка
	|";
	
	ТекстЗапросаДокументыРезерва = " 		
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	%ПОЛЕ_ДокументРезерва% КАК ДокументРезерва 
		|ИЗ
		|	Документ." + ИмяТаблицы +"
		|ГДЕ  Ссылка = &ДокументСсылка
		|";
    ЗапросДокументыРезерва = новый Запрос;
	ТекстЗапросаДокументыРезерва = СтрЗаменить(ТекстЗапросаДокументыРезерва,"%ПОЛЕ_ДокументРезерва%",ИмяДокументРезерва);
	ЗапросДокументыРезерва.Текст = ТекстЗапросаДокументыРезерва;
	ЗапросДокументыРезерва.УстановитьПараметр("ДокументСсылка",СтруктураШапкиДокумента.Ссылка);
    СписокДокументыРезерва = ЗапросДокументыРезерва.Выполнить().Выгрузить().ВыгрузитьКолонку("ДокументРезерва");


	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",        СтруктураШапкиДокумента.Ссылка);
	Запрос.УстановитьПараметр("Склад",                 ТекСклад);
	Запрос.УстановитьПараметр("СписокДокументовРезерва", СписокДокументыРезерва);
	Запрос.УстановитьПараметр("ИзРезерва",             Перечисления.СпособыСписанияОстаткаТоваров.ИзРезерва);
	Запрос.УстановитьПараметр("ПустойСклад",           Справочники.Склады.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСерия",           Справочники.СерииНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяХарактеристика",  Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());

	МассивПустыхСсылок = ОбщегоНазначения.МассивПустыхЗначений(МетаданныеДокумента.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты[ИмяДокументРезерва].Тип);
	
	Запрос.УстановитьПараметр("МассивПустыхСсылок", МассивПустыхСсылок);

	ТекстЗапроса = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление               			КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление  КАК ЕдиницаХраненияОстатковПредставление,
	|   %ПОЛЕ_Док_Характеристика% 								КАК ХарактеристикаНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(%ПОЛЕ_Док_Характеристика%) 				КАК ХарактеристикаНоменклатурыПредставление,
	|   %ПОЛЕ_Док_Серия% 										КАК СерияНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(%ПОЛЕ_Док_Серия%) 						КАК СерияНоменклатурыПредставление,
	|	%ПОЛЕ_Док_ДокументРезерва% 								КАК ДокументРезерва,
	|   %ПОЛЕ_Док_Количество% 									КАК ДокументКоличество,
	|   &Склад                                       			КАК Склад, 
	|	ЕСТЬNULL(МАКСИМУМ(Резервы.КоличествоОстаток), 0) 		КАК РезервыКоличество
	|ИЗ 
	|	Документ." + ИмяТаблицы + " КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(,Склад = &Склад И
	|		ДокументРезерва в (&СписокДокументовРезерва) И
	|		%ВыборкаПоНоменклатуре%) КАК Резервы
	|ПО 
	|	Док.Номенклатура                = Резервы.Номенклатура
	|   //СОЕДИНЕНИЕ_Характеристика_Резервы
	|   //СОЕДИНЕНИЕ_Серия_Резервы
	|   //СОЕДИНЕНИЕ_ДокументРезерва_Резервы
	|ГДЕ
	|	Не Док.Номенклатура.Комплект
	|	И Док.Ссылка  =  &ДокументСсылка
	|	//УСЛОВИЕ_ДокументРезерва
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура,
	|   %ПОЛЕ_Док_Характеристика%,
	|   %ПОЛЕ_Док_Серия%,
	|//Сгруппировать_Серия
	|	%ПОЛЕ_Док_ДокументРезерва%
	|ИМЕЮЩИЕ ЕСТЬNULL(МАКСИМУМ(Резервы.КоличествоОстаток), 0) < %ПОЛЕ_Док_Количество%
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";

	УчитыватьСерии = ложь;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ВыборкаПоНоменклатуре%","Номенклатура В ("+ТекстЗапросаСписокНоменклатуры+")");
	
	ТипДокументРезерва = Метаданные.Документы[ИмяДокумента].ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты[ИмяДокументРезерва].Тип;

	ТекстУсловие = "И %ПОЛЕ_Док_ДокументРезерва% НЕ в (&МассивПустыхСсылок) 
		|И (%ПОЛЕ_Док_ДокументРезерва% ССЫЛКА Документ.ЗаказПокупателя
		|ИЛИ %ПОЛЕ_Док_ДокументРезерва% ССЫЛКА Документ.ВнутреннийЗаказ "
		+?(ТипДокументРезерва.СодержитТип(ТипЗнч("ДокументСсылка.ПриходныйОрдерНаТовары"))," ИЛИ %ПОЛЕ_Док_ДокументРезерва% ССЫЛКА Документ.ПриходныйОрдерНаТовары","")+")";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//УСЛОВИЕ_ДокументРезерва",ТекстУсловие);
    ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_ДокументРезерва%","Док."+ИмяДокументРезерва);
    ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_ДокументРезерва_Резервы","И Док."+ИмяДокументРезерва+" = Резервы.ДокументРезерва");
	
	Если ИмяТабличнойЧасти = "ВозвратнаяТара" Тогда
		//нет серии, характеристики, единицы измерения и коэффициента
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество%","Сумма(Док.Количество)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Характеристика%","&ПустаяХарактеристика");

	Иначе
		//есть характеристика, единица измерения и коэффициент. 
		//Наличие серии зависит от того, ведется ли по заказу под который резервируем обособленный учет.
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество%","Сумма(ВЫРАЗИТЬ(Док.Количество * Док.Коэффициент / Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3)))");

	    ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Характеристика%","Док.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_Резервы","И Док.ХарактеристикаНоменклатуры  = Резервы.ХарактеристикаНоменклатуры");
		
		Если ИспользоватьУказаниеСерийНоменклатурыПриРезервировании Тогда
			УчитыватьСерии = истина;
			//учет по сериям зависит от договора, который указан в документе резерва
			ТекстСерия = "ВЫБОР КОГДА ЕстьNull(ВЫРАЗИТЬ(Док."+ИмяДокументРезерва+" КАК Документ.ЗаказПокупателя).ДоговорКонтрагента.ОбособленныйУчетТоваровПоЗаказамПокупателей,ложь) ТОГДА Док.СерияНоменклатуры ИНАЧЕ &ПустаяСерия КОНЕЦ";
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Серия%",ТекстСерия);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Серия_Резервы","И ((НЕ ЕстьNull(ВЫРАЗИТЬ(Док."+ИмяДокументРезерва+" КАК Документ.ЗаказПокупателя).ДоговорКонтрагента.ОбособленныйУчетТоваровПоЗаказамПокупателей,ложь)) ИЛИ (Док.СерияНоменклатуры  = Резервы.СерияНоменклатуры))");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//Сгруппировать_Серия","Док.СерияНоменклатуры,"); //необходимо чтобы корректно отработало соединение

		КонецЕсли;
	КонецЕсли;
	Если не УчитыватьСерии Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Серия%","&ПустаяСерия");
	КонецЕсли;

    Запрос.Текст = ТекстЗапроса;

	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		СтрокаСообщения = "Остатка резерва " + 
		УправлениеЗапасами.ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
								  ?(ИмяТабличнойЧасти <> "ВозвратнаяТара", " "+Выборка.ХарактеристикаНоменклатурыПредставление, ""),
								  ?(УчитыватьСерии, " "+Выборка.СерияНоменклатурыПредставление, "")) +
		" на складе """ + СокрЛП(Выборка.Склад) + """ по документу """ + СокрЛП(Выборка.ДокументРезерва) + 
		""" недостаточно.";

		УправлениеЗапасами.ОшибкаНетОстатка(СтрокаСообщения, Выборка.РезервыКоличество, Выборка.ДокументКоличество,
		Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);

	КонецЦикла;

КонецПроцедуры //Процедура КонтрольОстатков_СкладВШапке_ЗаказВТабЧасти()

//Процедура контролирует остаток по данному регистру для документов, у которых склад и документ резерва - в шапке
//	В связи с этим используется отбор в виртуальной таблица ТоварыВРезерве по складу и документу резерва, указанным в шапке документа 
Процедура КонтрольОстатков_СкладВШапке_ЗаказВШапке()
	ЕстьСпособСписания  = ложь;
	
	ИмяРеквЗаказ = "Заказ";
	Если ИмяДокумента = "РасходныйОрдерНаТовары" Тогда
		ИмяРеквЗаказ = "ДокументПередачи";
	ИначеЕсли ИмяДокумента = "КомплектацияНоменклатуры" Тогда
		Если СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийКомплектацияНоменклатуры.Комплектация Тогда
			ЕстьСпособСписания  = истина;
		КонецЕсли;
	КонецЕсли;
	
	ТекстЗапросаСписокНоменклатуры = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ  Ссылка = &ДокументСсылка
	|";

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",        СтруктураШапкиДокумента.Ссылка);
	Запрос.УстановитьПараметр("Склад",                 СтруктураШапкиДокумента.Склад);
	Запрос.УстановитьПараметр("ИзРезерва",             Перечисления.СпособыСписанияОстаткаТоваров.ИзРезерва);
	Запрос.УстановитьПараметр("ДокументРезерва", СтруктураШапкиДокумента[ИмяРеквЗаказ]);
	Запрос.УстановитьПараметр("ПустаяХарактеристика",  Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСерия",  		   Справочники.СерииНоменклатуры.ПустаяСсылка());


	ТекстЗапроса = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление               			КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление  КАК ЕдиницаХраненияОстатковПредставление,
	|   %ПОЛЕ_Док_Характеристика% 								КАК ХарактеристикаНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(%ПОЛЕ_Док_Характеристика%) 				КАК ХарактеристикаНоменклатурыПредставление,
	|   %ПОЛЕ_Док_Серия% 										КАК СерияНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(%ПОЛЕ_Док_Серия%) 						КАК СерияНоменклатурыПредставление,
	|   %ПОЛЕ_Док_Количество% 									КАК ДокументКоличество,
	|   &ДокументРезерва 							 			КАК ДокументРезерва,
	|   &Склад                                       			КАК Склад, 
	|	ЕСТЬNULL(МАКСИМУМ(Резервы.КоличествоОстаток), 0) 		КАК РезервыКоличество
	|ИЗ 
	|	Документ." + ИмяТаблицы + " КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(,Склад = &Склад И
	|		%ВыборкаПоНоменклатуре%
	|       И ДокументРезерва = &ДокументРезерва) КАК Резервы
	|ПО 
	|	Док.Номенклатура                = Резервы.Номенклатура
	|   //СОЕДИНЕНИЕ_Характеристика_Резервы
	|   //СОЕДИНЕНИЕ_Серия_Резервы
	|ГДЕ
	|	Не Док.Номенклатура.Комплект
	|	И Док.Ссылка  =  &ДокументСсылка
	|   //УСЛОВИЕ_СпособСписания
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура,
	|   %ПОЛЕ_Док_Характеристика%,
	|   %ПОЛЕ_Док_Серия%
	|ИМЕЮЩИЕ ЕСТЬNULL(МАКСИМУМ(Резервы.КоличествоОстаток), 0) < %ПОЛЕ_Док_Количество%
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";
	
	УчитыватьСерии = ложь;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ВыборкаПоНоменклатуре%","Номенклатура В ("+ТекстЗапросаСписокНоменклатуры+")");

	Если ЕстьСпособСписания Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//УСЛОВИЕ_СпособСписания","И Док.СпособСписанияОстаткаТоваров=&ИзРезерва");
	КонецЕсли;
	
	Если ИмяТабличнойЧасти = "ВозвратнаяТара" Тогда
		//нет серии, характеристики, единицы измерения и коэффициента
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество%","Сумма(Док.Количество)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Характеристика%","&ПустаяХарактеристика");
	Иначе
		//есть характеристика, единица измерения и коэффициент. 
		//Наличие серии зависит от того, ведется ли по заказу под который резервируем обособленный учет.
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество%","Сумма(ВЫРАЗИТЬ(Док.Количество * Док.Коэффициент / Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3)))");

	    ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Характеристика%","Док.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_Резервы","И Док.ХарактеристикаНоменклатуры  = Резервы.ХарактеристикаНоменклатуры");
		
		Если ИспользоватьУказаниеСерийНоменклатурыПриРезервировании Тогда
			Если ТипЗнч(СтруктураШапкиДокумента[ИмяРеквЗаказ])=Тип("ДокументСсылка.ЗаказПокупателя") Тогда  //для документов КорректировкаСерийИХарактеристикТоваров, КорректировкаКачества нельзя выбрать серию если указан заказ покупателя с обособленным учетом
				Если  СтруктураШапкиДокумента[ИмяРеквЗаказ].ДоговорКонтрагента.ОбособленныйУчетТоваровПоЗаказамПокупателей  Тогда
					УчитыватьСерии = истина;
					ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Серия%","Док.СерияНоменклатуры");
					ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Серия_Резервы","И (Док.СерияНоменклатуры  = Резервы.СерияНоменклатуры)");
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
	Если не УчитыватьСерии Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Серия%","&ПустаяСерия");
	КонецЕсли;
	
    Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		СтрокаСообщения = "Остатка резерва " + 
		УправлениеЗапасами.ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
								  ?(ИмяТабличнойЧасти <> "ВозвратнаяТара", " "+Выборка.ХарактеристикаНоменклатурыПредставление, ""),
								  ?(УчитыватьСерии, " "+Выборка.СерияНоменклатурыПредставление, "")) +
		" на складе """ + СокрЛП(Выборка.Склад) + """ по документу """ + СокрЛП(Выборка.ДокументРезерва) + 
		""" недостаточно.";

		УправлениеЗапасами.ОшибкаНетОстатка(СтрокаСообщения, Выборка.РезервыКоличество, Выборка.ДокументКоличество,
		Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);

	КонецЦикла;

КонецПроцедуры //КонтрольОстатков_СкладВШапке_ЗаказВШапке

// Процедура контролирует свободный остаток для резервирования для документа "Поступление товаров и услуг"
// Параметры:
//	УчитыватьСерии    - признак необходимости контроля остатков в разрезе серий номенклатуры
//  ТабРаспределениеОбособленныйУчет - таблица номенклатуры и количества, которые были распределены с учетом серий номенклатуры (заполняется если УчитыватьСерии=истина, анализируется если УчитыватьСерии=ложь)
//	Особенности документа:
//	1) Наличие в табличной части реквизита ПриходныйОрдер
//	2) Поскольку документ резерва находится в табличной части, и в одном документе могут быть указаны документы резерва как с обособленным
//		учетом по заказам, так и без обособленного учета - требуется особый алгоритм контроля свободных остатков:
//		- сначала контролируются свободные остатки по заказам покупателей с обособленным учетом, контроль происходит с точностью до серии. 
//		- потом контролируются свободные остатки по всем остальным заказам, контроль происходит без учета серий. При этом из полученного 
//		свободного остатка исключаются свободные остатки, которые были заняты на первой итерации контроля остатков.
Процедура КонтрольСвободныхОстатков_ПТиУ(УчитыватьСерии, ТабРаспределениеОбособленныйУчет)
	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	ТекстЗапросаСписокНоменклатуры = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ Ссылка = &ДокументСсылка";

	//формирование списка складов из документа для установки отбора в основном запросе
	ЗапросСклады = новый Запрос;
	ЗапросСклады.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ Склад 
	|ИЗ Документ."+ИмяТаблицы+"
	|ГДЕ Ссылка=&ДокументСсылка И Склад<>&ПустойСклад";
	ЗапросСклады.УстановитьПараметр("ДокументСсылка", СтруктураШапкиДокумента.Ссылка);
	//склады в документе должны быть заполнены обязательно. Проверка выполняется на всякий случай 
	ЗапросСклады.УстановитьПараметр("ПустойСклад", Справочники.Склады.ПустаяСсылка());
    СписокСкладов = ЗапросСклады.Выполнить().Выгрузить().ВыгрузитьКолонку("Склад");

	Запрос = Новый Запрос;
    // Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", СтруктураШапкиДокумента.Ссылка);
	Запрос.УстановитьПараметр("ПустаяХарактеристика",  Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСерия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("СписокСкладов", СписокСкладов);
	Запрос.УстановитьПараметр("Новый", Справочники.Качество.Новый);

	ТекстЗапроса = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура                              	КАК Номенклатура,
	|	Док.Номенклатура.Представление                	КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,
	|   Док.Склад                                     	КАК Склад,
	|   Док.ХарактеристикаНоменклатуры 					КАК ХарактеристикаНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(Док.ХарактеристикаНоменклатуры) 	КАК ХарактеристикаНоменклатурыПредставление,
	|   Док.СерияНоменклатуры 							КАК СерияНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(Док.СерияНоменклатуры) 			КАК СерияНоменклатурыПредставление,
	|   Док.ДокументКоличество							КАК ДокументКоличество,
	|	ЕстьNull(Резервы.КоличествоОстаток,0) 			КАК РезервыКоличество,
	|	ЕстьNull(Остатки.КоличествоОстаток,0) 			КАК ОстаткиКоличество,
	|	ЕстьNull(КПередаче.КоличествоОстаток,0) 		КАК КПередачеКоличество
	|ИЗ ( ВЫБРАТЬ Номенклатура 	КАК Номенклатура,
	|		%ПОЛЕ_Характеристика% 	КАК ХарактеристикаНоменклатуры,
	|		%ПОЛЕ_Серия% 			КАК СерияНоменклатуры,
	|   	%ПОЛЕ_Количество% 		КАК ДокументКоличество,
	|		Склад
	|	ИЗ	
	|		Документ." + ИмяТаблицы + "
	|	ГДЕ
	|		Ссылка  =  &ДокументСсылка 
	|   	И Заказ <> Неопределено
	|   	И ПриходныйОрдер.БезПраваПродажи = ЛОЖЬ	
    |	//УСЛОВИЕ_ОбособленныйУчет
	|	СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|	%ПОЛЕ_Характеристика%,
	|	%ПОЛЕ_Серия%,
	|	Склад
	|				) КАК Док
	//соединение для вычисления остатка товара на складе - оптовом и розничном
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|( 
	|	ВЫБРАТЬ Номенклатура,
	|		%ПОЛЕ_Характеристика% 	КАК ХарактеристикаНоменклатуры,
	|		%ПОЛЕ_Серия% 			КАК СерияНоменклатуры,
	|		Склад,
	|		КоличествоОстаток
	|	ИЗ РегистрНакопления.ТоварыНаСкладах.Остатки(, Склад в (&СписокСкладов) И 
	|			%ВыборкаПоНоменклатуре% И Качество=&Новый)
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ Номенклатура,
	|		%ПОЛЕ_Характеристика% 	КАК ХарактеристикаНоменклатуры,
	|		%ПОЛЕ_Серия% 			КАК СерияНоменклатуры,
	|		Склад,
	|		КоличествоОстаток
	|	ИЗ РегистрНакопления.ТоварыВРознице.Остатки(, Склад в (&СписокСкладов) И 
	|		%ВыборкаПоНоменклатуре% И Качество=&Новый)
	|  ДЛЯ ИЗМЕНЕНИЯ
	|) КАК Остатки
	|ПО 
	|	Док.Номенклатура                = Остатки.Номенклатура 
	|   И Док.Склад                     = Остатки.Склад
	|   //СОЕДИНЕНИЕ_Характеристика_Остатки
	|   //СОЕДИНЕНИЕ_Серия_Остатки
	|
	//соединение для вычисления количества зарезервированного на складе товара
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(, Склад в (&СписокСкладов) И 
	|		%ВыборкаПоНоменклатуре%) КАК Резервы
	|ПО 
	|	Док.Номенклатура                = Резервы.Номенклатура 
	|   И Док.Склад                     = Резервы.Склад
	|   //СОЕДИНЕНИЕ_Характеристика_Резервы
	|   //СОЕДИНЕНИЕ_Серия_Резервы
	//соединение для  вычисления количества товара к передаче со склада
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки(, Склад в (&СписокСкладов) И
	|		%ВыборкаПоНоменклатуре% И Качество=&Новый) КАК КПередаче
	|ПО 
	|	Док.Номенклатура                = КПередаче.Номенклатура 
	|   И Док.Склад                     = КПередаче.Склад 
	|   //СОЕДИНЕНИЕ_Характеристика_КПередаче
	|   //СОЕДИНЕНИЕ_Серия_КПередаче
	|
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки,
	|  РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки 
	|	 // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ВыборкаПоНоменклатуре%","Номенклатура В ("+ТекстЗапросаСписокНоменклатуры+")");

	Если ИмяТабличнойЧасти = "ВозвратнаяТара" Тогда
		//нет серии, характеристики, единицы измерения и коэффициента
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Количество%","Сумма(Количество)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Характеристика%","&ПустаяХарактеристика");

	Иначе
		//есть характеристика, единица измерения и коэффициент. 
		//Наличие серии зависит от того, ведется ли по заказу под который резервируем обособленный учет.
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Количество%","Сумма(Количество * Коэффициент / Номенклатура.ЕдиницаХраненияОстатков.Коэффициент)");
		
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Характеристика%","ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_Остатки","И Док.ХарактеристикаНоменклатуры  = Остатки.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_Резервы","И Док.ХарактеристикаНоменклатуры  = Резервы.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_КПередаче","И Док.ХарактеристикаНоменклатуры  = КПередаче.ХарактеристикаНоменклатуры");
		
		Если ИспользоватьУказаниеСерийНоменклатурыПриРезервировании Тогда
			//на первом проходе проверяем свободные остатки в разрезе серий для заказов покупателей по которым ведется обособленный учет
			Если УчитыватьСерии Тогда
		        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Серия%","СерияНоменклатуры");
		        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Серия_Остатки","И (Док.СерияНоменклатуры  = Остатки.СерияНоменклатуры)");
		        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Серия_Резервы","И (Док.СерияНоменклатуры  = Резервы.СерияНоменклатуры)");
		        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Серия_КПередаче","И (Док.СерияНоменклатуры  = КПередаче.СерияНоменклатуры)");
			КонецЕсли;
			//фильтр строк табличной части в зависимости от того учитываем серии или нет
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//УСЛОВИЕ_ОбособленныйУчет","И ЕстьNull(ВЫРАЗИТЬ(Заказ КАК Документ.ЗаказПокупателя).ДоговорКонтрагента.ОбособленныйУчетТоваровПоЗаказамПокупателей,ложь)="+?(УчитыватьСерии,"истина","ложь"));
		КонецЕсли;
	КонецЕсли;
	Если не УчитыватьСерии Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Серия%","&ПустаяСерия");
	КонецЕсли;

    Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	КоличествоСтрокРаспределено = ТабРаспределениеОбособленныйУчет.Количество();
	Пока Выборка.Следующий() Цикл
		
		КоличествоВРезерве  = Выборка.РезервыКоличество;
		КоличествоНаСкладе  = Выборка.ОстаткиКоличество;
		КоличествоКПередаче = Выборка.КПередачеКоличество;
		СвободныйОстаток = КоличествоНаСкладе  - КоличествоВРезерве - КоличествоКПередаче;
		Если УчитыватьСерии Тогда
			//на первом проходе заполняем таблицу распределенных остатков с учетом серий
			СтрокаРаспределено = ТабРаспределениеОбособленныйУчет.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРаспределено,Выборка);
			СтрокаРаспределено.Количество = мин(СвободныйОстаток, Выборка.ДокументКоличество);
		ИначеЕсли КоличествоСтрокРаспределено>0 Тогда
			//на втором проходе из свободного остатка исключаем уже распределенное с учетом серий количество
			струПоиск = новый Структура("Номенклатура, ХарактеристикаНоменклатуры, Склад");
			СтрокиРаспределено = ТабРаспределениеОбособленныйУчет.НайтиСтроки(струПоиск);
			Для каждого стр из СтрокиРаспределено цикл
				СвободныйОстаток = СвободныйОстаток - стр.Количество;
			Конеццикла;
		КонецЕсли;
		
		Если СвободныйОстаток < Выборка.ДокументКоличество Тогда
			УправлениеЗапасами.СообщитьОНедостаткеТовара(Выборка.ДокументКоличество      // Требуемое количество товара
			, Макс(0, СвободныйОстаток)                                 // Свободное количество товара
			, КоличествоВРезерве                                        // Количество товара в резерве
			, КоличествоКПередаче                                       // Количество товара к передаче
			, 0                                                         // Количество товара к получению
			, Отказ
			, Заголовок 
			, СокрЛП(Выборка.Склад)                         // Склад (представление)
			,                                                     // Заказ поставщику (представление)
			, Выборка.НоменклатураПредставление             // Номенклатура (представление)
			, ?(ИмяТабличнойЧасти <> "ВозвратнаяТара", " "+Выборка.ХарактеристикаНоменклатурыПредставление, "") // Характеристика (представление)
			, ?(УчитыватьСерии, " "+Выборка.СерияНоменклатурыПредставление, "")                   // Серия номенклатуры (представление)
			,                                                     // Качество товара (представление)
			, Выборка.ЕдиницаХраненияОстатковПредставление  // Единица хранения остатков (представление)
			, "Свободного остатка для резервирования "
			);
		КонецЕсли;
		
	
	КонецЦикла;
	Если УчитыватьСерии Тогда
    	ТабРаспределениеОбособленныйУчет.Свернуть("Номенклатура, ХарактеристикаНоменклатуры, Склад", "Количество");
	КонецЕсли;	
КонецПроцедуры  //КонтрольСвободныхОстатков_ПТиУ

// Процедура контролирует свободный остаток для резервирования для документов "РезервированиеТоваров, Корректировка заказа... Заказ ... (покупателя, внутренний, на производство)"
//	Особенности:
//	1) Склад для резервирования указан в табличной части
//	2) Документ резерва указан в шапке
//	3) Для документов "Корректировка..." предусмотрен контроль остатков в регистре ТоварыВРезерве в случае отрицательного количества в таб части
//
// Параметры:
//  ДокументОбъект     - объект проводимого документа. 
//
Процедура КонтрольСвободныхОстатков_Заказ_КорректировкаЗаказа_Резервирование(ДокументОбъект)

	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	ТекстЗапросаСписокНоменклатуры = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ Ссылка = &ДокументСсылка";

	ИмяРеквизитаРазмещение = "Размещение";
	Если ИмяДокумента = "РезервированиеТоваров" Тогда
		ИмяРеквизитаРазмещение = "НовоеРазмещение";
	КонецЕсли;
	
	ЗапросСклады = новый Запрос;
	ЗапросСклады.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ "+ИмяРеквизитаРазмещение+" КАК Размещение 
	|ИЗ Документ."+ИмяТаблицы+"
	|ГДЕ Ссылка=&ДокументСсылка
	|И "+ИмяРеквизитаРазмещение+"<>&ПустойСклад и ВЫРАЗИТЬ("+ИмяРеквизитаРазмещение+" КАК Справочник.Склады) ССЫЛКА Справочник.Склады";
	ЗапросСклады.УстановитьПараметр("ДокументСсылка", ДокументОбъект.Ссылка);
	ЗапросСклады.УстановитьПараметр("ПустойСклад", Справочники.Склады.ПустаяСсылка());
    СписокСкладов = ЗапросСклады.Выполнить().Выгрузить().ВыгрузитьКолонку("Размещение");

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументОбъект.Ссылка);
	
	Если ИмяДокумента = "КорректировкаВнутреннегоЗаказа" Тогда
		Запрос.УстановитьПараметр("ЗаказПокупателя", ДокументОбъект.ВнутреннийЗаказ);
	ИначеЕсли ИмяДокумента = "КорректировкаЗаказаПокупателя" Тогда
        Запрос.УстановитьПараметр("ЗаказПокупателя", ДокументОбъект.ЗаказПокупателя);
	ИначеЕсли ИмяДокумента = "РезервированиеТоваров" Тогда
		Запрос.УстановитьПараметр("ЗаказПокупателя", ДокументОбъект.Заказ);
	Иначе
		Запрос.УстановитьПараметр("ЗаказПокупателя", ДокументОбъект.Ссылка);
	КонецЕсли;
		
	Запрос.УстановитьПараметр("ПустойСклад", Справочники.Склады.ПустаяСсылка());
	Запрос.УстановитьПараметр("СписокСкладов", СписокСкладов);
	Запрос.УстановитьПараметр("ПустаяХарактеристика",  Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСерия",  		   Справочники.СерииНоменклатуры.ПустаяСсылка());
    Запрос.УстановитьПараметр("Новый", Справочники.Качество.Новый);

	ТекстЗапроса = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура																		КАК Номенклатура,
	|	Док.Номенклатура.Представление															КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление									КАК ЕдиницаХраненияОстатковПредставление,
	|	Док.ХарактеристикаНоменклатуры															КАК ХарактеристикаНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(Док.ХарактеристикаНоменклатуры)											КАК ХарактеристикаНоменклатурыПредставление,
	|	Док.СерияНоменклатуры																	КАК СерияНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(Док.СерияНоменклатуры)													КАК СерияНоменклатурыПредставление,
	|   Док.ДокументКоличество																	КАК ДокументКоличество,
	|   Док.Размещение																			КАК Склад, 
	|	ЕстьNull(Резервы.КоличествоОстаток,0) - ЕстьNull(РезервыПоЗаказу.КоличествоОстаток,0)	КАК РезервыКоличество,
	|	ЕстьNull(РезервыПоЗаказу.КоличествоОстаток,0)											КАК РезервыПоЗаказу,
	|	ЕстьNull(Остатки.КоличествоОстаток,0)													КАК ОстаткиКоличество,
	|	ЕстьNull(КПередаче.КоличествоОстаток,0)													КАК КПередачеКоличество
	|ИЗ  	(ВЫБРАТЬ Номенклатура,
	|		%ПОЛЕ_Характеристика% КАК ХарактеристикаНоменклатуры,
	|		%ПОЛЕ_Серия% КАК СерияНоменклатуры,
	|   	%ПОЛЕ_Количество% КАК ДокументКоличество,
	|		%ПОЛЕ_Размещение% КАК Размещение
	|	ИЗ	
	|		Документ." + ИмяТаблицы + "
	|	ГДЕ
	|		Ссылка  =  &ДокументСсылка 
	|   	И ВЫРАЗИТЬ(%ПОЛЕ_Размещение% КАК Справочник.Склады) ССЫЛКА Справочник.Склады И %ПОЛЕ_Размещение% <> &ПустойСклад
	|	СГРУППИРОВАТЬ ПО
	|		Номенклатура,
	|		%ПОЛЕ_Характеристика%,
	|		%ПОЛЕ_Серия%,
	|		%ПОЛЕ_Размещение%
	|		)КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|( 
	|	ВЫБРАТЬ Номенклатура,
	|		%ПОЛЕ_Характеристика% КАК ХарактеристикаНоменклатуры,
	|		%ПОЛЕ_Серия% КАК СерияНоменклатуры,
	|		Склад,
	|		КоличествоОстаток
	|	ИЗ РегистрНакопления.ТоварыНаСкладах.Остатки(, Склад в (&СписокСкладов) И 
	|			%ВыборкаПоНоменклатуре% И Качество=&Новый)
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ Номенклатура,
	|		%ПОЛЕ_Характеристика%,
	|		%ПОЛЕ_Серия%,
	|		Склад,
	|		КоличествоОстаток
	|	ИЗ РегистрНакопления.ТоварыВРознице.Остатки(, Склад в (&СписокСкладов) И 
	|		%ВыборкаПоНоменклатуре% И Качество=&Новый)
	|   ДЛЯ ИЗМЕНЕНИЯ
	|) КАК Остатки
	|ПО 
	|	Док.Номенклатура                = Остатки.Номенклатура 
	|   И Док.Размещение                = Остатки.Склад  
	|   //СОЕДИНЕНИЕ_Характеристика_Остатки
	|   //СОЕДИНЕНИЕ_Серия_Остатки
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(, Склад в (&СписокСкладов) И 
	|		%ВыборкаПоНоменклатуре%) КАК Резервы
	|ПО 
	|	Док.Номенклатура                = Резервы.Номенклатура 
	|   И Док.Размещение                = Резервы.Склад  
	|   //СОЕДИНЕНИЕ_Характеристика_Резервы
	|   //СОЕДИНЕНИЕ_Серия_Резервы
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(,  Склад в (&СписокСкладов) И
	|		&ЗаказПокупателя = ДокументРезерва И %ВыборкаПоНоменклатуре%) КАК РезервыПоЗаказу
	|ПО 
	|	Док.Номенклатура          = РезервыПоЗаказу.Номенклатура 
	|   И Док.Размещение          = РезервыПоЗаказу.Склад   
	|   //СОЕДИНЕНИЕ_Характеристика_РезервыПоЗаказу
	|   //СОЕДИНЕНИЕ_Серия_РезервыПоЗаказу
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки(, Склад в (&СписокСкладов) И
	|		%ВыборкаПоНоменклатуре% И Качество=&Новый) КАК КПередаче
	|ПО 
	|	Док.Номенклатура                = КПередаче.Номенклатура 
	|   И Док.Размещение                = КПередаче.Склад  
	|   //СОЕДИНЕНИЕ_Характеристика_КПередаче
	|   //СОЕДИНЕНИЕ_Серия_КПередаче
	|ГДЕ 	
	|	Не Док.Номенклатура.Комплект
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки, 
	|РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";
    УчитыватьСерии = ложь;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ВыборкаПоНоменклатуре%","Номенклатура В ("+ТекстЗапросаСписокНоменклатуры+")");
    Если ИмяДокумента = "РезервированиеТоваров" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Размещение%","НовоеРазмещение");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Размещение%","Размещение");
	КонецЕсли;

	Если ИмяТабличнойЧасти = "ВозвратнаяТара" Тогда
		//нет серии, характеристики, единицы измерения и коэффициента
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Количество%","Сумма(Количество)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Характеристика%","&ПустаяХарактеристика");

	Иначе
		//есть характеристика, единица измерения и коэффициент. 
		//Наличие серии зависит от того, ведется ли по заказу под который резервируем обособленный учет.
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Количество%","Сумма(Количество * Коэффициент / Номенклатура.ЕдиницаХраненияОстатков.Коэффициент)");
		
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Характеристика%","ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_Остатки","И Док.ХарактеристикаНоменклатуры  = Остатки.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_РезервыПоЗаказу","И Док.ХарактеристикаНоменклатуры  = РезервыПоЗаказу.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_Резервы","И Док.ХарактеристикаНоменклатуры  = Резервы.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_КПередаче","И Док.ХарактеристикаНоменклатуры  = КПередаче.ХарактеристикаНоменклатуры");
		
		Если ИспользоватьУказаниеСерийНоменклатурыПриРезервировании Тогда
			Если СтруктураШапкиДокумента.Свойство("ОбособленныйУчетТоваровПоЗаказамПокупателей") Тогда
				Если СтруктураШапкиДокумента.ОбособленныйУчетТоваровПоЗаказамПокупателей Тогда
					УчитыватьСерии = истина;
			        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Серия%","СерияНоменклатуры");
			        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Серия_Остатки","И (Док.СерияНоменклатуры  = Остатки.СерияНоменклатуры)");
					ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Серия_РезервыПоЗаказу","И Док.СерияНоменклатуры  = РезервыПоЗаказу.СерияНоменклатуры");
			        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Серия_Резервы","И (Док.СерияНоменклатуры  = Резервы.СерияНоменклатуры)");
			        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Серия_КПередаче","И (Док.СерияНоменклатуры  = КПередаче.СерияНоменклатуры)");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если не УчитыватьСерии Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Серия%","&ПустаяСерия");
	КонецЕсли;

	
    Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий()  Цикл
		
		КоличествоВРезерве  = Выборка.РезервыКоличество;
		КоличествоНаСкладе  = Выборка.ОстаткиКоличество;
		КоличествоКПередаче = Выборка.КПередачеКоличество;
		КоличествоСнимаемое = ?(Выборка.ДокументКоличество>=0, 0, (-1)*Выборка.ДокументКоличество); //актуально для корректировок - количество, которое снимается из резерва
		КоличествоРезервируемое = ?(Выборка.ДокументКоличество<=0, 0, Выборка.ДокументКоличество);
        ВРезервеПоЗаказу = ?(Выборка.РезервыПоЗаказу <0, 0, Выборка.РезервыПоЗаказу);
		Если  КоличествоРезервируемое>0 Тогда
			СвободныйОстаток = КоличествоНаСкладе + КоличествоСнимаемое - КоличествоВРезерве - КоличествоКПередаче - ВРезервеПоЗаказу;
		
		
			Если СвободныйОстаток < КоличествоРезервируемое Тогда
				УправлениеЗапасами.СообщитьОНедостаткеТовара(КоличествоРезервируемое      // Требуемое количество товара
				, Макс(0, СвободныйОстаток)                                 // Свободное количество товара
				, КоличествоВРезерве                                        // Количество товара в резерве
				, КоличествоКПередаче                                       // Количество товара к передаче
				, 0                                                         // Количество товара к получению
				, Отказ
				, Заголовок 
				, СокрЛП(Выборка.Склад)                         // Склад (представление)
				,                                                     // Заказ поставщику (представление)
				, Выборка.НоменклатураПредставление             // Номенклатура (представление)
				, ?(ИмяТабличнойЧасти <> "ВозвратнаяТара", " "+Выборка.ХарактеристикаНоменклатурыПредставление, "") // Характеристика (представление)
				, ?(УчитыватьСерии, " "+Выборка.СерияНоменклатурыПредставление, "")                   // Серия номенклатуры (представление)
				,                                                     // Качество товара (представление)
				, Выборка.ЕдиницаХраненияОстатковПредставление  // Единица хранения остатков (представление)
				, "Свободного остатка для резервирования "
				);
			КонецЕсли;
		КонецЕсли;
		Если КоличествоСнимаемое>0  Тогда
			Если ВРезервеПоЗаказу < КоличествоСнимаемое Тогда
		
			УправлениеЗапасами.ОшибкаНетОстатка(
				"Недостаточно товара """ + Выборка.НоменклатураПредставление + """" +
				?(ИмяТабличнойЧасти <> "ВозвратнаяТара", " """ + Выборка.ХарактеристикаНоменклатурыПредставление + """", "") 
				+ ?(УчитыватьСерии, " """ +Выборка.СерияНоменклатурыПредставление+ """", "")
				+ " в резерве на складе """ + СокрЛП(Выборка.Склад) + """",
				ВРезервеПоЗаказу,
				КоличествоСнимаемое,
				Выборка.ЕдиницаХраненияОстатковПредставление,
				Отказ, Заголовок);
		    КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры  //КонтрольСвободныхОстатков_Заказ_КорректировкаЗаказа_Резервирование

// Процедура контролирует, чтобы поступления товара в резерв не превышала объема заказа
//
Процедура КонтрольПревышенияОбъемаЗаказа(ДокСсылка, ТабЧасть, СтруктураПараметров, Отказ, Заголовок) Экспорт

	МетаДок = ДокСсылка.Метаданные();
	ИмяТабЧасти = МетаДок.Имя + "." + ТабЧасть;
	
	// Определим параметры документа
	ИмяЗаказа = "ЗаказПокупателя";
	ИмяСклада = "СкладОрдер";
	Если ТипЗнч(СтруктураПараметров) = Тип("Структура") Тогда
		Если СтруктураПараметров.Свойство("ИмяЗаказа") Тогда
			ИмяЗаказа = СтруктураПараметров["ИмяЗаказа"];
		КонецЕсли;
		Если СтруктураПараметров.Свойство("ИмяСклада") Тогда
			ИмяСклада = СтруктураПараметров["ИмяСклада"];
		КонецЕсли;
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДокПоступление.Номенклатура,
	|	ДокПоступление.ХарактеристикаНоменклатуры,
	|	ДокПоступление." + ИмяЗаказа +                        "           КАК ЗаказПокупателя,
	|	ДокПоступление.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,
	|	ДокПоступление.Номенклатура.Представление                         КАК НоменклатураПредставление,
	|	ДокПоступление.ХарактеристикаНоменклатуры.Представление           КАК ХарактеристикаПредставление,
	|	ДокПоступление." + ИмяЗаказа + ".Представление                    КАК ЗаказПредставление,
	|	СУММА(ДокПоступление.Количество * ДокПоступление.Коэффициент / ДокПоступление.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК Количество,
	|	СУММА(ВЫБОР КОГДА ДокПоступление." + ИмяЗаказа + " ССЫЛКА Документ.ВнутреннийЗаказ ТОГДА
	|		ВЫБОР КОГДА РегВнутрЗаказы.КоличествоОстаток ЕСТЬ NULL ТОГДА
	|			0
	|		ИНАЧЕ
	|			РегВнутрЗаказы.КоличествоОстаток
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ВЫБОР КОГДА РегЗаказы.КоличествоОстаток ЕСТЬ NULL ТОГДА
	|			0
	|		ИНАЧЕ
	|			РегЗаказы.КоличествоОстаток
	|		КОНЕЦ
	|	КОНЕЦ) КАК КолЗаказано,
	|	СУММА(ВЫБОР КОГДА РегРезервы.КоличествоОстаток ЕСТЬ NULL ТОГДА
	|		0
	|	ИНАЧЕ
	|		РегРезервы.КоличествоОстаток
	|	КОНЕЦ) КАК КолРезерв
	|ИЗ
	|	Документ." + ИмяТабЧасти + " КАК ДокПоступление
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(&КонДата) КАК РегЗаказы
	|		ПО ДокПоступление." + ИмяЗаказа + "          = РегЗаказы.ЗаказПокупателя
	|		 И ДокПоступление.Номенклатура               = РегЗаказы.Номенклатура
	|		 И ДокПоступление.ХарактеристикаНоменклатуры = РегЗаказы.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВнутренниеЗаказы.Остатки(&КонДата) КАК РегВнутрЗаказы
	|		ПО ДокПоступление." + ИмяЗаказа + "          = РегВнутрЗаказы.ВнутреннийЗаказ
	|		 И ДокПоступление.Номенклатура               = РегВнутрЗаказы.Номенклатура
	|		 И ДокПоступление.ХарактеристикаНоменклатуры = РегВнутрЗаказы.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(&КонДата, Склад = &Склад) КАК РегРезервы
	|		ПО ДокПоступление." + ИмяЗаказа + "          = РегРезервы.ДокументРезерва
	|		 И ДокПоступление.Номенклатура               = РегРезервы.Номенклатура
	|		 И ДокПоступление.ХарактеристикаНоменклатуры = РегРезервы.ХарактеристикаНоменклатуры
	|
	|ГДЕ
	|	ДокПоступление.Ссылка = &ТекДок И
	|	ДокПоступление." + ИмяЗаказа + " НЕ В (&ПустЗаказы)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокПоступление.Номенклатура,
	|	ДокПоступление." + ИмяЗаказа + ",
	|	ДокПоступление.ХарактеристикаНоменклатуры,
	|	ДокПоступление.ЕдиницаИзмерения,
	|	РегРезервы.КоличествоОстаток";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	МассивПустЗаказов = Новый Массив;
	МассивПустЗаказов.Добавить( Документы.ЗаказПокупателя.ПустаяСсылка());
	МассивПустЗаказов.Добавить( Документы.ВнутреннийЗаказ.ПустаяСсылка());
	МассивПустЗаказов.Добавить( Неопределено);
	
	Запрос.УстановитьПараметр( "ПустЗаказы", МассивПустЗаказов);
	Запрос.УстановитьПараметр( "ТекДок",     ДокСсылка);
	Запрос.УстановитьПараметр( "Склад",      ДокСсылка[ИмяСклада]);
	Запрос.УстановитьПараметр( "КонДата",    ДокСсылка.Дата);
	
	Выборка = Запрос.Выполнить().Выбрать();;
	Пока Выборка.Следующий() Цикл

		Если Выборка.КолЗаказано - Выборка.КолРезерв < Выборка.Количество Тогда

			СтрокаСообщения = "Резервирование по заказу превышает объем заказа: "
				+ Выборка.ЗаказПредставление + " " + 
				+ УправлениеЗапасами.ПредставлениеНоменклатуры(
						Выборка.НоменклатураПредставление,
						Выборка.ХарактеристикаПредставление, "");

			УправлениеЗапасами.ОшибкаНетОстатка(
				СтрокаСообщения,
				Выборка.КолЗаказано - Выборка.КолРезерв,
				Выборка.Количество,
				Выборка.ЕдиницаХраненияОстатковПредставление,
				Отказ, Заголовок);

		КонецЕсли;

	КонецЦикла;
		
КонецПроцедуры // КонтрольПревышенияОбъемаЗаказа()

Процедура ПередЗаписью(Отказ, Замещение)
		
	Если НЕ ОбменДанными.Загрузка Тогда
		КорректировкаСерийПриРезервировании();
	КонецЕсли;
	
КонецПроцедуры

Процедура КорректировкаСерийПриРезервировании()
	
	ПустаяСерия = Справочники.СерииНоменклатуры.ПустаяСсылка();

	// Если в таблице движений нет серий, то модифицировать ничего не нужно.
	Если Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Если серии при резеврировании не используются, тогда очистим колонку "СерииНоменклатуры".
	Если Не Константы.ИспользоватьУказаниеСерийНоменклатурыПриРезервировании.Получить() Тогда
	
		Для Каждого СтрокаДвижения Из ЭтотОбъект Цикл
			СтрокаДвижения.СерияНоменклатуры = ПустаяСерия;
		КонецЦикла;	
	
	Иначе
	
		// Для каждого заказа определим ведётся ли обособленный учет, если нет, очистим серию.
		Для Каждого СтрокаДвижения Из ЭтотОбъект Цикл
			
			Если ТипЗнч(СтрокаДвижения.ДокументРезерва) <> Тип("ДокументСсылка.ЗаказПокупателя") Тогда
				СтрокаДвижения.СерияНоменклатуры = ПустаяСерия;
				Продолжить;
			КонецЕсли;	
			
			ОбособленныйУчетПоЗаказу = СтрокаДвижения.ДокументРезерва.ДоговорКонтрагента.ОбособленныйУчетТоваровПоЗаказамПокупателей;
			
			Если Не(ОбособленныйУчетПоЗаказу) Тогда
				СтрокаДвижения.СерияНоменклатуры = ПустаяСерия;
			КонецЕсли;	
			
		КонецЦикла;	
	
	КонецЕсли;
	
КонецПроцедуры	
