
// Хранит структуру, содержащую параметры для определения договора, доступного в данном документе:
//    список допустимых видов договоров;
//    список допустимых способов ведения взаиморасчетов.
Перем мСтруктураПараметровДляПолученияДоговора Экспорт;

#Если Клиент Тогда

Функция ПечатьДоверенности(НазваниеМакета)

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекущийДокумент",  ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДатаСреза",        Дата);
	Запрос.УстановитьПараметр("ФизЛицо",          ФизЛицо.Ссылка);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номер КАК НомерДокумента,
	|	Дата  КАК ДатаДокумента,
	|	Организация КАК Руководители,
	|	Организация,
	|	ФизЛицо,
	|	Контрагент                КАК Поставщик,
	|	БанковскийСчетОрганизации КАК БанковскийСчет,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(НаПолучениеОт КАК СТРОКА(100)) = """" ТОГДА Контрагент.НаименованиеПолное
	|		ИНАЧЕ НаПолучениеОт
	|	КОНЕЦ КАК ПоставщикПредставление,
	|	ДатаДействия                 КАК СрокДействия,
	|	ПоДокументу                  КАК РеквизитыДокументаНаПолучение,
	|	Товары.(
	|		НомерСтроки              КАК Номер,
	|		НаименованиеТовара       КАК Ценности,
	|		НаименованиеТовара       КАК ЦенностиПредставление,
	|		ЕдиницаПоКлассификатору  КАК ЕдиницаИзмерения,
	|		ЕдиницаПоКлассификатору.Представление КАК ЕдиницаИзмеренияПредставление,
	|		Количество
	|	)
	|ИЗ
	|	Документ.Доверенность КАК Доверенность
	|ГДЕ
	|	Доверенность.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки
	|";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Доверенность_М2";

	Макет = ПолучитьОбщийМакет("М2");

	ФамилияИмяОтчествоФизЛица     = ФормированиеПечатныхФорм.ФамилияИмяОтчество(Шапка.ФизЛицо, Шапка.ДатаДокумента);
	ФамилияИмяОтчествоДоверенного = ФамилияИмяОтчествоФизЛица.Фамилия + " " + ФамилияИмяОтчествоФизЛица.Имя + " " + ФамилияИмяОтчествоФизЛица.Отчество;
	ДолжностьДоверенного          = Должность;

	Если НазваниеМакета = "М2" тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Отрез");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.НомерДокумента = ОбщегоНазначения.ПолучитьНомерНаПечать(ЭтотОбъект);
		ОбластьМакета.Параметры.ФИОДоверенного = СокрЛП(Должность) + " " + ОбщегоНазначения.ФамилияИнициалыФизЛица(ФамилияИмяОтчествоДоверенного);
		ТабДокумент.Вывести(ОбластьМакета);
		НазваниеФормы = "Типовая межотраслевая форма № М-2";
	Иначе
		НазваниеФормы = "Типовая межотраслевая форма № М-2а";
	КонецЕсли;

	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизации(Шапка.Руководители, Шапка.ДатаДокумента);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;

	ПаспортФизЛица        = ОбщегоНазначения.ПаспортныеДанные(Шапка.ФизЛицо, Шапка.ДатаДокумента);
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента,, Шапка.БанковскийСчет);

	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.НомерДокумента                = ОбщегоНазначения.ПолучитьНомерНаПечать(ЭтотОбъект);
	ОбластьМакета.Параметры.НазваниеФормы                 = НазваниеФормы;
	ОбластьМакета.Параметры.ОрганизацияПредставление      = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,КПП, ЮридическийАдрес,Телефоны,");
	ОбластьМакета.Параметры.РеквизитыСчета                = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НомерСчета,Банк,БИК,КоррСчет,");
	ОбластьМакета.Параметры.РеквизитыПотребителя          = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
	ОбластьМакета.Параметры.ОрганизацияКодПоОКПО          = СведенияОбОрганизации.КодПоОКПО;
	ОбластьМакета.Параметры.ДолжностьДоверенного          = ДолжностьДоверенного;
	ОбластьМакета.Параметры.ФамилияИмяОтчествоДоверенного = ФамилияИмяОтчествоДоверенного;
	ОбластьМакета.Параметры.ПаспортСерия                  = ПаспортФизЛица.Серия;
	ОбластьМакета.Параметры.ПаспортНомер                  = ПаспортФизЛица.Номер;
	ОбластьМакета.Параметры.ПаспортВыдан                  = ПаспортФизЛица.Выдан;
	ОбластьМакета.Параметры.ПаспортДатаВыдачи             = ПаспортФизЛица.ДатаВыдачи;
	ОбластьМакета.Параметры.ДатаДокумента                 = Формат(Шапка.ДатаДокумента,"ДФ = ""дд ММММ гггг """"г.""");
	ОбластьМакета.Параметры.СрокДействия                  = Формат(Шапка.СрокДействия,"ДФ = ""дд ММММ гггг """"г.""");
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ОбластьМакета);

	Пока ВыборкаСтрокТовары.Следующий() Цикл
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьМакета.Параметры.КоличествоПрописью = ?(ВыборкаСтрокТовары.Количество = 0, "",
		                                             Строка(ВыборкаСтрокТовары.Количество) + " (" + 
		                                             ФормированиеПечатныхФорм.КоличествоПрописью(ВыборкаСтрокТовары.Количество) + ")");
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;

	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(Шапка);

	Если ЗначениеЗаполнено(Руководитель) Тогда
		ОбластьМакета.Параметры.ФИОРуководителя       = Руководитель;
		ОбластьМакета.Параметры.Руководитель          = Руководитель;
	КонецЕсли;

	Если ЗначениеЗаполнено(Бухгалтер) Тогда
		ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = Бухгалтер;
		ОбластьМакета.Параметры.ГлавныйБухгалтер      = Бухгалтер;
	КонецЕсли;

	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;

КонецФункции // ПечатьДоверенности()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ИмяМакета = "М2" ИЛИ ИмяМакета = "М2а" Тогда
		ТабДокумент = ПечатьДоверенности(ИмяМакета);
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()));

КонецПроцедуры // Печать()

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("М2,М2а","Доверенность (М-2)","Доверенность (М-2а)");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Процедура выполняет заполнение табличной части неполученными ТМЦ по заказу поставщику.
//
Процедура ЗаполнитьТоварыПоОстаткам() Экспорт

	Если НЕ ЗначениеЗаполнено(Сделка) Тогда
		Возврат;
	КонецЕсли;

	Товары.Очистить();

	// Товар
	Запрос = Новый Запрос;

	СписокСтатусПартии = Новый СписокЗначений;
	СписокСтатусПартии.Добавить(Перечисления.СтатусыПартийТоваров.Купленный);
	СписокСтатусПартии.Добавить(Перечисления.СтатусыПартийТоваров.НаКомиссию);

	Запрос.УстановитьПараметр("Договор",      ДоговорКонтрагента);
	Запрос.УстановитьПараметр("Сделка",       Сделка);
	Запрос.УстановитьПараметр("СтатусПартии", СписокСтатусПартии);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Остатки.Номенклатура                КАК Номенклатура,
	|	Остатки.ЕдиницаИзмерения            КАК Единица,
	|	СУММА(Остатки.КоличествоОстаток)    КАК КоличествоПоЗаказу
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(, ДоговорКонтрагента = &Договор И ЗаказПоставщику = &Сделка) КАК Остатки
	|
	|ГДЕ
	|	Остатки.СтатусПартии В (&СтатусПартии)
	|	И Остатки.Номенклатура.Услуга <> Истина
	|	И Остатки.КоличествоОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.Номенклатура,
	|	Остатки.ЕдиницаИзмерения";

	РезультатЗапроса = Запрос.Выполнить();
	Выборка          = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл

		НаименованиеТовара = Выборка.Номенклатура.НаименованиеПолное;
		НаименованиеТовара = ?(НЕ ЗначениеЗаполнено(НаименованиеТовара), СокрЛП(Выборка.Номенклатура), НаименованиеТовара);

		СтрокаТабличнойЧасти                         = Товары.Добавить();
		СтрокаТабличнойЧасти.НаименованиеТовара      = НаименованиеТовара;
		СтрокаТабличнойЧасти.Количество              = Выборка.КоличествоПоЗаказу * Выборка.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
													/ ?(НЕ ЗначениеЗаполнено(Выборка.Единица) , 1, Выборка.Единица.Коэффициент);
		СтрокаТабличнойЧасти.ЕдиницаПоКлассификатору = Выборка.Единица.ЕдиницаПоКлассификатору;

	КонецЦикла;

	// Возвратная тара
	МетаданныеДокумента = Сделка.Метаданные();

	Если НЕ ОбщегоНазначения.ЕстьТабЧастьДокумента("ВозвратнаяТара", МетаданныеДокумента) Тогда
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("Договор",      ДоговорКонтрагента);
	Запрос.УстановитьПараметр("Сделка",       Сделка);
	Запрос.УстановитьПараметр("СтатусПартии", Перечисления.СтатусыПартийТоваров.ВозвратнаяТара);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Остатки.Номенклатура                КАК Номенклатура,
	|	Остатки.Номенклатура.ЕдиницаХраненияОстатков КАК Единица,
	|	СУММА(Остатки.КоличествоОстаток)    КАК КоличествоПоЗаказу
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(, ДоговорКонтрагента = &Договор И ЗаказПоставщику = &Сделка) КАК Остатки
	|
	|ГДЕ
	|	Остатки.СтатусПартии = &СтатусПартии
	|	И Остатки.КоличествоОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.Номенклатура,
	|	Остатки.Номенклатура.ЕдиницаХраненияОстатков";

	РезультатЗапроса = Запрос.Выполнить();
	Выборка          = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл

		НаименованиеТовара = Выборка.Номенклатура.НаименованиеПолное;
		НаименованиеТовара = ?(НЕ ЗначениеЗаполнено(НаименованиеТовара), СокрЛП(Выборка.Номенклатура), НаименованиеТовара);

		СтрокаТабличнойЧасти                         = Товары.Добавить();
		СтрокаТабличнойЧасти.НаименованиеТовара      = НаименованиеТовара + " (возвратная тара)";
		СтрокаТабличнойЧасти.Количество              = Выборка.КоличествоПоЗаказу;
		СтрокаТабличнойЧасти.ЕдиницаПоКлассификатору = Выборка.Единица.ЕдиницаПоКлассификатору;

	КонецЦикла;

КонецПроцедуры // ЗаполнитьТоварыПоОстаткам()

// Процедура выполняет заполнение табличной части по счету на оплату поставщику.
//
Процедура ЗаполнитьТоварыПоСчету(Основание)

	Товары.Очистить();

	// Товар
	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("Основание", Основание);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Номенклатура     КАК Номенклатура,
	|	Док.ЕдиницаИзмерения КАК Единица,
	|	Док.Количество       КАК Количество
	|ИЗ
	|	Документ.СчетНаОплатуПоставщика.Товары КАК Док
	|ГДЕ
	|	Док.Ссылка = &Основание И Док.Количество > 0
	|";

	РезультатЗапроса = Запрос.Выполнить();
	Выборка          = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл

		НаименованиеТовара = Выборка.Номенклатура.НаименованиеПолное;
		НаименованиеТовара = ?(НЕ ЗначениеЗаполнено(НаименованиеТовара), СокрЛП(Выборка.Номенклатура), НаименованиеТовара);

		СтрокаТабличнойЧасти                         = Товары.Добавить();
		СтрокаТабличнойЧасти.НаименованиеТовара      = НаименованиеТовара;
		СтрокаТабличнойЧасти.Количество              = Выборка.Количество;
		СтрокаТабличнойЧасти.ЕдиницаПоКлассификатору = Выборка.Единица.ЕдиницаПоКлассификатору;

	КонецЦикла;

	// Возвратная тара
	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("Основание", Основание);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Номенклатура                         КАК Номенклатура,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков КАК Единица,
	|	Док.Количество                           КАК Количество
	|ИЗ
	|	Документ.СчетНаОплатуПоставщика.ВозвратнаяТара КАК Док
	|ГДЕ
	|	Док.Ссылка = &Основание И Док.Количество > 0
	|";

	РезультатЗапроса = Запрос.Выполнить();
	Выборка          = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл

		НаименованиеТовара = Выборка.Номенклатура.НаименованиеПолное;
		НаименованиеТовара = ?(НЕ ЗначениеЗаполнено(НаименованиеТовара), СокрЛП(Выборка.Номенклатура), НаименованиеТовара);

		СтрокаТабличнойЧасти                         = Товары.Добавить();
		СтрокаТабличнойЧасти.НаименованиеТовара      = НаименованиеТовара + " (возвратная тара)";
		СтрокаТабличнойЧасти.Количество              = Выборка.Количество;
		СтрокаТабличнойЧасти.ЕдиницаПоКлассификатору = Выборка.Единица.ЕдиницаПоКлассификатору;

	КонецЦикла;

КонецПроцедуры // ЗаполнитьТоварыПоОстаткам()

Процедура ОбработкаЗаполнения(Основание)

	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда

		Сделка             = Основание;
		Организация        = Основание.Организация;
		ДоговорКонтрагента = Основание.ДоговорКонтрагента;
		Контрагент         = Основание.Контрагент;

		Если ЗначениеЗаполнено(Основание.СтруктурнаяЕдиница)
		   И ТипЗнч(Основание.СтруктурнаяЕдиница) = Тип("СправочникСсылка.БанковскиеСчета")
		   И Основание.СтруктурнаяЕдиница.Владелец = Организация Тогда
			БанковскийСчетОрганизации = Основание.СтруктурнаяЕдиница;
		Иначе
			БанковскийСчетОрганизации = Организация.ОсновнойБанковскийСчет;
		КонецЕсли;

		ЗаполнитьТоварыПоОстаткам();

	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.СчетНаОплатуПоставщика") Тогда

		Организация        = Основание.Организация;
		ДоговорКонтрагента = Основание.ДоговорКонтрагента;
		Контрагент         = Основание.Контрагент;

		Если ЗначениеЗаполнено(Основание.СтруктурнаяЕдиница)
		   И ТипЗнч(Основание.СтруктурнаяЕдиница) = Тип("СправочникСсылка.БанковскиеСчета")
		   И Основание.СтруктурнаяЕдиница.Владелец = Организация Тогда
			БанковскийСчетОрганизации = Основание.СтруктурнаяЕдиница;
		Иначе
			БанковскийСчетОрганизации = Организация.ОсновнойБанковскийСчет;
		КонецЕсли;

		ЗаполнитьТоварыПоСчету(Основание);

	КонецЕсли;

КонецПроцедуры

