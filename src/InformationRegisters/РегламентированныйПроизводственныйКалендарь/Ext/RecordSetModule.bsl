
////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Заполняет ресурсы "Пятидневка", "Шестидневка" и "КалендарныеДни"
Процедура ЗаполнитьРесурсыЗаписиРегистра(ЗаписьРегистра) Экспорт
	
	// рабочий день
	Если ЗаписьРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий ИЛИ
		ЗаписьРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный Тогда
		
		ЗаписьРегистра.Пятидневка  = 1;
		ЗаписьРегистра.Шестидневка = 1;
		ЗаписьРегистра.КалендарныеДни = 1;
		
		// суббота	
	ИначеЕсли ЗаписьРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Суббота Тогда
		ЗаписьРегистра.Пятидневка  = 0;
		ЗаписьРегистра.Шестидневка = 1;
		ЗаписьРегистра.КалендарныеДни = 1;
		
		// воскресение
	ИначеЕсли ЗаписьРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье Тогда
		ЗаписьРегистра.Пятидневка  = 0;
		ЗаписьРегистра.Шестидневка = 0;
		ЗаписьРегистра.КалендарныеДни = 1;
		
		// празничный день	
	Иначе  
		ЗаписьРегистра.Пятидневка  = 0;
		ЗаписьРегистра.Шестидневка = 0;
		ЗаписьРегистра.КалендарныеДни = 0;
		
	КонецЕсли;
	
КонецПроцедуры 

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ 

Функция ПервоначальноеЗаполнениеРегистра(КонтрольнаяДата,Сообщать = Истина) Экспорт
	
	ТаблицаРегистра = Новый ТаблицаЗначений();
	ТаблицаРегистра.Колонки.Добавить("ДатаКалендаря");
	ТаблицаРегистра.Колонки.Добавить("ВидДня");
	ТаблицаРегистра.Индексы.Добавить("ДатаКалендаря");

	мДлинаСуток = 86400;
	
	// Заполнение регистра за год
	ПервоеЯнваря = НачалоГода(КонтрольнаяДата);
	СписокПраздниковВВыходные = Новый СписокЗначений;
	
	СписокПраздников = РегламентированнаяОтчетность.ПолучитьСписокПраздниковРФ(Год(КонтрольнаяДата));
	
	Для НомерДня = 1 По ДеньГода(КонецГода(КонтрольнаяДата)) Цикл
		
		ЗаписываемаяДата 	= НачалоДня(ПервоеЯнваря + мДлинаСуток * (НомерДня - 1));
		ПраздничныйДень = СписокПраздников.НайтиПоЗначению("" + Формат(ЗаписываемаяДата, "ДФ = 'ММ'") + Формат(ЗаписываемаяДата, "ДФ = 'дд'"));
		
		НоваяЗаписьРегистраВидДня =Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий; 
		
		Если ПраздничныйДень <> Неопределено Тогда
			
			НоваяЗаписьРегистраВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник;
			
			Если ДеньНедели(ЗаписываемаяДата) > 5 Тогда
				
				СписокПраздниковВВыходные.Добавить(ЗаписываемаяДата, ПраздничныйДень);
				
			КонецЕсли;
			
			// Предпразничные дни
			Если НомерДня > 1 Тогда
				
				СтрокаТаблицы = ТаблицаРегистра.Найти(ЗаписываемаяДата - мДлинаСуток,"ДатаКалендаря");
				Если СтрокаТаблицы.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий Тогда
					СтрокаТаблицы.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный;
				КонецЕсли; 
				
			КонецЕсли;
			
		Иначе
			
			Если ДеньНедели(ЗаписываемаяДата) = 6 Тогда
				НоваяЗаписьРегистраВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Суббота
			ИначеЕсли ДеньНедели(ЗаписываемаяДата) = 7 Тогда
				НоваяЗаписьРегистраВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье
			Иначе
				НоваяЗаписьРегистраВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий
			КонецЕсли; 
			
		КонецЕсли; 
		
		// Запишем в таблицу значений
		НоваяСтрокаТаблицыРегистра = ТаблицаРегистра.Добавить();
		НоваяСтрокаТаблицыРегистра.ДатаКалендаря = ЗаписываемаяДата;
		НоваяСтрокаТаблицыРегистра.ВидДня        = НоваяЗаписьРегистраВидДня;
		
	КонецЦикла; 
	
	// 31 декабря предпраздничный день в таблице
	Если НоваяСтрокаТаблицыРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий Тогда
		НоваяСтрокаТаблицыРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный;
	КонецЕсли;
	РегламентированнаяОтчетность.ПеренестиВыходныеДни(Год(КонтрольнаяДата), ТаблицаРегистра);
	Если Сообщать и СписокПраздниковВВыходные.Количество() > 0 Тогда
		
		ЗаКакойГод = Год(КонтрольнаяДата);
		
		Сообщить("При заполнении календаря на " + Формат(ЗаКакойГод,"ЧЦ=4; ЧГ=0") + " год обнаружены государственные праздники, попадающие на выходные дни:"); 
		
		Для Сч = 1 По СписокПраздниковВВыходные.Количество() Цикл
			Сообщить("   " + Формат(СписокПраздниковВВыходные[Сч - 1].Значение, "ДФ ='дд ММММ'") + " - " + СписокПраздниковВВыходные[Сч - 1])
		КонецЦикла; 
		
		Сообщить("Необходимо перенести эти выходные дни на следующий после праздничного рабочий день.", СтатусСообщения.Внимание)
		
	КонецЕсли; 
	
	Возврат ТаблицаРегистра
	
КонецФункции

// Выполняет запись в регистр сведений "РегламентированныйПроизводственныйКалендарь" данных из временной таблицы 
Процедура ЗаписатьИзТаблицыВРегистр(ТаблицаРегистра,ГодЗаписи) Экспорт

	// Очистим старые данные за год
	НаборЗаписей = РегистрыСведений.РегламентированныйПроизводственныйКалендарь.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Год.Значение		 = ГодЗаписи;
	НаборЗаписей.Отбор.Год.Использование = Истина;
	НаборЗаписей.Прочитать();
	
	ЕстьЗаписиВРегистре = НаборЗаписей.Количество() > 0;
	
	// Запишем новые данные за год
	Если ЕстьЗаписиВРегистре Тогда
		Для каждого Запись Из НаборЗаписей Цикл
			СтрокаТаблицы = ТаблицаРегистра.Найти(Запись.ДатаКалендаря,"ДатаКалендаря");
			Запись.ВидДня = СтрокаТаблицы.ВидДня;
			// Установим ресурсы "Пятидневка", "Шестидневка" и "КалендарныеДни"
			ЗаполнитьРесурсыЗаписиРегистра(Запись);
		КонецЦикла; 
	Иначе
		Для Каждого СтрокаТаблицы ИЗ ТаблицаРегистра Цикл
			НоваяЗаписьРегистра = НаборЗаписей.Добавить();
			НоваяЗаписьРегистра.ДатаКалендаря = СтрокаТаблицы.ДатаКалендаря;
			НоваяЗаписьРегистра.Год			  = Год(СтрокаТаблицы.ДатаКалендаря);
			НоваяЗаписьРегистра.ВидДня		  = СтрокаТаблицы.ВидДня;
			// Установим ресурсы "Пятидневка", "Шестидневка" и "КалендарныеДни"
			ЗаполнитьРесурсыЗаписиРегистра(НоваяЗаписьРегистра);
		КонецЦикла; 
	КонецЕсли;
	
	// запишем набор записей
	НаборЗаписей.Записать();
	
	// Синхронизируем внесенные изменения с регистром "ГрафикиРаботыПоВидамВремени"
	НачалоГода = Дата(Формат(ГодЗаписи,"ЧГ=0")+"0101");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода);
	Запрос.УстановитьПараметр("КонецГода", КонецГода(НачалоГода));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГрафикиРаботыПоВидамВремени.Месяц КАК Месяц,
	|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы КАК ГрафикРаботы,
	|	ГрафикиРаботыПоВидамВремени.Дата КАК Дата,
	|	РегламентированныйПроизводственныйКалендарь.Пятидневка,
	|	РегламентированныйПроизводственныйКалендарь.Шестидневка,
	|	РегламентированныйПроизводственныйКалендарь.КалендарныеДни
	|ИЗ
	|	РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|		ПО ГрафикиРаботыПоВидамВремени.Дата = РегламентированныйПроизводственныйКалендарь.ДатаКалендаря
	|ГДЕ
	|	ГрафикиРаботыПоВидамВремени.Месяц МЕЖДУ &НачалоГода И &КонецГода
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГрафикРаботы,
	|	Месяц,
	|	Дата";
	
	//НаборЗаписейЗаДеньПоВремени	= РегистрыСведений.ГрафикиРаботыПоВидамВремени.СоздатьНаборЗаписей();
	//НаборЗаписейЗаДеньПоВремени.Отбор.Месяц.Использование = Истина;
	//НаборЗаписейЗаДеньПоВремени.Отбор.ГрафикРаботы.Использование = Истина;
	//СтруктураОтбора = Новый Структура("Дата");
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.СледующийПоЗначениюПоля("ГрафикРаботы") Цикл
	//	НаборЗаписейЗаДеньПоВремени.Отбор.ГрафикРаботы.Значение = Выборка.ГрафикРаботы;
	//	Пока Выборка.СледующийПоЗначениюПоля("Месяц") Цикл
	//		НаборЗаписейЗаДеньПоВремени.Отбор.Месяц.Значение = Выборка.Месяц;
	//		НаборЗаписейЗаДеньПоВремени.Прочитать();
	//		ВременнаяТЗ = НаборЗаписейЗаДеньПоВремени.Выгрузить();
	//		Пока Выборка.Следующий() Цикл
	//			СтруктураОтбора.Дата = Выборка.Дата;
	//			СтрокиНабораЗаписей = ВременнаяТЗ.НайтиСтроки(СтруктураОтбора);
	//			Для каждого СтрокаНабора Из СтрокиНабораЗаписей Цикл
	//				Если СтрокаНабора.ВидУчетаВремени = Перечисления.ВидыУчетаВремени.ПоДням 
	//					Или СтрокаНабора.ВидУчетаВремени = Перечисления.ВидыУчетаВремени.ПоЧасам Тогда
	//					СтрокаНабора.ПроизводственныйКалендарьПятидневка	 = Выборка.Пятидневка;
	//					СтрокаНабора.ПроизводственныйКалендарьШестидневка	 = Выборка.Шестидневка;
	//					СтрокаНабора.ПроизводственныйКалендарьКалендарныеДни = Выборка.КалендарныеДни;
	//				 КонецЕсли;
	//			КонецЦикла; 
	//		КонецЦикла;
	//		НаборЗаписейЗаДеньПоВремени.Загрузить(ВременнаяТЗ);
	//		НаборЗаписейЗаДеньПоВремени.Записать();
	//	КонецЦикла;
	//КонецЦикла;
			
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ИНИЦИАЛИЗАЦИЯ ПЕРЕМЕННЫХ МОДУЛЯ

