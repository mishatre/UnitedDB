Перем мУдалятьДвижения;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;

КонецФункции // ПолучитьТаблицуПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Процедура проверяет правильность заполнения реквизитов документа
//
Процедура ПроверкаРеквизитов(Отказ, Заголовок, СтруктураШапкиДокумента) Экспорт
	
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект,  Новый Структура("Организация, ВидРаспределенияПоПроектам"), Отказ, Заголовок);
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "РаспределениеПоПроектам", Новый Структура("Проект, ДоляРаспределения"), Отказ, Заголовок);
		
КонецПроцедуры // ПроверкаРеквизитов()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

Процедура ДвиженияПоРегистрам(ТабДокумента)
	
	//ТабДвижений = Движения.РаспределениеПоПроектам.Выгрузить();
	ТабДвижений = ТабДокумента.Скопировать();
	ТабДвижений.Колонки.Добавить("Период");
	ТабДвижений.Колонки.Добавить("ВидРаспределения");
	ТабДвижений.ЗаполнитьЗначения( Дата, "Период");
	ТабДвижений.ЗаполнитьЗначения( ВидРаспределенияПоПроектам, "ВидРаспределения");
	Движения.РаспределениеПоПроектам.Загрузить(ТабДвижений);
	
КонецПроцедуры // ДвиженияПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаПроведения"
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	// Дополним полями, нужными для регл. и упр. учета
	ДеревоПолейЗапросаПоШапке = ОбщегоНазначения.СформироватьДеревоПолейЗапросаПоШапке();
	
	// Сформируем запрос на дополнительные параметры, нужные при проведении, по данным шапки документа
	СтруктураШапкиДокумента = УправлениеЗапасами.СформироватьЗапросПоДеревуПолей(ЭтотОбъект, ДеревоПолейЗапросаПоШапке, СтруктураШапкиДокумента, 0);

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(СтруктураШапкиДокумента);
	
	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить( "Проект",            "Проект");
	СтруктураПолей.Вставить( "ДоляРаспределения", "ДоляРаспределения");
	
	ЗапросПоТЧ = ОбщегоНазначения.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "РаспределениеПоПроектам", СтруктураПолей);
	ТабДокумента = ЗапросПоТЧ.Выгрузить();
	
	ПроверкаРеквизитов(Отказ, Заголовок, СтруктураШапкиДокумента);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Формирование движений регистров, бухгалтерских и налоговых проводок.
	ДвиженияПоРегистрам(ТабДокумента);
	
КонецПроцедуры	// ОбработкаПроведения()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	мУдалятьДвижения = НЕ ЭтоНовый();

КонецПроцедуры // ПередЗаписью()

Процедура ОбработкаУдаленияПроведения(Отказ)

	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);

КонецПроцедуры // ОбработкаУдаленияПроведения

Процедура ОбработкаЗаполнения(Основание)
	
	Дата=ОбщегоНазначения.ПолучитьРабочуюДату();
	ВидРаспределенияПоПроектам=Основание;
	
	Организация=УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОсновнаяОрганизация");
	Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОсновнойОтветственный");
	
КонецПроцедуры

