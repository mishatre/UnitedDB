////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбменДаннымиСервер.ФормаНастройкиУзлаПриСозданииНаСервере(ЭтаФорма, "ОбменРозницаУправлениеТорговлей103");
	ЗаполнитьСписокОграниченийДляПользователей();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ОбменДаннымиКлиент.ФормаНастройкиПередЗакрытием(Отказ, ЭтаФорма);
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоОрганизациямПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементамФормы(Элементы.Организации);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоСкладамПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементамФормы(Элементы.Склады);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоКассамПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементамФормы(Элементы.Кассы);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоКассамККМПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементамФормы(Элементы.КассыККМ);
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьДоступностьЭлементамФормы(ТекущаяСтраница = Неопределено)
	
	ЗначенияФлаговИСтраниц = Новый Соответствие();
	ЗначенияФлаговИСтраниц.Вставить(Элементы.Организации, ИспользоватьОтборПоОрганизациям);
	ЗначенияФлаговИСтраниц.Вставить(Элементы.Склады, ИспользоватьОтборПоСкладам);
	ЗначенияФлаговИСтраниц.Вставить(Элементы.Кассы, ИспользоватьОтборПоКассам);
	ЗначенияФлаговИСтраниц.Вставить(Элементы.КассыККМ, ИспользоватьОтборПоКассамККМ);
	
	СтраницыОтбора = Новый Массив();
	Если ИспользоватьОтборПоОрганизациям Тогда
		СтраницыОтбора.Добавить(Элементы.Организации);
	КонецЕсли;
	Если ИспользоватьОтборПоСкладам Тогда
		СтраницыОтбора.Добавить(Элементы.Склады);
	КонецЕсли;
	Если ИспользоватьОтборПоКассам Тогда
		СтраницыОтбора.Добавить(Элементы.Кассы);
	КонецЕсли;
	Если ИспользоватьОтборПоКассамККМ Тогда
		СтраницыОтбора.Добавить(Элементы.КассыККМ);
	КонецЕсли;
	Элементы.Страницы.Доступность = СтраницыОтбора.Количество() > 0.00;
	Если СтраницыОтбора.Количество() = 0.00 Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Организации.Доступность = ИспользоватьОтборПоОрганизациям;
	Элементы.Склады.Доступность = ИспользоватьОтборПоСкладам;
	Элементы.Кассы.Доступность = ИспользоватьОтборПоКассам;
	Элементы.КассыККМ.Доступность = ИспользоватьОтборПоКассамККМ;
	Если ТекущаяСтраница <> Неопределено Тогда
		Если ЗначенияФлаговИСтраниц[ТекущаяСтраница] = Ложь И Элементы.Страницы.ТекущаяСтраница = ТекущаяСтраница Тогда
			Элементы.Страницы.ТекущаяСтраница = СтраницыОтбора[0];
		ИначеЕсли ЗначенияФлаговИСтраниц[ТекущаяСтраница] = Истина Тогда
			Элементы.Страницы.ТекущаяСтраница = ТекущаяСтраница;
		КонецЕсли;
	Иначе
		Элементы.Страницы.ТекущаяСтраница = СтраницыОтбора[0];
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступностьЭлементамФормы();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ПодготовитьДанныеДляЗакрытияФормы();
	
	ОбменДаннымиКлиент.ФормаНастройкиУзлаКомандаЗакрытьФорму(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВсеОрганизации(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Истина, "Организации");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьВсеОрганизации(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Ложь, "Организации");
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВсеСклады(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Истина, "Склады");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьВсеСклады(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Ложь, "Склады");
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВсеКассы(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Истина, "Кассы");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьВсеКассы(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Ложь, "Кассы");
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВсеКассыККМ(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Истина, "КассыККМ");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьВсеКассыККМ(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Ложь, "КассыККМ");
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьОтключитьВсеЭлементыВТаблице(Включить, ИмяТаблицы)
	
	Для Каждого ЭлементКоллекции Из ЭтаФорма[ИмяТаблицы] Цикл
		
		ЭлементКоллекции.Выбран = Включить;
		
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ И ФУНКЦИИ
&НаСервере
Процедура ЗаполнитьСписокОграниченийДляПользователей()
	
	Запрос = Новый Запрос();
	ТекстЗапроса = "
	/////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяОрганизации.Организация,
	|	ВременнаяОрганизации.Выбран
	// 0
	|ПОМЕСТИТЬ ВременнаяОрганизации
	|ИЗ
	|	&Организации КАК ВременнаяОрганизации
	|;
	/////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяСклады.Склад,
	|	ВременнаяСклады.Выбран
	// 1
	|ПОМЕСТИТЬ ВременнаяСклады
	|ИЗ
	|	&Склады КАК ВременнаяСклады
	|;
	/////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяКассы.Касса,
	|	ВременнаяКассы.Выбран
	// 2
	|ПОМЕСТИТЬ ВременнаяКассы
	|ИЗ
	|	&Кассы КАК ВременнаяКассы
	|;
	/////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяКассыККМ.КассаККМ,
	|	ВременнаяКассыККМ.Выбран
	// 3
	|ПОМЕСТИТЬ ВременнаяКассыККМ
	|ИЗ
	|	&КассыККМ КАК ВременнаяКассыККМ
	|;
	/////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация,
	|	ВЫБОР	КОГДА ВременнаяОрганизации.Организация ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|	КОНЕЦ              КАК Выбран
	// 4
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВременнаяОрганизации
	|ПО
	|	ВременнаяОрганизации.Организация = Организации.Ссылка
	|ГДЕ
	|	(НЕ Организации.ПометкаУдаления)
	|;
	/////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Склады.Ссылка КАК Склад,
	|	ВЫБОР	КОГДА ВременнаяСклады.Склад ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|	КОНЕЦ              КАК Выбран
	// 5
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВременнаяСклады
	|ПО
	|	ВременнаяСклады.Склад = Склады.Ссылка
	|ГДЕ
	|	(НЕ Склады.ЭтоГруппа)
	|	И (НЕ Склады.ПометкаУдаления)
	|;
	/////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Кассы.Ссылка КАК Касса,
	|	ВЫБОР	КОГДА ВременнаяКассы.Касса ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|	КОНЕЦ              КАК Выбран
	// 6
	|ИЗ
	|	Справочник.Кассы КАК Кассы
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВременнаяКассы
	|ПО
	|	ВременнаяКассы.Касса = Кассы.Ссылка
	|ГДЕ
	|	(НЕ Кассы.ЭтоГруппа)
	|	И (НЕ Кассы.ПометкаУдаления)
	|;
	/////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КассыККМ.Ссылка КАК КассаККМ,
	|	ВЫБОР	КОГДА ВременнаяКассыККМ.КассаККМ ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|	КОНЕЦ              КАК Выбран
	// 7
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВременнаяКассыККМ
	|ПО
	|	ВременнаяКассыККМ.КассаККМ = КассыККМ.Ссылка
	|ГДЕ
	|	НЕ КассыККМ.ПометкаУдаления
	|";
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Организации", Организации.Выгрузить());
	Запрос.УстановитьПараметр("Склады", Склады.Выгрузить());
	Запрос.УстановитьПараметр("Кассы", Кассы.Выгрузить());
	Запрос.УстановитьПараметр("КассыККМ", КассыККМ.Выгрузить());
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Организации.Загрузить(РезультатЗапроса[4].Выгрузить());
	Склады.Загрузить(РезультатЗапроса[5].Выгрузить());
	Кассы.Загрузить(РезультатЗапроса[6].Выгрузить());
	КассыККМ.Загрузить(РезультатЗапроса[7].Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьДанныеДляЗакрытияФормы()
	
	УдалитьСтрокиИзТЧ("Организации");
	УдалитьСтрокиИзТЧ("Склады");
	УдалитьСтрокиИзТЧ("Кассы");
	УдалитьСтрокиИзТЧ("КассыККМ");
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСтрокиИзТЧ(ИмяТЧ)
	
	МассивСтрок = ЭтаФорма[ИмяТЧ].НайтиСтроки(Новый Структура("Выбран", Ложь));
	Для каждого СтрокаТЧ Из МассивСтрок Цикл
		ЭтаФорма[ИмяТЧ].Удалить(СтрокаТЧ);
	КонецЦикла;
	
КонецПроцедуры