Перем мПериод          Экспорт; // Период движений
Перем мТаблицаДвижений Экспорт; // Таблица движений

// Описание переменных используемых для работы процедур контроля остатков.
Перем мДокМетаданные;           // Метаданные документа
Перем мТабЧастьМетаданные;      // Метаданные табличной части документа
Перем мИмяДокумента;            // Имя (идентификатор) документа
Перем мИмяТабЧасти;             // Имя табличной части документа, по которой производится контроль остатков
Перем мИмяТаблицы;              // Результирующее имя таблицы - строка вида "<ИмяДокумента>.<ИмяТабЧасти>"
Перем мСтруктураШапкиДокумента; // Структура содержащая данных документа
Перем мЗаголовок;               // Текст заголовка сообщение об ошибке.
Перем мОтказ;                   // Флаг наличия ошибки

// Выполняет приход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьПриход() Экспорт

	ОбщегоНазначения.ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Приход);

КонецПроцедуры // ВыполнитьПриход()

// Выполняет расход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьРасход() Экспорт

	ОбщегоНазначения.ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Расход);

КонецПроцедуры // ВыполнитьРасход()

// Выполняет движения по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьДвижения() Экспорт

	Загрузить(мТаблицаДвижений);

КонецПроцедуры // ВыполнитьДвижения()

// Контролируется возможность списания номенклатуры по документу резерва.
// Не допускаются отрицательные остатки по номенклатуре в разрезе документа-резерва
//
// Контроль выполняется для документов "Расходный ордер на товары" и "Списание товаров"
//	Заказ и склад отсутствуют
//	Характеристика, серия, качество, коэффициент - зависят от таб.части. (товар/тара).
//
// Параметры:
//	Нет
//
Процедура КонтрольОстатков_Остатки()

	ЕстьДокументПередачи  = мДокМетаданные.Реквизиты.Найти("ДокументПередачи") <> Неопределено;
	
	ЕстьХарактеристика    = мТабЧастьМетаданные.Реквизиты.Найти("ХарактеристикаНоменклатуры")         <> Неопределено;
	ЕстьСерия             = мТабЧастьМетаданные.Реквизиты.Найти("СерияНоменклатуры")                  <> Неопределено;
	ЕстьКачество          = мТабЧастьМетаданные.Реквизиты.Найти("Качество")                           <> Неопределено;
	ЕстьФлагУказанияСерий = мТабЧастьМетаданные.Реквизиты.Найти("СерияУказываетсяПриОтпускеСоСклада") <> Неопределено;
	ЕстьКоэффициент       = мТабЧастьМетаданные.Реквизиты.Найти("Коэффициент")                        <> Неопределено;
	
	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	ТекстЗапросаСписокНоменклатуры = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Номенклатура 
		|ИЗ
		|	Документ." + мИмяТаблицы + "
		|ГДЕ
		|	Ссылка = &ДокументСсылка";

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", мСтруктураШапкиДокумента.Ссылка);
	Запрос.УстановитьПараметр("Склад",          мСтруктураШапкиДокумента.Склад);
	Запрос.УстановитьПараметр("ПустаяСерия",    Справочники.СерииНоменклатуры.ПустаяСсылка());	
	Если ЕстьДокументПередачи Тогда
		Запрос.УстановитьПараметр("ДокументПередачи", мСтруктураШапкиДокумента.ДокументПередачи);
	Иначе
		Запрос.УстановитьПараметр("ПустойДокРезерва", ОбщегоНазначения.МассивПустыхЗначений(мТабЧастьМетаданные.Реквизиты.ДокументРезерва.Тип));
	КонецЕсли;

	ТекстЗапроса = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление                         КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,
	|	%ПОЛЕ_Док_Характеристика%  КАК ХарактеристикаНоменклатуры,
	|	%ПОЛЕ_Док_Серия%           КАК СерияНоменклатуры,
	|	%ПОЛЕ_Док_Качество%        КАК Качество,
	|	%ПОЛЕ_Док_ДокументРезерва% КАК ДокументПередачи,
	|	%ПОЛЕ_Док_Количество%      КАК ДокументКоличество,
	|	ЕСТЬNULL(МАКСИМУМ(Остатки.КоличествоОстаток), 0) КАК ОстатокКоличество
	|ИЗ 
	|	Документ." + мИмяТаблицы + " КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки(, Номенклатура В (%ВыборкаПоНоменклатуре%)
	|		И Склад = &Склад
	|		%УСЛОВИЕ_ДокументРезерва%) КАК Остатки
	|ПО 
	|	Док.Номенклатура = Остатки.Номенклатура
	|   // СОЕДИНЕНИЕ_Характеристика_Остатки
	|   // СОЕДИНЕНИЕ_Серия_Остатки
	|   // СОЕДИНЕНИЕ_Качество_Остатки
	|   // СОЕДИНЕНИЕ_ДокументРезерва_Остатки
	|
	|ГДЕ
	|	Док.Ссылка = &ДокументСсылка
	|   // УСЛОВИЕ_ЗаполненДокРезерва
	|
	|СГРУППИРОВАТЬ ПО
	|	Док.Номенклатура,
	|	%ПОЛЕ_Док_Характеристика%,
	|	%ПОЛЕ_Док_Серия%,
	|	%ПОЛЕ_Док_Качество%,
	|	%ПОЛЕ_Док_ДокументРезерва%
	|
	|ИМЕЮЩИЕ
	|	ЕСТЬNULL(МАКСИМУМ(Остатки.КоличествоОстаток), 0) < %ПОЛЕ_Док_Количество%
	|
	|ДЛЯ ИЗМЕНЕНИЯ
	|	РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ВыборкаПоНоменклатуре%",   ТекстЗапросаСписокНоменклатуры);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Док_Характеристика%", ?(ЕстьХарактеристика, "Док.ХарактеристикаНоменклатуры", "Неопределено"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Док_Серия%",          ?(ЕстьСерия,          "Док.СерияНоменклатуры",          "Неопределено"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Док_Качество%",       ?(ЕстьКачество,       "Док.Качество",                   "Неопределено"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Док_Количество%",     ?(ЕстьКоэффициент,
		"СУММА(ВЫРАЗИТЬ(Док.Количество * Док.Коэффициент / Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК ЧИСЛО(15,3)))",
		"СУММА(Док.Количество)"));

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_Остатки",  ?(ЕстьХарактеристика, "И Док.ХарактеристикаНоменклатуры = Остатки.ХарактеристикаНоменклатуры", ""));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Качество_Остатки",        ?(ЕстьКачество,       "И Док.Качество = Остатки.Качество", ""));
	
	Если ЕстьДокументПередачи Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Док_ДокументРезерва%",            "&ДокументПередачи");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УСЛОВИЕ_ДокументРезерва%",             "И &ДокументПередачи = ДокументПередачи");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_ДокументРезерва_Остатки", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// УСЛОВИЕ_ЗаполненДокРезерва",         "");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Док_ДокументРезерва%",            "Док.ДокументРезерва");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УСЛОВИЕ_ДокументРезерва%",             "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_ДокументРезерва_Остатки", "И ДокументПередачи = Док.ДокументРезерва");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// УСЛОВИЕ_ЗаполненДокРезерва",         "И Док.ДокументРезерва НЕ В(&ПустойДокРезерва)");
	КонецЕсли;
	
	Если ЕстьСерия Тогда
		Если ЕстьФлагУказанияСерий Тогда
			ТекстЗамены = "И ((НЕ Док.СерияУказываетсяПриОтпускеСоСклада И Остатки.СерияНоменклатуры = Док.СерияНоменклатуры) ИЛИ
						   |     (Док.СерияУказываетсяПриОтпускеСоСклада И Остатки.СерияНоменклатуры = &ПустаяСерия))"
		Иначе
			ТекстЗамены = "И Док.СерияНоменклатуры = Остатки.СерияНоменклатуры"
		КонецЕсли;
	Иначе
		ТекстЗамены = "";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Серия_Остатки", ТекстЗамены);
	
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
        ТипДокументПередачи = ТипЗнч(Выборка.ДокументПередачи); 
        Если НЕ (ТипДокументПередачи=Тип("ДокументСсылка.РеализацияТоваровУслуг")
            или ТипДокументПередачи=Тип("ДокументСсылка.ПеремещениеТоваров")
            или ТипДокументПередачи=Тип("ДокументСсылка.РеализацияТоваровУслуг")
            или ТипДокументПередачи=Тип("ДокументСсылка.ВозвратТоваровПоставщику")) Тогда
			Продолжить;
		КонецЕсли;	

		СтрокаСообщения = "Остатка " + УправлениеЗапасами.ПредставлениеНоменклатуры(
				Выборка.НоменклатураПредставление, 
				?(ЕстьХарактеристика, Выборка.ХарактеристикаНоменклатуры, ""),
				?(ЕстьСерия, Выборка.СерияНоменклатуры, "")) +
			" к передаче со склада " + СокрЛП(мСтруктураШапкиДокумента.Склад) +
			" по документу " + Выборка.ДокументПередачи +
				?(ЕстьКачество, " с качеством " + Выборка.Качество, "") + " недостаточно.";

		УправлениеЗапасами.ОшибкаНетОстатка(СтрокаСообщения, Выборка.ОстатокКоличество, Выборка.ДокументКоличество,
			Выборка.ЕдиницаХраненияОстатковПредставление, мОтказ, мЗаголовок);

	КонецЦикла;

КонецПроцедуры // КонтрольОстатков_Остатки()

// Контролируется возможность списания номенклатуры из свободного остатки под расходный ордер на товары.
// Не допускается превышение свободного остатка по номенклатуре на складах.
//
// Контроль выполняется для документов "Реализация товаров" и "Возврат товаров поставщику".
// В этих документах есть склад, заказ и качество в таб.части, наличие характеристики и серии зависит от таб.части.
//
// Параметры:
//	Нет
//
Процедура КонтрольСвободныхОстатков_Реализация()
	
	ИмяРеквизитаЗаказ = "ЗаказПокупателя";
	Если мИмяДокумента = "ВозвратТоваровПоставщику" Тогда
		 ИмяРеквизитаЗаказ = "Заказ";
	КонецЕсли;
	
	ЕстьХарактеристика = мТабЧастьМетаданные.Реквизиты.Найти("ХарактеристикаНоменклатуры") <> Неопределено;
	ЕстьСерия          = мТабЧастьМетаданные.Реквизиты.Найти("СерияНоменклатуры") <> Неопределено;
	ЕстьКачество       = мТабЧастьМетаданные.Реквизиты.Найти("Качество") <> Неопределено;
	ЕстьКоэффициент    = мТабЧастьМетаданные.Реквизиты.Найти("Коэффициент") <> Неопределено;
	ЕстьСпособСписания = мТабЧастьМетаданные.Реквизиты.Найти("СпособСписанияОстаткаТоваров") <> Неопределено;
	ЕстьКлючСтроки     = мТабЧастьМетаданные.Реквизиты.Найти("КлючСтроки") <> Неопределено;

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", мСтруктураШапкиДокумента.Ссылка);
	Запрос.УстановитьПараметр("ПустаяСерия"   , Справочники.СерииНоменклатуры.ПустаяСсылка());	
	Запрос.УстановитьПараметр("ПустойОрдер",    Документы.ПриходныйОрдерНаТовары.ПустаяСсылка()); 
	МассивПустыхСсылок = ОбщегоНазначения.МассивПустыхЗначений(мТабЧастьМетаданные.Реквизиты[ИмяРеквизитаЗаказ].Тип);
	Запрос.УстановитьПараметр("МассивПустыхЗаказов",		 МассивПустыхСсылок);

	Если ЕстьКлючСтроки Тогда
		ТекстДокумент = "
		|	(ВЫБРАТЬ
		|		ВЫБОР КОГДА Док.Номенклатура.Комплект ТОГДА
		|			СоставНабора.Номенклатура
		|		ИНАЧЕ
		|			Док.Номенклатура
		|		КОНЕЦ КАК Номенклатура,
		|		ВЫБОР КОГДА Док.Номенклатура.Комплект ТОГДА
		|			СоставНабора.ХарактеристикаНоменклатуры
		|		ИНАЧЕ
		|			Док.ХарактеристикаНоменклатуры
		|		КОНЕЦ КАК ХарактеристикаНоменклатуры,
		|		ВЫБОР КОГДА Док.Номенклатура.Комплект ТОГДА
		|			СоставНабора.СерияНоменклатуры
		|		ИНАЧЕ
		|			Док.СерияНоменклатуры
		|		КОНЕЦ КАК СерияНоменклатуры,
		|		Док.Качество КАК Качество,
		|		Док.Склад КАК Склад,
		|		ВЫБОР КОГДА Док.Номенклатура.Комплект ТОГДА
		|			Док.Количество * СоставНабора.Количество
		|		ИНАЧЕ
		|			Док.Количество
		|		КОНЕЦ КАК Количество,
		|		Док.Ссылка КАК Ссылка,
		|		Док.Коэффициент КАК Коэффициент,
		|		Док.СпособСписанияОстаткаТоваров КАК СпособСписанияОстаткаТоваров,
		|		Док.ЗаказПокупателя КАК ЗаказПокупателя
		|	ИЗ
		|		Документ." + мИмяТаблицы + " КАК Док
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		Документ." + мИмяДокумента + ".СоставНабора КАК СоставНабора
		|	ПО
		|		СоставНабора.Ссылка = Док.Ссылка
		|		И СоставНабора.КлючСтроки = Док.КлючСтроки
		|	ГДЕ
		|		Док.Ссылка = &ДокументСсылка
		|	) КАК Док";

		// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
		ТекстЗапросаСписокНоменклатуры = "
		|ВЫБРАТЬ
		|	Номенклатура
		|ИЗ
		|	Документ." + мИмяТаблицы + "
		|ГДЕ
		|	Ссылка = &ДокументСсылка
		|ОБЪЕДИНИТЬ
		|ВЫБРАТЬ
		|	Номенклатура
		|ИЗ
		|	Документ." + мИмяДокумента + ".СоставНабора
		|ГДЕ
		|	Ссылка = &ДокументСсылка";
	Иначе
		ТекстДокумент = "Документ." + мИмяТаблицы + " КАК Док";

		// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
		ТекстЗапросаСписокНоменклатуры = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Номенклатура 
		|ИЗ
		|	Документ." + мИмяТаблицы + "
		|ГДЕ
		|	Ссылка = &ДокументСсылка";
	КонецЕсли;

	ТекстЗапроса = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление                         КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,
	|	Неопределено              КАК СерияНоменклатуры,
	|	%ПОЛЕ_Док_Характеристика% КАК ХарактеристикаНоменклатуры,
	|	%ПОЛЕ_Док_Качество%       КАК Качество,
	|   Док.Склад                 КАК Склад,
	|	%ПОЛЕ_Док_Количество%     КАК ДокументКоличество,
	|	ЕСТЬNULL(МАКСИМУМ(Резервы.КоличествоОстаток), 0)       		КАК РезервыКоличество,
	|	ЕСТЬNULL(МАКСИМУМ(РезервыПоСделке.КоличествоОстаток), 0)	КАК РезервыПоСделкеКоличество,
	|	0                                                      		КАК КПолучению,
	|	ЕСТЬNULL(МАКСИМУМ(Остатки.КоличествоОстаток), 0)            КАК ОстаткиКоличество,
	|	ЕСТЬNULL(МАКСИМУМ(КПередаче.КоличествоОстаток), 0)			КАК КПередачеКоличество
	|ИЗ
	|	" + ТекстДокумент + "
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	(ВЫБРАТЬ
	|		ТоварыНаСкладахОстатки.Склад             КАК Склад,
	|		ТоварыНаСкладахОстатки.Номенклатура      КАК Номенклатура,
	|		// ПОЛЕ_Характеристика
	|		// ПОЛЕ_Качество
	|		ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыНаСкладах.Остатки(, Номенклатура В (%ВыборкаПоНоменклатуре%)) КАК ТоварыНаСкладахОстатки
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТоварыВРозницеОстатки.Склад              КАК Склад,
	|		ТоварыВРозницеОстатки.Номенклатура       КАК Номенклатура,
	|		// ПОЛЕ_Характеристика
	|		// ПОЛЕ_Качество
	|		ТоварыВРозницеОстатки.КоличествоОстаток  КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыВРознице.Остатки(, Номенклатура В (%ВыборкаПоНоменклатуре%)) КАК ТоварыВРозницеОстатки
	|	) КАК Остатки
	|ПО 
	|	Док.Номенклатура = Остатки.Номенклатура
	|   И Док.Склад      = Остатки.Склад
	|   // СОЕДИНЕНИЕ_Характеристика_Остатки
	|   // СОЕДИНЕНИЕ_Качество_Остатки
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(, Номенклатура В (%ВыборкаПоНоменклатуре%)) КАК Резервы
	|ПО 
	|	Док.Номенклатура = Резервы.Номенклатура
	|   И Док.Склад      = Резервы.Склад
	|	// УСЛОВИЕ_Док_СписаниеСоСклада
	|   // СОЕДИНЕНИЕ_Характеристика_Резервы
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	(ВЫБРАТЬ ТЧ.Номенклатура,
	|	ТЧ.Склад
	|	//ПОЛЕ_ТЧ_Характеристика
	|	//количество, списываемое за счет резерва, не может превышать количество указанное в документе
	|	,ВЫБОР КОГДА Сумма(ТЧ.ДокументКоличество)<Сумма(ВремРезервы.КоличествоОстаток) ТОГДА
	|   	Сумма(ТЧ.ДокументКоличество)
	|	ИНАЧЕ Сумма(ВремРезервы.КоличествоОстаток)
	|	КОНЕЦ КАК КоличествоОстаток
	|	ИЗ
	|		//сгруппированная табличная часть документа с отбором строк которые списываются из резерва
	|		(ВЫБРАТЬ  
	|			Номенклатура, 
	|			Склад,
	|			%ПОЛЕ_Заказ% КАК ДокументРезерва,
	|			%ПОЛЕ_Количество% КАК ДокументКоличество
	|			//ПОЛЕ_Врем_Характеристика
	|		ИЗ 
	|			Документ." + мИмяТаблицы +"
	|		ГДЕ  Ссылка = &ДокументСсылка
	|			И %ПОЛЕ_Заказ% НЕ В (&МассивПустыхЗаказов)
	|			// УСЛОВИЕ_СписаниеИзРезерва
	|		СГРУППИРОВАТЬ ПО
	|			Номенклатура, 
	|			Склад,
	|			%ПОЛЕ_Заказ%
	|			//ПОЛЕ_Врем_Характеристика
	|		) КАК ТЧ
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(, 
	|			Номенклатура В (%ВыборкаПоНоменклатуре%)
	|			) КАК ВремРезервы
	|	ПО ТЧ.Номенклатура = ВремРезервы.Номенклатура 
	|		И ТЧ.Склад = ВремРезервы.Склад
	|		// СОЕДИНЕНИЕ_Характеристика_ВремРезервы
	|		И ВремРезервы.ДокументРезерва = ТЧ.ДокументРезерва
	|	СГРУППИРОВАТЬ ПО 
	|		ТЧ.Номенклатура,
	|		ТЧ.Склад
	|		//ПОЛЕ_ТЧ_Характеристика
	|) КАК РезервыПоСделке
	|ПО 
	|Док.Номенклатура                 = РезервыПоСделке.Номенклатура
	|И Док.Склад = РезервыПоСделке.Склад
	|// СОЕДИНЕНИЕ_Характеристика_РезервПоСделке
	|И Док.%ПОЛЕ_Заказ% НЕ В (&МассивПустыхЗаказов)
    |// УСЛОВИЕ_Док_СписаниеИзРезерва
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки(, Номенклатура В (%ВыборкаПоНоменклатуре%)) КАК КПередаче
	|ПО 
	|	Док.Номенклатура = КПередаче.Номенклатура
	|   И Док.Склад      = КПередаче.Склад
	|   // СОЕДИНЕНИЕ_Характеристика_КПередаче
	|   // СОЕДИНЕНИЕ_Качество_КПередаче
	|
	|ГДЕ
	|	Док.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Док.Номенклатура,
	|	%ПОЛЕ_Док_Характеристика%,
	|	%ПОЛЕ_Док_Качество%,
	|   Док.Склад
	|
	|ИМЕЮЩИЕ
	|	ЕСТЬNULL(МАКСИМУМ(Остатки.КоличествоОстаток), 0)
	|	- ЕСТЬNULL(МАКСИМУМ(Резервы.КоличествоОстаток), 0)
	|	- ЕСТЬNULL(МАКСИМУМ(КПередаче.КоличествоОстаток), 0)
	|	+ ЕСТЬNULL(МАКСИМУМ(РезервыПоСделке.КоличествоОстаток), 0) < %ПОЛЕ_Док_Количество%
	|
	|ДЛЯ ИЗМЕНЕНИЯ
	|	РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы"
	+ ?(ЕстьСерия, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление                         КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,
	|	Док.СерияНоменклатуры	  КАК СерияНоменклатуры,
	|	%ПОЛЕ_Док_Характеристика% КАК ХарактеристикаНоменклатуры,
	|	%ПОЛЕ_Док_Качество%       КАК Качество,
	|   Док.Склад                 КАК Склад,
	|	%ПОЛЕ_Док_Количество%     КАК ДокументКоличество,
	|	0 КАК РезервыКоличество,
	|	0 КАК РезервыПоСделкеКоличество,
	|	0 КАК КПолучению,
	|	ЕСТЬNULL( МАКСИМУМ( Остатки.КоличествоОстаток  ), 0) КАК ОстаткиКоличество,
	|	ЕСТЬNULL( МАКСИМУМ( КПередаче.КоличествоОстаток), 0) КАК КПередачеКоличество
	|ИЗ 
	|	" + ТекстДокумент + "
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	(ВЫБРАТЬ
	|		ТоварыНаСкладахОстатки.Склад                      КАК Склад,
	|		ТоварыНаСкладахОстатки.Номенклатура               КАК Номенклатура,
	|		ТоварыНаСкладахОстатки.СерияНоменклатуры          КАК СерияНоменклатуры,
	|		// ПОЛЕ_Характеристика
	|		// ПОЛЕ_Качество
	|		ТоварыНаСкладахОстатки.КоличествоОстаток          КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыНаСкладах.Остатки(, Номенклатура В (%ВыборкаПоНоменклатуре%)) КАК ТоварыНаСкладахОстатки
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТоварыВРозницеОстатки.Склад                      КАК Склад,
	|		ТоварыВРозницеОстатки.Номенклатура               КАК Номенклатура,
	|		ТоварыВРозницеОстатки.СерияНоменклатуры          КАК СерияНоменклатуры,
	|		// ПОЛЕ_Характеристика
	|		// ПОЛЕ_Качество
	|		ТоварыВРозницеОстатки.КоличествоОстаток          КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыВРознице.Остатки(,  Номенклатура В (%ВыборкаПоНоменклатуре%)) КАК ТоварыВРозницеОстатки
	|	) КАК Остатки
	|ПО 
	|	Док.Номенклатура        = Остатки.Номенклатура
	|   И Док.Склад             = Остатки.Склад 
	|   И Док.СерияНоменклатуры = Остатки.СерияНоменклатуры
	|	// СОЕДИНЕНИЕ_Характеристика_Остатки
	|	// СОЕДИНЕНИЕ_Качество_Остатки
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки(, Номенклатура В (%ВыборкаПоНоменклатуре%)) КАК КПередаче
	|ПО 
	|	Док.Номенклатура        = КПередаче.Номенклатура
	|   И Док.Склад             = КПередаче.Склад
	| 	И Док.СерияНоменклатуры = КПередаче.СерияНоменклатуры
	| 	// СОЕДИНЕНИЕ_Характеристика_КПередаче
	|	// СОЕДИНЕНИЕ_Качество_КПередаче
	|
	|ГДЕ
	|	Док.Ссылка = &ДокументСсылка
	|	И Док.СерияНоменклатуры <> &ПустаяСерия
	|
	|СГРУППИРОВАТЬ ПО
	|	Док.Номенклатура,
	|	Док.СерияНоменклатуры,
	|   Док.Склад,
	|	%ПОЛЕ_Док_Характеристика%,
	|	%ПОЛЕ_Док_Качество%
	|
	|ИМЕЮЩИЕ
	|	ЕСТЬNULL(МАКСИМУМ(Остатки.КоличествоОстаток), 0) - ЕСТЬNULL(МАКСИМУМ(КПередаче.КоличествоОстаток), 0) < %ПОЛЕ_Док_Количество%
	|
	|ДЛЯ ИЗМЕНЕНИЯ
	|	РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|", "");

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ВыборкаПоНоменклатуре%", ТекстЗапросаСписокНоменклатуры);

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// ПОЛЕ_Характеристика", ?(ЕстьХарактеристика, "ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,", ""));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// ПОЛЕ_Качество",       ?(ЕстьКачество,       "Качество                   КАК Качество,",                   ""));
	
	ТекстУсловиеДокСписаниеСоСклада = " И Док.%ПОЛЕ_Заказ% В (&МассивПустыхЗаказов)";
    ТекстУсловиеДокСписаниеИзРезерва = "";
	ТекстУсловиеСписаниеИзРезерва = "";
	Если ЕстьСпособСписания Тогда
		ТекстУсловиеДокСписаниеСоСклада = " И Док.СпособСписанияОстаткаТоваров = &СоСклада";
		ТекстУсловиеДокСписаниеИзРезерва = " И Док.СпособСписанияОстаткаТоваров = &ИзРезерва";
		ТекстУсловиеСписаниеИзРезерва = " И СпособСписанияОстаткаТоваров = &ИзРезерва";
		Запрос.УстановитьПараметр("СоСклада", Перечисления.СпособыСписанияОстаткаТоваров.СоСклада);
		Запрос.УстановитьПараметр("ИзРезерва", Перечисления.СпособыСписанияОстаткаТоваров.ИзРезерва);
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// УСЛОВИЕ_СписаниеИзРезерва", ТекстУсловиеСписаниеИзРезерва);
    ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// УСЛОВИЕ_Док_СписаниеСоСклада", ТекстУсловиеДокСписаниеСоСклада);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// УСЛОВИЕ_Док_СписаниеИзРезерва", ТекстУсловиеДокСписаниеИзРезерва);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Заказ%", ИмяРеквизитаЗаказ);

	Если ЕстьХарактеристика Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПОЛЕ_Врем_Характеристика",                   	",ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПОЛЕ_ТЧ_Характеристика",                   	",ТЧ.ХарактеристикаНоменклатуры");

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Док_Характеристика%",                   "Док.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_Остатки",        "И Док.ХарактеристикаНоменклатуры = Остатки.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_Резервы",        "И Док.ХарактеристикаНоменклатуры = Резервы.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_РезервПоСделке", "И Док.ХарактеристикаНоменклатуры = РезервыПоСделке.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_КПередаче",      "И Док.ХарактеристикаНоменклатуры = КПередаче.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_КПолучению",     "И Док.ХарактеристикаНоменклатуры = КПолучению.ХарактеристикаНоменклатуры");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Док_Характеристика%",                   "Неопределено");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_Остатки",        "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_Резервы",        "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_РезервПоСделке", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_КПередаче",      "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_КПолучению",     "");
	КонецЕсли;
	
	Если ЕстьКоэффициент Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Док_Количество%", "СУММА(ВЫРАЗИТЬ(Док.Количество * Док.Коэффициент / Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК ЧИСЛО(15,3)))");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Количество%", "СУММА(ВЫРАЗИТЬ(Количество * Коэффициент / Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК ЧИСЛО(15,3)))");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Док_Количество%", "СУММА(Док.Количество)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Количество%", "СУММА(Количество)");
	КонецЕсли;
	
	Если ЕстьКачество Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Док_Качество%",               "Док.Качество");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Качество_Остатки",    "И Док.Качество = Остатки.Качество");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Качество_КПередаче",  "И Док.Качество = КПередаче.Качество");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Качество_КПолучению", "И Док.Качество = КПолучению.Качество");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Док_Качество%",               "Неопределено");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Качество_Остатки",    "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Качество_КПередаче",  "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Качество_КПолучению", "");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СвободныйОстаток = Выборка.ОстаткиКоличество
		   - Выборка.КПередачеКоличество
		   - Выборка.РезервыКоличество
		   + Выборка.РезервыПоСделкеКоличество;

		СтрокаСообщения  = "Свободного остатка для резервирования " + 
			УправлениеЗапасами.ПредставлениеНоменклатуры(
				Выборка.НоменклатураПредставление, 
				?(ЕстьХарактеристика, Выборка.ХарактеристикаНоменклатуры, ""),
				?(ЕстьСерия, Выборка.СерияНоменклатуры, "")) +
			" на складе """ + СокрЛП(Выборка.Склад) + """" +
			?(ЕстьКачество, " с качеством " + Выборка.Качество, "") + " недостаточно.";

		УправлениеЗапасами.ОшибкаНетОстатка(СтрокаСообщения, СвободныйОстаток, Выборка.ДокументКоличество,
			Выборка.ЕдиницаХраненияОстатковПредставление, мОтказ, мЗаголовок);

	КонецЦикла;

КонецПроцедуры // КонтрольСвободныхОстатков_Реализация()

// Контролируется возможность списания номенклатуры из свободного остатки под расходный ордер на товары.
// Не допускается превышение свободного остатка по номенклатуре на складах.
//
// Контроль выполняется для документа "Перемещение товаров".
// Документ отличается наличием в шапке двух складов - Склада отправителя и склада получателя,
// также в связи с этим может осуществлять перемещение товаров полученных по ордерам. Ордера
// прописываются в реквизите ДокументРезерва табличной части.
// В шапке имеется внутренний заказ, при его выборе логика работы документа также меняется.
// Других заказов документ не имеет.
//
// Параметры:
//  Нет
//
Процедура КонтрольСвободныхОстатков_Перемещение()

	ЕстьХарактеристика  = мТабЧастьМетаданные.Реквизиты.Найти("ХарактеристикаНоменклатуры")  <> Неопределено;
	ЕстьСерия           = мТабЧастьМетаданные.Реквизиты.Найти("СерияНоменклатуры") <> Неопределено;
	ЕстьКачество        = мТабЧастьМетаданные.Реквизиты.Найти("Качество")          <> Неопределено;
	ЕстьКоэффициент     = мТабЧастьМетаданные.Реквизиты.Найти("Коэффициент")       <> Неопределено;
	
	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	ТекстЗапросаСписокНоменклатуры = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Номенклатура 
		|ИЗ
		|	Документ." + мИмяТаблицы + "
		|ГДЕ
		|	Ссылка = &ДокументСсылка";

	ТекстЗапросаДокументРезерва = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДокументРезерва
		|ИЗ
		|	Документ." + мИмяТаблицы + "
		|ГДЕ
		|	Ссылка = &ДокументСсылка";

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", мСтруктураШапкиДокумента.Ссылка);
	Запрос.УстановитьПараметр("ПустаяСерия"   , Справочники.СерииНоменклатуры.ПустаяСсылка());	
	Запрос.УстановитьПараметр("ПустойОрдер",    Документы.ПриходныйОрдерНаТовары.ПустаяСсылка()); 
	
	Запрос.УстановитьПараметр("СкладОтправитель", мСтруктураШапкиДокумента.СкладОтправитель); 
    МассивПустыхСсылок = ОбщегоНазначения.МассивПустыхЗначений(мТабЧастьМетаданные.Реквизиты.ДокументРезерва.Тип);
	Запрос.УстановитьПараметр("МассивПустыхЗаказов",		 МассивПустыхСсылок);

	ТекстЗапроса = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление                         КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,
	|	Неопределено              КАК СерияНоменклатуры,
	|	%ПОЛЕ_Док_Характеристика% КАК ХарактеристикаНоменклатуры,
	|	%ПОЛЕ_Док_Качество%       КАК Качество,
	|	&СкладОтправитель         КАК Склад,
	|	%ПОЛЕ_Док_Количество%     КАК ДокументКоличество,
	|	ЕСТЬNULL(МАКСИМУМ(Резервы.КоличествоОстаток), 0)       		КАК РезервыКоличество,
	|	ЕСТЬNULL(МАКСИМУМ(РезервыПоСделке.КоличествоОстаток), 0)	КАК РезервыПоСделкеКоличество,
	|	ЕСТЬNULL(МАКСИМУМ(КПолучению.КоличествоОстаток), 0)			КАК КПолучению,
	|	ЕСТЬNULL(МАКСИМУМ(Остатки.КоличествоОстаток), 0)            КАК ОстаткиКоличество,
	|	ЕСТЬNULL(МАКСИМУМ(КПередаче.КоличествоОстаток), 0)			КАК КПередачеКоличество
	|ИЗ 
	|	Документ." + мИмяТаблицы + " КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	(ВЫБРАТЬ
	|		ТоварыНаСкладахОстатки.Склад             КАК Склад,
	|		ТоварыНаСкладахОстатки.Номенклатура      КАК Номенклатура,
	|		// ПОЛЕ_Характеристика
	|		// ПОЛЕ_Качество
	|		ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыНаСкладах.Остатки(,
	|			Склад = &СкладОтправитель
	|			И Номенклатура В (%ВыборкаПоНоменклатуре%)) КАК ТоварыНаСкладахОстатки
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТоварыВРозницеОстатки.Склад              КАК Склад,
	|		ТоварыВРозницеОстатки.Номенклатура       КАК Номенклатура,
	|		// ПОЛЕ_Характеристика
	|		// ПОЛЕ_Качество
	|		ТоварыВРозницеОстатки.КоличествоОстаток  КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыВРознице.Остатки(,
	|			Склад = &СкладОтправитель
	|			И Номенклатура В (%ВыборкаПоНоменклатуре%)) КАК ТоварыВРозницеОстатки
	|	) КАК Остатки
	|ПО 
	|	Док.Номенклатура = Остатки.Номенклатура
	|   // СОЕДИНЕНИЕ_Характеристика_Остатки
	|   // СОЕДИНЕНИЕ_Качество_Остатки
	|
	//таблица товаров в резерве на складе (определяется для строк, которые списываются за счет свободного остатка)
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(,
	|		Склад = &СкладОтправитель
	|		И Номенклатура В (%ВыборкаПоНоменклатуре%)) КАК Резервы
	|ПО 
	|	Док.Номенклатура                = Резервы.Номенклатура
	|	И Док.ДокументРезерва В (&МассивПустыхЗаказов)
	|   // СОЕДИНЕНИЕ_Характеристика_Резервы
	|
	
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	(ВЫБРАТЬ ТЧ.Номенклатура
	|	//ПОЛЕ_ТЧ_Характеристика
	|	//количество, списываемое за счет резерва, не может превышать количество указанное в документе
	|	,ВЫБОР КОГДА Сумма(ТЧ.ДокументКоличество)<Сумма(ВремРезервы.КоличествоОстаток) ТОГДА
	|   	Сумма(ТЧ.ДокументКоличество)
	|	ИНАЧЕ Сумма(ВремРезервы.КоличествоОстаток)
	|	КОНЕЦ КАК КоличествоОстаток
	|	ИЗ
	|		//сгруппированная табличная часть документа с отбором строк которые списываются из резерва
	|		(ВЫБРАТЬ  
	|			Номенклатура, 
	|			ДокументРезерва,
	|			%ПОЛЕ_Количество% КАК ДокументКоличество
	|			//ПОЛЕ_Врем_Характеристика
	|		ИЗ 
	|			Документ." + мИмяТаблицы +"
	|		ГДЕ  Ссылка = &ДокументСсылка
	|			И ДокументРезерва НЕ В (&МассивПустыхЗаказов)
	|		СГРУППИРОВАТЬ ПО
	|			Номенклатура, 
	|			ДокументРезерва
	|			//ПОЛЕ_Врем_Характеристика
	|		) КАК ТЧ
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(, Склад = &СкладОтправитель И
	|			Номенклатура В (%ВыборкаПоНоменклатуре%)
	|			) КАК ВремРезервы
	|	ПО ТЧ.Номенклатура = ВремРезервы.Номенклатура 
	|		// СОЕДИНЕНИЕ_Характеристика_ВремРезервы
	|		И ВремРезервы.ДокументРезерва = ТЧ.ДокументРезерва
	|	СГРУППИРОВАТЬ ПО 
	|		ТЧ.Номенклатура 
	|		//ПОЛЕ_ТЧ_Характеристика
	|) КАК РезервыПоСделке
	|ПО 
	|Док.Номенклатура                 = РезервыПоСделке.Номенклатура
	|// СОЕДИНЕНИЕ_Характеристика_РезервПоСделке
	|И Док.ДокументРезерва НЕ В (&МассивПустыхЗаказов)

	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки(,
	|		Склад = &СкладОтправитель
	|		И Номенклатура В (%ВыборкаПоНоменклатуре%)) КАК КПередаче
	|ПО 
	|	Док.Номенклатура = КПередаче.Номенклатура
	|   // СОЕДИНЕНИЕ_Характеристика_КПередаче
	|   // СОЕДИНЕНИЕ_Качество_КПередаче
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыКПолучениюНаСклады.Остатки(,
	|			Склад = &СкладОтправитель
	|			И ДокументПолучения НЕ В (" + ТекстЗапросаДокументРезерва + ")
	|			И ДокументПолучения ССЫЛКА Документ.ПриходныйОрдерНаТовары
	|       	И НЕ ДокументПолучения.БезПраваПродажи
	|			И Номенклатура В (%ВыборкаПоНоменклатуре%)) КАК КПолучению
	|ПО 
	|	Док.Номенклатура = КПолучению.Номенклатура
	|   // СОЕДИНЕНИЕ_Характеристика_КПолучению
	|   // СОЕДИНЕНИЕ_Качество_КПолучению
	| И (Док.ДокументРезерва = &ПустойОрдер ИЛИ Не Док.ДокументРезерва ССЫЛКА Документ.ПриходныйОрдерНаТовары)
	|
	|ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Док.Номенклатура,
	|	%ПОЛЕ_Док_Характеристика%,
	|	%ПОЛЕ_Док_Качество%,
	|	&СкладОтправитель
	|
	|ИМЕЮЩИЕ ЕСТЬNULL(МАКСИМУМ(Остатки.КоличествоОстаток), 0)
	|	- ЕСТЬNULL(МАКСИМУМ(Резервы.КоличествоОстаток), 0)
	|	- ЕСТЬNULL(МАКСИМУМ(КПередаче.КоличествоОстаток), 0)
	|	- ЕСТЬNULL(МАКСИМУМ(КПолучению.КоличествоОстаток), 0)
	|   + ЕСТЬNULL(МАКСИМУМ(РезервыПоСделке.КоличествоОстаток), 0) < %ПОЛЕ_Док_Количество%
	|
	|ДЛЯ ИЗМЕНЕНИЯ
	|	РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы"
	+ ?(ЕстьСерия, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление                         КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,
	|	Док.СерияНоменклатуры	  КАК СерияНоменклатуры,
	|	%ПОЛЕ_Док_Характеристика% КАК ХарактеристикаНоменклатуры,
	|	%ПОЛЕ_Док_Качество%       КАК Качество,
	|	&СкладОтправитель         КАК Склад,
	|	%ПОЛЕ_Док_Количество%     КАК ДокументКоличество,
	|	0                                                      КАК РезервыКоличество,
	|	0                                                      КАК РезервыПоСделкеКоличество,
	|	ЕСТЬNULL(МАКСИМУМ(КПолучению.КоличествоОстаток), 0)    КАК КПолучению,
	|	ЕСТЬNULL(МАКСИМУМ(Остатки.КоличествоОстаток), 0)       КАК ОстаткиКоличество,
	|	ЕСТЬNULL(МАКСИМУМ(КПередаче.КоличествоОстаток), 0)	   КАК КПередачеКоличество
	|ИЗ 
	|	Документ." + мИмяТаблицы + " КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	(ВЫБРАТЬ
	|		ТоварыНаСкладахОстатки.Склад             КАК Склад,
	|		ТоварыНаСкладахОстатки.Номенклатура      КАК Номенклатура,
	|		ТоварыНаСкладахОстатки.СерияНоменклатуры КАК СерияНоменклатуры,
	|		// ПОЛЕ_Характеристика
	|		// ПОЛЕ_Качество
	|		ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыНаСкладах.Остатки(,
	|			Склад = &СкладОтправитель
	|			И Номенклатура В (%ВыборкаПоНоменклатуре%)) КАК ТоварыНаСкладахОстатки
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТоварыВРозницеОстатки.Склад             КАК Склад,
	|		ТоварыВРозницеОстатки.Номенклатура      КАК Номенклатура,
	|		ТоварыВРозницеОстатки.СерияНоменклатуры КАК СерияНоменклатуры,
	|		// ПОЛЕ_Характеристика
	|		// ПОЛЕ_Качество
	|		ТоварыВРозницеОстатки.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыВРознице.Остатки(,
	|			Склад = &СкладОтправитель
	|			И Номенклатура В (%ВыборкаПоНоменклатуре%)) КАК ТоварыВРозницеОстатки
	|	) КАК Остатки
	|ПО 
	|	Док.Номенклатура        = Остатки.Номенклатура
	|   И Док.СерияНоменклатуры = Остатки.СерияНоменклатуры
	|	// СОЕДИНЕНИЕ_Характеристика_Остатки
	|	// СОЕДИНЕНИЕ_Качество_Остатки
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки(,
	|		Склад = &СкладОтправитель
	|		И Номенклатура В (%ВыборкаПоНоменклатуре%)) КАК КПередаче
	|ПО 
	|	Док.Номенклатура                = КПередаче.Номенклатура
	| 	И Док.СерияНоменклатуры         = КПередаче.СерияНоменклатуры
	| 	// СОЕДИНЕНИЕ_Характеристика_КПередаче
	|	// СОЕДИНЕНИЕ_Качество_КПередаче
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыКПолучениюНаСклады.Остатки(,
	|			Склад = &СкладОтправитель
	|			И ДокументПолучения НЕ В (" + ТекстЗапросаДокументРезерва + ")
	|			И ДокументПолучения ССЫЛКА Документ.ПриходныйОрдерНаТовары
	|       	И НЕ ДокументПолучения.БезПраваПродажи
	|		И Номенклатура В (%ВыборкаПоНоменклатуре%)) КАК КПолучению
	|ПО 
	|	Док.Номенклатура                = КПолучению.Номенклатура
	| 	И Док.СерияНоменклатуры         = КПолучению.СерияНоменклатуры
	|	// СОЕДИНЕНИЕ_Характеристика_КПолучению
	|	// СОЕДИНЕНИЕ_Качество_КПолучению
	|	И (Док.ДокументРезерва          = &ПустойОрдер ИЛИ Не Док.ДокументРезерва ССЫЛКА Документ.ПриходныйОрдерНаТовары)
	|
	|ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка
	|	И Док.СерияНоменклатуры <> &ПустаяСерия
	|
	|СГРУППИРОВАТЬ ПО
	|	Док.Номенклатура,
	|	Док.СерияНоменклатуры,
	|	%ПОЛЕ_Док_Характеристика%,
	|	%ПОЛЕ_Док_Качество%,
	|	&СкладОтправитель
	|
	|ИМЕЮЩИЕ
	|	ЕСТЬNULL(МАКСИМУМ(Остатки.КоличествоОстаток), 0)
	|	- ЕСТЬNULL(МАКСИМУМ(КПередаче.КоличествоОстаток), 0)
	|	- ЕСТЬNULL(МАКСИМУМ(КПолучению.КоличествоОстаток), 0) < %ПОЛЕ_Док_Количество%
	|
	|ДЛЯ ИЗМЕНЕНИЯ
	|	РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|", "");

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ВыборкаПоНоменклатуре%", ТекстЗапросаСписокНоменклатуры);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// ПОЛЕ_Характеристика", ?(ЕстьХарактеристика, "ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,", ""));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// ПОЛЕ_Качество",       ?(ЕстьКачество,       "Качество                   КАК Качество,",                   ""));
	
	Если ЕстьХарактеристика Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Док_Характеристика%",                   "Док.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПОЛЕ_Врем_Характеристика",                   	",ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПОЛЕ_ТЧ_Характеристика",                   	",ТЧ.ХарактеристикаНоменклатуры");

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_ВремРезервы",        "И ТЧ.ХарактеристикаНоменклатуры = ВремРезервы.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_Остатки",        "И Док.ХарактеристикаНоменклатуры = Остатки.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_Резервы",        "И Док.ХарактеристикаНоменклатуры = Резервы.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_РезервПоСделке", "И Док.ХарактеристикаНоменклатуры = РезервыПоСделке.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_КПередаче",      "И Док.ХарактеристикаНоменклатуры = КПередаче.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_КПолучению",     "И Док.ХарактеристикаНоменклатуры = КПолучению.ХарактеристикаНоменклатуры");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Док_Характеристика%",                   "Неопределено");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_Остатки",        "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_Резервы",        "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_РезервПоСделке", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_КПередаче",      "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Характеристика_КПолучению",     "");
	КонецЕсли;
	
	Если ЕстьКоэффициент Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Док_Количество%", "СУММА(ВЫРАЗИТЬ(Док.Количество * Док.Коэффициент / Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК ЧИСЛО(15,3)))");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Количество%", "СУММА(ВЫРАЗИТЬ(Количество * Коэффициент / Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК ЧИСЛО(15,3)))");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Док_Количество%", "СУММА(Док.Количество)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Количество%", "СУММА(Количество)");
	КонецЕсли;
	
	Если ЕстьКачество Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Док_Качество%",               "Док.Качество");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Качество_Остатки",    "И Док.Качество = Остатки.Качество");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Качество_КПередаче",  "И Док.Качество = КПередаче.Качество");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Качество_КПолучению", "И Док.Качество = КПолучению.Качество");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЕ_Док_Качество%",               "Неопределено");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Качество_Остатки",    "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Качество_КПередаче",  "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// СОЕДИНЕНИЕ_Качество_КПолучению", "");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СвободныйОстаток = Выборка.ОстаткиКоличество - Выборка.КПередачеКоличество - Выборка.КПолучению
		   - Выборка.РезервыКоличество + Выборка.РезервыПоСделкеКоличество;

		СтрокаСообщения  = "Свободного остатка для резервирования " + 
			УправлениеЗапасами.ПредставлениеНоменклатуры(
				Выборка.НоменклатураПредставление, 
				?(ЕстьХарактеристика, Выборка.ХарактеристикаНоменклатуры, ""),
				?(ЕстьСерия, Выборка.СерияНоменклатуры, "")) +
		" на складе """ + СокрЛП(Выборка.Склад) + """" +
		?(ЕстьКачество, " с качеством " + Выборка.Качество, "") + " недостаточно.";

		УправлениеЗапасами.ОшибкаНетОстатка(СтрокаСообщения, СвободныйОстаток, Выборка.ДокументКоличество,
			Выборка.ЕдиницаХраненияОстатковПредставление, мОтказ, мЗаголовок);

	КонецЦикла;

КонецПроцедуры // КонтрольСвободныхОстатков_Перемещение()

// Процедура контролирует остаток по данному регистру по переданному документу
// и его табличной части. В случае недостатка товаров выставляется флаг отказа и 
// выдается сообщение.
//
// Параметры:
//  ДокументОбъект          - объект проводимого документа, 
//  ИмяТабличнойЧасти       - строка, имя табличной части, которая проводится по регистру, 
//  СтруктураШапкиДокумента - структура, содержащая значения "через точку" ссылочных реквизитов по шапке документа,
//  Отказ                   - флаг отказа в проведении,
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура КонтрольОстатков(ДокументОбъект, ИмяТабЧасти, СтруктураШапкиДокумента, Отказ, Заголовок) Экспорт
	
	Если ДокументОбъект[ИмяТабЧасти].Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если УправлениеДопПравамиПользователей.РазрешеноПревышениеОстаткаТоваровНаСкладе() Тогда
		Возврат;
	КонецЕсли;
	
	мДокМетаданные            = ДокументОбъект.Метаданные();
	мТабЧастьМетаданные       = мДокМетаданные.ТабличныеЧасти[ИмяТабЧасти];
	мИмяДокумента             = мДокМетаданные.Имя;
	мИмяТабЧасти              = ИмяТабЧасти;
	мИмяТаблицы               = мИмяДокумента + "." + мИмяТабЧасти;
	мСтруктураШапкиДокумента  = СтруктураШапкиДокумента;
	мЗаголовок                = Заголовок;
	мОтказ                    = Отказ;
	
	Если мИмяДокумента = "РеализацияТоваровУслуг" ИЛИ мИмяДокумента = "ВозвратТоваровПоставщику" Тогда
		КонтрольСвободныхОстатков_Реализация();
	ИначеЕсли мИмяДокумента = "ПеремещениеТоваров" Тогда
		КонтрольСвободныхОстатков_Перемещение();
	ИначеЕсли мИмяДокумента = "СписаниеТоваров" ИЛИ мИмяДокумента = "РасходныйОрдерНаТовары" Тогда
		КонтрольОстатков_Остатки();
	Иначе
		Сообщить("Для документов вида """ + мИмяДокумента + """ не предусмотрен вызов процедуры 'Контроль остатков' модуля регистра '" + Метаданные().Представление() + "'", СтатусСообщения.ОченьВажное);
	КонецЕсли;
	
	Заголовок = мЗаголовок;
	Отказ     = мОтказ;

КонецПроцедуры // КонтрольОстатков()

