
Перем мРегламентноеЗадание Экспорт;
Перем СохраненныеНастройкиПостроителя Экспорт;


///////////////////////////////////////////////////////////////////////////////
Функция НайтиРеглЗаданиеПоПараметру(УникальныйНомерЗадания)
	
	Попытка
		
		Если НЕ ПустаяСтрока(УникальныйНомерЗадания) Тогда
			
			УникальныйИдентификаторЗадания = Новый УникальныйИдентификатор(УникальныйНомерЗадания);
			ТекущееРегламентноеЗадание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(УникальныйИдентификаторЗадания);
			
		Иначе
			
			ТекущееРегламентноеЗадание = Неопределено;
			
		КонецЕсли;
		
	Исключение
		
		ТекущееРегламентноеЗадание = Неопределено;
		
	КонецПопытки;
	
	Возврат ТекущееРегламентноеЗадание;
	
КонецФункции

Функция ПолучитьОбъектРегламентногоЗадания() Экспорт
	
	Задание = НайтиРеглЗаданиеПоПараметру(РегламентноеЗадание);
	
	Возврат Задание;
	
КонецФункции

#Если Клиент Тогда

Процедура ОбработчикКаталогОткрытие(Элемент, СтандартнаяОбработка) Экспорт
	
	ПроцедурыОбменаДаннымиКлиент.ОбработчикОткрытиеДляФайла(Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

// при изменении каталога
Процедура ОбработчикПриИзмененииКаталога(Элемент) Экспорт
	
	Элемент.Значение = СокрЛП(Элемент.Значение);
	
КонецПроцедуры

// событие при нажатии на кнопку выбора у каталога 
Функция ОбработчикКаталогНачалоВыбора(Элемент, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	РезультатВыбора = РаботаСФайлами.ВыбратьКаталог(Элемент.Значение);
	
	Возврат РезультатВыбора;
	
КонецФункции

#КонецЕсли

Процедура ПроверитьСобственныйКодУзлаУПриемника(ПодключениеКПриемнику, ИмяПланаОбмена, КодЭлемента) Экспорт
	
	МенеджерПланаОбменаПриемника = ПодключениеКПриемнику.ПланыОбмена[ИмяПланаОбмена];
	
	СобственныйУзел = МенеджерПланаОбменаПриемника.ЭтотУзел();
	
	Если СобственныйУзел.Код = КодЭлемента Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементУзелПриемника = МенеджерПланаОбменаПриемника.НайтиПоКоду(КодЭлемента);
	
	Если ЭлементУзелПриемника.Пустая() Тогда 
		
		// узла с таким кодом (КодЭлемента) пока не создано в приемнике, создаем
		
		ОбъектУзла = СобственныйУзел.ПолучитьОбъект();
		ОбъектУзла.Код = КодЭлемента;
		
		Если ПустаяСтрока(ОбъектУзла.Наименование) Тогда
			
			ОбъектУзла.Наименование	= "Эта информационная база";
			
		КонецЕсли;
		
		ОбъектУзла.Записать();
		
	Иначе
		
		ВызватьИсключение "В информационной базе приемнике уже настроен обмен данными с другой информационной базой. Проверьте номера кодов узлов плана обмена!";
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьНулевойНомерПринятогоСообщенияУУзлаОбмена(УзелПланаОбмена) Экспорт
	
	Если УзелПланаОбмена.НомерПринятого <> 0 Тогда
		
		УзелПланаОбмена.НомерПринятого = 0;
		УзелПланаОбмена.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьУстановленностьКодаУСобственногоУзла(ИмяПланаОбмена) Экспорт
	
	СобственныйУзел = ПланыОбмена[ИмяПланаОбмена].ЭтотУзел();
	
	Если ЗначениеЗаполнено(СобственныйУзел.Код) Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектУзла = СобственныйУзел.ПолучитьОбъект();
	
	ОбъектУзла.УстановитьНовыйКод();
	
	Если ПустаяСтрока(ОбъектУзла.Наименование) Тогда
		
		ОбъектУзла.Наименование	= "Эта информационная база";
		
	КонецЕсли;
	
	ОбъектУзла.Записать();
	
КонецПроцедуры

Функция СформироватьУникальноеНоименованиеНастройки(ТекущееЗначениеНаименования) Экспорт
	
	ТекущееЗначениеКода = Сред(ТекущееЗначениеНаименования, 1, 45);
	
	Если ПустаяСтрока(ТекущееЗначениеКода) Тогда
		Возврат "";
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	Максимум(Спр.Наименование) КАК Наименование
	               |ИЗ
	               |	Справочник.НастройкиОбменаССайтом КАК Спр
	               |ГДЕ
	               |	Спр.Наименование Подобно """ + СокрЛП(ТекущееЗначениеНаименования) + "%"" ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ТекущееЗначениеКода;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Выборка.Следующий();
	
	МаксимальныйКод = СокрЛП(Выборка.Наименование);
	
	МаксимальныйКод = СтрЗаменить(Строка(МаксимальныйКод), Символы.НПП, "");
	
	Если ПустаяСтрока(МаксимальныйКод) Тогда
		Возврат ТекущееЗначениеКода;
	КонецЕсли;
	
	//с конца строки ищем цифры
	ИтоговоеЧисло = "";
	ДлинаСтрокиМаксимальногоКода = СтрДлина(МаксимальныйКод);
	ТекущаяПозиция = ДлинаСтрокиМаксимальногоКода;
	ЭтоЦифры = Истина;
	
	Пока ЭтоЦифры 
		И ТекущаяПозиция > 0 Цикл
		
		ТекущийСимвол = Сред(МаксимальныйКод, ТекущаяПозиция, 1);
		ЭтоЦифры = (ТекущийСимвол >= "0") И (ТекущийСимвол <= "9");
		
		Если ЭтоЦифры Тогда
			ИтоговоеЧисло = ИтоговоеЧисло + ТекущийСимвол;
		Иначе
			Прервать;
		КонецЕсли;
		
		ТекущаяПозиция = ТекущаяПозиция - 1;
		
	КонецЦикла;
	
	ПозицияНачалаЦифр = ТекущаяПозиция + 1;
	
	Если ПустаяСтрока(ИтоговоеЧисло) Тогда
		
		Возврат МаксимальныйКод + "00001";
		
	Иначе
		
		ОбщийПрефикс = Сред(МаксимальныйКод, 1, ПозицияНачалаЦифр - 1);
		ДобавочноеЧисло = Число(Сред(МаксимальныйКод, ПозицияНачалаЦифр)) + 1;
		
	КонецЕсли;
	
	Возврат ОбщийПрефикс + Прав("0000" + СтрЗаменить(Строка(ДобавочноеЧисло), Символы.НПП, ""), 5);
	
КонецФункции

Функция ВсеНастройкиЗаданыХотиимИхПрименить(НастройкаОбмена) Экспорт
	
	ТаблицаОтбора  = УправлениеОтчетами.ПолучитьКопиюОтбораВТЗ(ПостроительОтчета.Отбор);
	ТаблицаПорядка = ПроцедурыОбменаССайтом.ПолучитьКопиюПорядкаВТЗ(ПостроительОтчета.Порядок);
	
	СохраненныеНастройкиПостроителя = Новый ХранилищеЗначения(Новый Структура("ТаблицаОтбора, ТаблицаПорядка", ТаблицаОтбора, ТаблицаПорядка));
	
	ПроцедурыОбменаССайтом.СохранитьТаблицуКаталогов(СохраненнаяТаблицаКаталогов, ТаблицаКаталогов);
	
	НачатьТранзакцию();
	
	Попытка
		
		// 1. создаем узел обмена
		
		// надо еще проверить что бы код у собственного узла был установлен
		ПроверитьУстановленностьКодаУСобственногоУзла("ОбменССайтомТоварами");
		ПроверитьУстановленностьКодаУСобственногоУзла("ОбменССайтомЗаказами");
		
		Если ВыгружатьТолькоИзменения Тогда
			
			Если ОбменТоварами 
				И Не ЗначениеЗаполнено(УзелОбменаТоварами) Тогда
				
				УзелПланаОбмена = ПланыОбмена.ОбменССайтомТоварами.СоздатьУзел();
				УзелПланаОбмена.Наименование = "Обмен товарами с WEB - сайтом";
				УзелПланаОбмена.УстановитьНовыйКод();
				УзелПланаОбмена.Записать();
				
				УзелОбменаТоварами = УзелПланаОбмена.Ссылка;
				
			КонецЕсли;
			
			Если ОбменЗаказами 
				И Не ЗначениеЗаполнено(УзелОбменаЗаказами) Тогда
				
				УзелПланаОбмена = ПланыОбмена.ОбменССайтомЗаказами.СоздатьУзел();
				УзелПланаОбмена.Наименование = "Обмен заказами с WEB - сайтом";
				УзелПланаОбмена.УстановитьНовыйКод();
				УзелПланаОбмена.Записать();
				
				УзелОбменаЗаказами = УзелПланаОбмена.Ссылка;
				
			КонецЕсли;
			
		КонецЕсли;
		
		
		// 2. Создаем настройку обмена данными
		
		НастройкаОбмена = Справочники.НастройкиОбменаССайтом.СоздатьЭлемент();
		
		ЗаполнитьЗначенияСвойств(НастройкаОбмена, ЭтотОбъект);
		
		Если НастройкаОбмена.ОбменТоварами И НастройкаОбмена.ОбменЗаказами Тогда
			
			НастройкаОбмена.Наименование = "Обмен с WEB - сайтом (Товары и Заказы)";
			НастройкаОбмена.Комментарий = "Обмен товарами и заказами с WEB - сайтом";
			
		ИначеЕсли НастройкаОбмена.ОбменТоварами Тогда
			
			НастройкаОбмена.Наименование = "Обмен с WEB - сайтом (Товары)";
			НастройкаОбмена.Комментарий = "Выгрузка товаров на WEB - сайт";
			
		Иначе
			
			НастройкаОбмена.Наименование = "Обмен с WEB - сайтом (Заказы)";
			НастройкаОбмена.Комментарий = "Обмен заказами с WEB - сайтом";
			
		КонецЕсли;
		
		НастройкаОбмена.Наименование = СформироватьУникальноеНоименованиеНастройки(НастройкаОбмена.Наименование);
		
		НастройкаОбмена.мРегламентноеЗадание = мРегламентноеЗадание;
		
		НастройкаОбмена.Записать();
		
		Если ВыгружатьТолькоИзменения Тогда
			ПроцедурыОбменаССАйтом.УстановитьФлагПринудительнойПолнойВыгрузки(НастройкаОбмена.Ссылка, Истина);
		КонецЕсли;
		
		Константы.КоэффициентПересчетаВесаТоваровВГраммыДляОбменаССайтом.Установить(КоэффициентПересчетаВесаТоваровВГраммыДляОбменаССайтом);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		СтрокаОшибки = ОписаниеОшибки();
		Сообщить("Ошибка при сохранении настроек обмена данными: " + СтрокаОшибки, СтатусСообщения.Важное);
		
		Возврат Ложь;
		
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

Функция СоздатьЭлементПланаОбменаВИнформационнойбазеПодключения(ПодключениеКПриемнику, ИмяПланаОбмена, КодЭлемента, Наименование) Экспорт
	
	УзелПланаОбмена = ПодключениеКПриемнику.ПланыОбмена[ИмяПланаОбмена].НайтиПоКоду(КодЭлемента);
	
	Если УзелПланаОбмена <> Неопределено
		И НЕ УзелПланаОбмена.Пустая() Тогда
		
		Если УзелПланаОбмена.НомерПринятого <> 0 Тогда
			
			ЭлементПланаОбмена = УзелПланаОбмена.ПолучитьОбъект();
			ЭлементПланаОбмена.НомерПринятого = 0;
			ЭлементПланаОбмена.Записать();
			
		КонецЕсли;
		
		Возврат УзелПланаОбмена.Ссылка;
		
	КонецЕсли;
	
	УзелПланаОбмена = ПодключениеКПриемнику.ПланыОбмена[ИмяПланаОбмена].СоздатьУзел();
	УзелПланаОбмена.Наименование = Наименование;
	УзелПланаОбмена.Код = КодЭлемента;
	УзелПланаОбмена.Записать();
	
	Возврат УзелПланаОбмена.Ссылка;
	
КонецФункции

мРегламентноеЗадание = Неопределено;

