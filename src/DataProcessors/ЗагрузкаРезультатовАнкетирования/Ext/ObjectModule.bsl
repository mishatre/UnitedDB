////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем Фамилия;
Перем Имя;
Перем Отчество;
Перем ДатаРождения;
Перем ИНН;
Перем НаименованиеКонтрагента;
Перем СерияДокумента;
Перем ВидДокументаУдостоверяющегоЛичность;
Перем НомерДокумента;
Перем ДатаВыдачиДокумента;
Перем КемВыданДокумент;
Перем КодПодразделенияДокумента;
Перем Гражданство;
Перем СемейноеПоложение;
Перем ОтношениеКВоинскойОбязанности;
Перем ОтношениеКВоинскомуУчету;
Перем Годность;
Перем Звание;
Перем НаличиеМобпредписания;
Перем Военкомат;
Перем ВУС;
Перем КатегорияЗапаса;
Перем Состав;
Перем НомерКомандыПартии;
Перем КонтрагентДляЗаписи;

Перем ЕстьФизическиеЛица;
Перем ЕстьКонтрагенты;
Перем ЕстьКонтактныеЛица;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗагрузитьОпросы(ДеревоАнкет) Экспорт

	ТекущийПользователь = глЗначениеПеременной("глТекущийПользователь");
	
	Если (ТипЗнч(ДеревоАнкет) = Тип("ДеревоЗначений")) 
	 ИЛИ (ТипЗнч(ДеревоАнкет) = Тип("СтрокаДереваЗначений")) Тогда
	 
		// загрузка файлов из дерева значений
		ФормаПрогрессора = ПолучитьОбщуюФорму("ХодВыполненияОбработкиДанных");
		
		Если ФормаПрогрессора.Открыта() Тогда
			
			ФормаПрогрессора.Закрыть();
			
		КонецЕсли;
		
		ФормаПрогрессора.Значение = 0;
		
		ФормаПрогрессора.МаксимальноеЗначение = ДеревоАнкет.Строки.Количество();
		ФормаПрогрессора.Открыть();
		ТекущийОпрос = 0;
		
		Для Каждого СтрокаДерева Из ДеревоАнкет.Строки Цикл  // загружаем из каталога
			
			ФормаПрогрессора.Значение = ФормаПрогрессора.Значение + 1;
			
			Если НЕ СтрокаДерева.ЗагружатьВСправочник И НЕ СтрокаДерева.ЗагружатьОпрос Тогда
				Продолжить;
			КонецЕсли;
			
			ТекущийОпрос = ТекущийОпрос + 1;
			ИмяФайла     = СтрокаДерева.Родитель.ИмяФайла + "\" +СтрокаДерева.ИмяФайла;
			ИмяКаталога  = СтрокаДерева.Родитель.ИмяФайла;
			Каталог		 = ИмяКаталога;
			
			Для индФлага = 1 По 2 Цикл
				
				Если индФлага = 1 И СтрокаДерева.ЗагружатьВСправочник Тогда
					
					Файл = Новый ЧтениеXML();
					Файл.ОткрытьФайл(ИмяФайла);
					ОбъектДляЗагрузки	= СтрокаДерева.ОбъектЗагрузки;
					АнкетаИзФайла		= СтрокаДерева.Анкета;
					ДокРассылки			= ПолучитьДокРассылкиИзФайла(Файл);
					
					Если НЕ ЗначениеЗаполнено(АнкетаИзФайла) Тогда
						Продолжить;
					КонецЕсли;
					
					Если НЕ ЗначениеЗаполнено(ОбъектДляЗагрузки) Тогда
						
						Если ЕстьФизическиеЛица И АнкетаИзФайла.ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ФизическиеЛица тогда
							ДокОпроса = Справочники.ФизическиеЛица.СоздатьЭлемент();
							
						ИначеЕсли ЕстьКонтактныеЛица И АнкетаИзФайла.ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.КонтактныеЛица тогда
							ДокОпроса = Справочники.КонтактныеЛица.СоздатьЭлемент();
							
						ИначеЕсли ЕстьКонтрагенты И АнкетаИзФайла.ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.Контрагенты тогда
							ДокОпроса = Справочники.Контрагенты.СоздатьЭлемент();
							
						Иначе
							Сообщить("При загрузке файла " + СтрокаДерева.ИмяФайла + " произошла ошибка", СтатусСообщения.Внимание);
							Сообщить("В анкете " + АнкетаИзФайла + " отсутствует информация о виде справочника, в который следует загрузить файл", СтатусСообщения.ОченьВажное);
							Продолжить;
							
						КонецЕсли;
						
					Иначе
						// если загружаем в справочник и нашли объект загрузки
						ДокОпроса = ОбъектДляЗагрузки.ПолучитьОбъект();
						
					КонецЕсли;
					
					Если ПрочитатьФайл(ИмяФайла, ДокОпроса) Тогда
						ДокОпроса.Записать();
						СтрокаДерева.ОбъектЗагрузки = ДокОпроса.Ссылка;
						Сообщить("Загружена информация в объект: " + ДокОпроса);
					Иначе
						ОбщегоНазначения.СообщитьОбОшибке("Загрузка файла прервана.");
					КонецЕсли;
	
					Файл.Закрыть();
					
					#Если Клиент Тогда
					ОбработкаПрерыванияПользователя();
					#КонецЕсли
					
				ИначеЕсли индФлага = 2 И СтрокаДерева.ЗагружатьОпрос Тогда
					Файл = Новый ЧтениеXML();
					Файл.ОткрытьФайл(ИмяФайла);
					ОбъектДляЗагрузки	= СтрокаДерева.Опрос;
					Опрашиваемый		= СтрокаДерева.ОбъектЗагрузки;
					АнкетаИзФайла		= СтрокаДерева.Анкета;
					ДокРассылки			= ПолучитьДокРассылкиИзФайла(Файл);
					
					Если НЕ ЗначениеЗаполнено(АнкетаИзФайла) Тогда
						Продолжить;
					КонецЕсли;
					
					// если в справочник не загружаем
					Если НЕ ЗначениеЗаполнено(ОбъектДляЗагрузки) Тогда
						ДокОпроса = Документы.Опрос.СоздатьДокумент();
						
					Иначе
						ДокОпроса = ОбъектДляЗагрузки.ПолучитьОбъект();
						ДокОпроса.Дата				= '00000000';
						ДокОпроса.ОпрашиваемоеЛицо	= "";
						ДокОпроса.Комментарий		= "";
						ДокОпроса.ТиповаяАнкета		= "";
						ДокОпроса.Ответственный		= "";
						ДокОпроса.Рассылка			= "";
						ДокОпроса.Вопросы.Очистить();
						ДокОпроса.СоставнойОтвет.Очистить();
						
					КонецЕсли;
					
					Если ПрочитатьФайл(ИмяФайла, ДокОпроса) Тогда
						ДокОпроса.ОпрашиваемоеЛицо	= Опрашиваемый;
						ДокОпроса.Ответственный		= ТекущийПользователь;
						ДокОпроса.Рассылка			= ДокРассылки;
						ДокОпроса.Записать();
						Сообщить("Загружена информация в объект: " + ДокОпроса);
					Иначе
						ОбщегоНазначения.СообщитьОбОшибке("Загрузка файла прервана.");
					КонецЕсли;
					
					Файл.Закрыть();
					
					#Если Клиент Тогда
					ОбработкаПрерыванияПользователя();
					#КонецЕсли
					
					
				КонецЕсли; // индФлага
				
			КонецЦикла; // по индФлага
			
		КонецЦикла; // по строкам дерева
		
	ИначеЕсли ТипЗнч(ДеревоАнкет) = Тип("ТаблицаЗначений") Тогда
		
		Если ДеревоАнкет.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Корень			= ДеревоАнкет;
		ВсегоОпросов	= Корень.Количество();
		ТекущийОпрос	= 0;
		
		ФормаПрогрессора = ПолучитьОбщуюФорму("ХодВыполненияОбработкиДанных");
		
		Если ФормаПрогрессора.Открыта() Тогда
			ФормаПрогрессора.Закрыть();
		КонецЕсли; 
		
		ФормаПрогрессора.Значение = 0;
		
		Если (ТипЗнч(ДеревоАнкет) = Тип("СтрокаДереваЗначений")) Тогда
			ФормаПрогрессора.МаксимальноеЗначение = 1;
			
		Иначе
			ФормаПрогрессора.МаксимальноеЗначение = ДеревоАнкет.Количество();
			
		КонецЕсли;
		
		ФормаПрогрессора.Открыть();
		
		НачатьТранзакцию();
		Для Каждого СтрокаДерева Из Корень Цикл
			
			Если НЕ СтрокаДерева.ЗагружатьВСправочник И НЕ СтрокаДерева.ЗагружатьОпрос Тогда
				Продолжить;
			КонецЕсли;
			
			ТекущийОпрос	= ТекущийОпрос + 1;
			ИмяФайла		= ПолучитьИмяВременногоФайла();
			ИмяКаталога		= КаталогВременныхФайлов();
			Каталог			= ИмяКаталога;
			ПолноеИмя		= ИмяФайла;
			
			Для индФлага = 1 По 2 Цикл
				
				// загружаем в справочник
				Если индФлага = 1 И СтрокаДерева.ЗагружатьВСправочник Тогда
					
					Для Каждого ВложениеКонверта Из СтрокаДерева.КонвертЭП.Вложения Цикл
						
						ВложениеКонверта.Данные.Записать(ИмяФайла);
						Файл = Новый ЧтениеXML();
						Файл.ОткрытьФайл(ИмяФайла);
						ОбъектДляЗагрузки	= СтрокаДерева.ОбъектЗагрузки;
						АнкетаИзФайла		= СтрокаДерева.Анкета;
						ДокРассылки			= ПолучитьДокРассылкиИзФайла(Файл);
						
						Если НЕ ЗначениеЗаполнено(АнкетаИзФайла) Тогда
							Продолжить;
						КонецЕсли;
						
						Если НЕ ЗначениеЗаполнено(ОбъектДляЗагрузки) Тогда
							Если ЕстьФизическиеЛица И АнкетаИзФайла.ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ФизическиеЛица тогда
								ДокОпроса = Справочники.ФизическиеЛица.СоздатьЭлемент();
								
							ИначеЕсли ЕстьКонтактныеЛица И АнкетаИзФайла.ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.КонтактныеЛица тогда
								ДокОпроса = Справочники.КонтактныеЛица.СоздатьЭлемент();
								
							ИначеЕсли ЕстьКонтрагенты И АнкетаИзФайла.ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.Контрагенты тогда
								ДокОпроса = Справочники.Контрагенты.СоздатьЭлемент();
								
							КонецЕсли;
						Иначе
							// если загружаем в справочник и нашли объект загрузки
							ДокОпроса = ОбъектДляЗагрузки.ПолучитьОбъект();
							
						КонецЕсли;
						
						Если ПрочитатьФайл(ИмяФайла, ДокОпроса) Тогда
							ДокОпроса.Записать();
							СтрокаДерева.ОбъектЗагрузки = ДокОпроса.Ссылка;
							Сообщить("Загружена информация в объект: " + ДокОпроса);
						Иначе
							ОбщегоНазначения.СообщитьОбОшибке("Загрузка файла прервана.");
						КонецЕсли;
						
						Файл.Закрыть();
						
						#Если Клиент Тогда
						ОбработкаПрерыванияПользователя();
						#КонецЕсли
						
					КонецЦикла; // вложения
					
				ИначеЕсли индФлага = 2 И СтрокаДерева.ЗагружатьОпрос Тогда
					
					// загружаем в документ
					Для Каждого ВложениеКонверта Из СтрокаДерева.КонвертЭП.Вложения Цикл
						
						ВложениеКонверта.Данные.Записать(ИмяФайла);
						Файл = Новый ЧтениеXML();
						Файл.ОткрытьФайл(ИмяФайла);
						
						ОбъектДляЗагрузки	= СтрокаДерева.Опрос;
						Опрашиваемый		= СтрокаДерева.ОбъектЗагрузки;
						АнкетаИзФайла		= СтрокаДерева.Анкета;
						ДокРассылки			= ПолучитьДокРассылкиИзФайла(Файл);
							
						Если НЕ ЗначениеЗаполнено(АнкетаИзФайла) тогда
							Продолжить;
						КонецЕсли;
							
						// если в справочник не загружаем
						Если НЕ ЗначениеЗаполнено(ОбъектДляЗагрузки) Тогда
							ДокОпроса = Документы.Опрос.СоздатьДокумент();
								
						Иначе
							ДокОпроса = ОбъектДляЗагрузки.ПолучитьОбъект();
							ДокОпроса.Дата				= '00000000';
							ДокОпроса.ОпрашиваемоеЛицо	= "";
							ДокОпроса.Комментарий		= "";
							ДокОпроса.ТиповаяАнкета		= "";
							ДокОпроса.Ответственный		= "";
							ДокОпроса.Рассылка			= "";
							ДокОпроса.Вопросы.Очистить();
							ДокОпроса.СоставнойОтвет.Очистить();
								
						КонецЕсли;
							
						Если ПрочитатьФайл(ИмяФайла, ДокОпроса) Тогда
							ДокОпроса.ОпрашиваемоеЛицо = Опрашиваемый;
							ДокОпроса.Ответственный    = ТекущийПользователь;
							ДокОпроса.Рассылка 		   = ДокРассылки;
							ДокОпроса.Записать();
							Сообщить("Загружена информация в объект: " + ДокОпроса);
						Иначе
							ОбщегоНазначения.СообщитьОбОшибке("Загрузка файла прервана.");
						КонецЕсли;
						
						Файл.Закрыть();
						
						#Если Клиент Тогда
						ОбработкаПрерыванияПользователя();
						#КонецЕсли
						
					КонецЦикла;
					
				КонецЕсли; // индФлага
				
			КонецЦикла;
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	КонецЕсли;
	
	ФормаПрогрессора.Закрыть();

КонецПроцедуры

Процедура ПоискФайлов(Каталог, Корень, СмотретьПодКаталоги = Неопределено,  ФайлыПоАнкете = Ложь, АнкетаОтбораФайлы = Неопределено) Экспорт

	НайтиФайлы(ИмяКаталога, "*.*");
	СписокФайлов = НайтиФайлы(Каталог, "*.*");

	Если СписокФайлов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	#Если Клиент Тогда
	ОбработкаПрерыванияПользователя();
	#КонецЕсли

	Для Индекс = 0 По СписокФайлов.ВГраница() Цикл
		
		Файл = СписокФайлов[Индекс];
		
		Попытка
			Файл.ЭтоКаталог();
			
		Исключение
			Продолжить; // нет доступа к файлу
			
		КонецПопытки;
		
		Если Файл.ЭтоКаталог() Тогда
			
			Если (СмотретьПодКаталоги = Неопределено) ИЛИ (СмотретьПодКаталоги = ЛОЖЬ) Тогда
				Продолжить;
			КонецЕсли;
			
			Поддерево = Корень.Строки.Добавить();
			Поддерево["ИмяФайла"]     = Файл.ПолноеИмя;
			Поддерево["ФлагУдаления"] = "Каталог";
			
			ПоискФайлов(Файл.ПолноеИмя, Поддерево);
			
			Если Поддерево.Строки.Количество() = 0 Тогда
				Корень.Строки.Удалить(Поддерево)
			КонецЕсли;
			
		Иначе
			
			Если (Файл.Расширение <> ".rps") И (Файл.Расширение <> ".xml") Тогда
				Продолжить;
			КонецЕсли;
			
			ИмяВременногоФайла 	= "";
			ФайлИзВложения 		= Новый ЧтениеXML();
			ИмяВременногоФайла  = Файл.ПолноеИмя;
			ФайлИзВложения.ОткрытьФайл(ИмяВременногоФайла);
			
			ОбъектЗагрузки 	= НайтиОбъектДляЗагрузки(ФайлИзВложения);
			Анкета 			= ПолучитьАнкетуИзФайла(ФайлИзВложения);
			
			Если НЕ ЗначениеЗаполнено(Анкета) Тогда
				Продолжить;
			КонецЕсли;
			
			Если ФайлыПоАнкете И Анкета <> АнкетаОтбораФайлы Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаФайла = Корень.Строки.Добавить();
			
			СтрокаФайла["ИмяФайла"]     = Файл.Имя;
			СтрокаФайла["ФлагУдаления"] = Ложь;
			
			ДатаОпроса = ПолучитьДатуФормированияАнкеты(ФайлИзВложения);
			
			Если ОбъектЗагрузки = Неопределено Тогда
				// если объект загрузки найти по ИдОпрашиваемого найти не удалось, тогда пробуем его найти
				// по ФИО и дате рождения, если это физлицо(конт. лицо), либо по ИНН, если это контрагент
				ФайлИзВложения.ОткрытьФайл(ИмяВременногоФайла);
				ОбъектЗагрузки = НайтиОбъектПоАнкетнымДанным(ФайлИзВложения, Анкета);
			КонецЕсли;
			
			СтрокаФайла["Анкета"] = Анкета;
			
			// ищем документ опрос
			ДокОпрос = НайтиДокументОпрос(ДатаОпроса, Анкета);
			СтрокаФайла["Опрос"]  	= ДокОпрос;
			
			Если НЕ ЗначениеЗаполнено(ОбъектЗагрузки) И ЗначениеЗаполнено(ДокОпрос) Тогда
				ОбъектЗагрузки = ДокОпрос.ОпрашиваемоеЛицо;
			КонецЕсли;
			
			СтрокаФайла["ОбъектЗагрузки"] = ОбъектЗагрузки;
			
			Если Анкета.ЗагружатьОбъекты Тогда
				
				Если НЕ ЗначениеЗаполнено(ОбъектЗагрузки) Тогда
					СтрокаФайла["ЗагружатьВСправочник"] = Истина;
				КонецЕсли;
				
			Иначе
				
				Если НЕ ЗначениеЗаполнено(ДокОпрос) Тогда
					СтрокаФайла["ЗагружатьОпрос"] = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			ФайлИзВложения.Закрыть();
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьXMLФайлИзВложения(Вложение, ИмяВременногоФайла) Экспорт
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	Вложение.Данные.Записать(ИмяВременногоФайла);
	XMLФайл = Новый ЧтениеXML();
	XMLФайл.ОткрытьФайл(ИмяВременногоФайла);
	
	Возврат XMLФайл;
	
КонецФункции

Функция ПолучитьАнкетуИзФайла(ИсточникXMLФайл) Экспорт
	
	Пока ИсточникXMLФайл.Имя <> "РезультатОпроса" Цикл
		
		Если НЕ ИсточникXMLФайл.Прочитать() Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	IDАнкеты = ИсточникXMLФайл.ПолучитьАтрибут("ИдАнкеты");
	
	Попытка
		Анкета = Справочники.ТиповыеАнкеты.ПолучитьСсылку(Новый УникальныйИдентификатор(IDАнкеты));
		Возврат Анкета;
		
	Исключение
		Возврат Неопределено;
		
	КонецПопытки;
	
КонецФункции

Функция ПолучитьДатуФормированияАнкеты(ИсточникXMLФайл) Экспорт
	
	Пока ИсточникXMLФайл.Имя <> "РезультатОпроса" Цикл
		
		Если НЕ ИсточникXMLФайл.Прочитать() Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Попытка
		ДатаАнкеты = XMLЗначение(Тип("Дата"), ИсточникXMLФайл.ПолучитьАтрибут("ДатаЗаполненияАнкеты"));
		
	Исключение
		ДатаАнкеты = ОбщегоНазначения.ПолучитьРабочуюДату();
		
	КонецПопытки;
	
	Возврат ДатаАнкеты;
	
КонецФункции

Функция НайтиОбъектПоАнкетнымДанным(ИсточникXMLФайл, Анкета) Экспорт 
	
	СтруктураДанныхДляПоиска = Новый Структура("ВидСправочника, ИдФ, ИдИ, ИдО, ИдДР, ИдИНН");
	
	Если Анкета = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// в общем случае в анкете может не быть никакой информации о том, какого вида должно быть опрашиваемое лицо
	// значит эту информацию будем добывать на основании вопросов, содержащихся в анкете
	Если ЕстьФизическиеЛица ИЛИ ЕстьКонтактныеЛица Тогда
		ИдФамилия 					= Строка(ПланыВидовХарактеристик.ВопросыДляАнкетирования.Фамилия.УникальныйИдентификатор());
		ИдИмя 						= Строка(ПланыВидовХарактеристик.ВопросыДляАнкетирования.Имя.УникальныйИдентификатор());
		ИдОтчество 					= Строка(ПланыВидовХарактеристик.ВопросыДляАнкетирования.Отчество.УникальныйИдентификатор());
		ИдДатаРождения 				= Строка(ПланыВидовХарактеристик.ВопросыДляАнкетирования.ДатаРождения.УникальныйИдентификатор());
	КонецЕсли;
	
	Если ЕстьКонтрагенты тогда
		ИдНаименованиеКонтрагента 	= Строка(ПланыВидовХарактеристик.ВопросыДляАнкетирования.НаименованиеКонтрагента.УникальныйИдентификатор());
	КонецЕсли;
	
	Фамилия 				= "";
	Имя 					= "";
	Отчество 				= "";
	ДатаРождения 			= "";
	НаименованиеКонтрагента = "";
	
	Если ЕстьФизическиеЛица И Анкета.ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ФизическиеЛица Тогда
		
		Пока ИсточникXMLФайл.Прочитать() Цикл
			
			Если ИсточникXMLФайл.Имя = "Вопрос" и ИсточникXMLФайл.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				Ид 			= ИсточникXMLФайл.ПолучитьАтрибут("Ид");
				
				Пока ИсточникXMLФайл.ТипУзла <> ТипУзлаXML.КонецЭлемента ИЛИ ИсточникXMLФайл.Имя <> "Вопрос" Цикл
					
					ИсточникXMLФайл.Прочитать();
					
					Если ИсточникXMLФайл.Имя = "Значение" Тогда
						ИсточникXMLФайл.Прочитать();
						Значение	= ИсточникXMLФайл.Значение;
						
						Если Ид = ИдФамилия Тогда
							Фамилия 	= Значение;
							ИдФамилия 	= "";
							
						ИначеЕсли Ид = ИдИмя Тогда
							Имя 	= Значение;
							ИдИмя 	= "";
							
						ИначеЕсли Ид = ИдОтчество Тогда
							Отчество 	= Значение;
							ИдОтчество 	= "";
							
						ИначеЕсли Ид = ИдДатаРождения Тогда
							Попытка
								ДатаРождения = XMLЗначение(Тип("Дата"), Значение);
								
							Исключение
								ДатаРождения = '00000000';
								
							КонецПопытки;
							
							ИдДатаРождения = "";
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Фамилия)
			   И ЗначениеЗаполнено(Имя)
			   И ЗначениеЗаполнено(Отчество)
			   И ЗначениеЗаполнено(ДатаРождения) Тогда
			   
				ЗапросПоФизлицу = Новый Запрос();
				
				ЗапросПоФизлицу.Текст = "ВЫБРАТЬ
				|	ФизическиеЛица.Ссылка КАК Физлицо
				|ИЗ
				|	Справочник.ФизическиеЛица КАК ФизическиеЛица
				|
				|ГДЕ
				|	ФизическиеЛица.Наименование = &ФИО И
				|	ФизическиеЛица.ДатаРождения = &ДатаРождения";
				
				ЗапросПоФизлицу.УстановитьПараметр("ФИО",			Фамилия + " " + Имя + " " + Отчество);
				ЗапросПоФизлицу.УстановитьПараметр("ДатаРождения",	ДатаРождения);
				
				ВыборкаЗапроса = ЗапросПоФизлицу.Выполнить().Выбрать();
				ВыборкаЗапроса.Следующий();
				
				ОбъектВозврата = ВыборкаЗапроса.Физлицо;
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ЕстьКонтрагенты  И Анкета.ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.Контрагенты Тогда
		
		Пока ИсточникXMLФайл.Прочитать() Цикл
			
			Если ИсточникXMLФайл.Имя = "Вопрос" и ИсточникXMLФайл.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				
				Ид 	= ИсточникXMLФайл.ПолучитьАтрибут("Ид");
				
				Пока НЕ(ИсточникXMLФайл.ТипУзла = ТипУзлаXML.КонецЭлемента и ИсточникXMLФайл.Имя = "Вопрос") Цикл
					
					ИсточникXMLФайл.Прочитать();
					
					Если ИсточникXMLФайл.Имя = "Значение" Тогда
						ИсточникXMLФайл.Прочитать();
						Значение	= ИсточникXMLФайл.Значение;
						
						Если Ид = ИдНаименованиеКонтрагента И НЕ ЗначениеЗаполнено(НаименованиеКонтрагента) Тогда
							НаименованиеКонтрагента = Значение;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(НаименованиеКонтрагента) Тогда
				ЗапросПоКонтрагенту = Новый Запрос();
				
				ЗапросПоКонтрагенту.Текст = "ВЫБРАТЬ
				|	Контрагенты.Ссылка КАК Контрагент
				|ИЗ
				|	Справочник.Контрагенты КАК Контрагенты
				|
				|ГДЕ
				|	Контрагенты.Наименование = &Наименование";
				
				ЗапросПоКонтрагенту.УстановитьПараметр("Наименование", НаименованиеКонтрагента);
				
				ВыборкаЗапроса = ЗапросПоКонтрагенту.Выполнить().Выбрать();
				ВыборкаЗапроса.Следующий();
				
				ОбъектВозврата = ВыборкаЗапроса.Контрагент;
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ЕстьКонтактныеЛица И Анкета.ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.КонтактныеЛица Тогда
		
		Пока ИсточникXMLФайл.Прочитать() Цикл
			
			Если ИсточникXMLФайл.Имя = "Вопрос" и ИсточникXMLФайл.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				Ид 			= ИсточникXMLФайл.ПолучитьАтрибут("Ид");
				
				Пока ИсточникXMLФайл.ТипУзла <> ТипУзлаXML.КонецЭлемента ИЛИ ИсточникXMLФайл.Имя <> "Вопрос" Цикл
					
					ИсточникXMLФайл.Прочитать();
					
					Если ИсточникXMLФайл.Имя = "Значение" Тогда
						ИсточникXMLФайл.Прочитать();
						Значение	= ИсточникXMLФайл.Значение;
						
						Если Ид = ИдФамилия Тогда
							Фамилия 	= Значение;
							ИдФамилия 	= "";
							
						ИначеЕсли Ид = ИдИмя Тогда
							Имя 	= Значение;
							ИдИмя 	= "";
							
						ИначеЕсли Ид = ИдОтчество Тогда
							Отчество 	= Значение;
							ИдОтчество 	= "";
							
						ИначеЕсли Ид = ИдДатаРождения Тогда
							Попытка
								ДатаРождения = XMLЗначение(Тип("Дата"), Значение);
								
							Исключение
								ДатаРождения = '00000000';
								
							КонецПопытки;
							
							ИдДатаРождения 	= "";
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Фамилия)
			   И ЗначениеЗаполнено(Имя)
			   И ЗначениеЗаполнено(Отчество)
			   И ЗначениеЗаполнено(ДатаРождения) Тогда
			   
				ЗапросПоКЛ = Новый Запрос();
				
				ЗапросПоКЛ.Текст = "ВЫБРАТЬ
				|	КЛ.Ссылка КАК КонтактноеЛицо
				|ИЗ
				|	Справочник.КонтактныеЛица КАК КЛ
				|
				|ГДЕ
				|	КЛ.Наименование = &ФИО И
				|	КЛ.ДатаРождения = &ДатаРождения";
				
				ЗапросПоКЛ.УстановитьПараметр("ФИО", 		  Фамилия + " " + Имя + " " + Отчество);
				ЗапросПоКЛ.УстановитьПараметр("ДатаРождения", ДатаРождения);
				
				ВыборкаЗапроса = ЗапросПоКЛ.Выполнить().Выбрать();
				ВыборкаЗапроса.Следующий();
				
				ОбъектВозврата = ВыборкаЗапроса.КонтактноеЛицо;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ОбъектВозврата;
	
КонецФункции

Функция ПолучитьДокРассылкиИзФайла(ИсточникXMLФайл) Экспорт
	
	Пока ИсточникXMLФайл.Имя <> "РезультатОпроса" Цикл
		
		Если НЕ ИсточникXMLФайл.Прочитать() Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	ИдРассылки = ИсточникXMLФайл.ПолучитьАтрибут("ИдРассылки");
	
	Если ИдРассылки = Неопределено ИЛИ ПустаяСтрока(ИдРассылки) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Попытка
		ДокРассылки = Документы.ФормированиеАнкет.ПолучитьСсылку(Новый УникальныйИдентификатор(ИдРассылки));
		Возврат ДокРассылки;
		
	Исключение
		Возврат Неопределено;
		
	КонецПопытки;
	
КонецФункции

Функция ВложениеЗагружаетсяВСправочник(ИсточникXMLФайл) Экспорт
	
	Пока ИсточникXMLФайл.Имя <> "РезультатОпроса" Цикл
		
		Если НЕ ИсточникXMLФайл.Прочитать() Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	IDАнкеты = ИсточникXMLФайл.ПолучитьАтрибут("ИдАнкеты");
	
	Попытка
		Анкета = Справочники.ТиповыеАнкеты.ПолучитьСсылку(Новый УникальныйИдентификатор(IDАнкеты));
		
		Если Анкета <> Неопределено Тогда
			Возврат Анкета.ЗагружатьОбъекты;
			
		Иначе
			Возврат Ложь;
			
		КонецЕсли;
		
	Исключение
		Возврат Ложь;
		
	КонецПопытки;
	
КонецФункции

Функция НайтиОбъектДляЗагрузки(ИсточникXMLФайл) Экспорт
	
	Пока ИсточникXMLФайл.Имя <> "Заголовок" Цикл
		
		Если НЕ ИсточникXMLФайл.Прочитать() Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	IDЗагружаемогоОбъекта = ИсточникXMLФайл.ПолучитьАтрибут("ИдОпрашиваемого");
	
	Если ЗначениеЗаполнено(IDЗагружаемогоОбъекта) Тогда
		ОбъектЗагрузки = ЗначениеИзСтрокиВнутр(IDЗагружаемогоОбъекта);
		Возврат ОбъектЗагрузки;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция НайтиДокументОпрос(ДатаОпроса, Анкета) Экспорт
	
	ЗапросПоДокументу = Новый Запрос;
	ЗапросПоДокументу.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Опрос.Ссылка
	|ИЗ
	|	Документ.Опрос КАК Опрос
	|ГДЕ
	|	Опрос.Дата = &Дата
	|	И Опрос.ТиповаяАнкета = &ТиповаяАнкета";
	
	ЗапросПоДокументу.УстановитьПараметр("Дата", 			ДатаОпроса);
	ЗапросПоДокументу.УстановитьПараметр("ТиповаяАнкета", 	Анкета);
	
	Выборка = ЗапросПоДокументу.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ДокОпрос = Выборка.Ссылка;
		
	Иначе
		ДокОпрос = Документы.Опрос.ПустаяСсылка();
		
	КонецЕсли;
	
	Возврат ДокОпрос;
	
КонецФункции

Процедура ПрочитатьВопрос(ХМЛ, ПотокВывода, Вопрос = Неопределено, ТабличныйВопрос = Неопределено, НомерСтрокиВтаблице = 0, НомерВариантаОтвета = 0) Экспорт
	
	Если (ХМЛ.ТипУзла = ТипУзлаXML.КонецЭлемента и ХМЛ.Имя = "Вопрос" и ТабличныйВопрос = Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
	Если ХМЛ.Имя = "Вопрос" Тогда
		
		Если ХМЛ.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Значение = ХМЛ.ПолучитьАтрибут("Ид");

			Если Вопрос = Неопределено Тогда
				
				Попытка
					Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ПолучитьСсылку(Новый УникальныйИдентификатор(Значение));
					
				Исключение
					Возврат;
					
				КонецПопытки;
				
			КонецЕсли;
			
			ХМЛ.Прочитать();
			ПрочитатьВопрос(ХМЛ, ПотокВывода, Вопрос, ТабличныйВопрос, НомерСтрокиВтаблице);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ХМЛ.Имя = "Значение" Тогда
		
		Если ХМЛ.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			
			ХМЛ.Прочитать();
			Если ТипЗнч(ПотокВывода) = Тип("ТаблицаЗначений") Тогда
				ДобавитьСтрокуСписка(Вопрос.Наименование, ХМЛ.Значение, ,ПотокВывода, Вопрос,,НомерСтрокиВтаблице);
				
			Иначе
				ДобавитьСтрокуСписка("", ХМЛ.Значение, ,ПотокВывода, Вопрос, ТабличныйВопрос, НомерСтрокиВтаблице);
				
			КонецЕсли;
			
			ХМЛ.Прочитать();
			ПрочитатьВопрос(ХМЛ, ПотокВывода, Вопрос, ТабличныйВопрос);
			
		КонецЕсли;
		
	ИначеЕсли ХМЛ.Имя = "ВариантОтвета" Тогда
		ПрочиталиВесьВопрос = Ложь;
		
		Пока НЕ ПрочиталиВесьВопрос Цикл
			
			Если (ХМЛ.ТипУзла = ТипУзлаXML.КонецЭлемента и ХМЛ.Имя = "ВариантОтвета") Тогда
				ХМЛ.Прочитать();
				
				Если (ХМЛ.ТипУзла = ТипУзлаXML.КонецЭлемента и ХМЛ.Имя = "Вопрос") Тогда
					ПрочиталиВесьВопрос = Истина;
					Прервать;
				КонецЕсли;
				
			КонецЕсли;
			
			Если ХМЛ.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				
				Ответы 				= ПолучитьОтветы(Вопрос, Вопрос.ТипЗначения);
				
				Если Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета тогда
					НомерВариантаОтвета = НомерВариантаОтвета + 1;
				КонецЕсли;
				
				Значение      		= ХМЛ.ПолучитьАтрибут("Ид");
				
				Попытка
					СтрокаТаблицы = Ответы.Найти(Новый УникальныйИдентификатор(Значение), "ГУИД");
					
				Исключение
					СтрокаТаблицы = Ответы.Найти(Значение, "ГУИД");
					
				КонецПопытки;
				
				Если СтрокаТаблицы <> Неопределено Тогда
					Ответ     = СтрокаТаблицы.Ссылка;
					
					Если СтрокаТаблицы.ТребуетРазвернутыйОтвет Тогда
						РазвернутыйОтвет = ХМЛ.ПолучитьАтрибут("РазвернутыйОтвет");
						
					Иначе
						РазвернутыйОтвет = "";
						
					КонецЕсли;
					
				Иначе
					Ответ     = "";
					
				КонецЕсли;
				
				Если ТипЗнч(ПотокВывода) = Тип("ТаблицаЗначений") Тогда
					
					Если НЕ ЗначениеЗаполнено(ТабличныйВопрос) тогда
						ДобавитьСтрокуСписка(Вопрос.Наименование, Ответ, РазвернутыйОтвет, ПотокВывода, Вопрос,,НомерВариантаОтвета);
						
					Иначе
						ДобавитьСтрокуСписка(Вопрос.Наименование, Ответ, РазвернутыйОтвет, ПотокВывода, Вопрос,,НомерСтрокиВтаблице);
						
					КонецЕсли;
					
				Иначе
					Если Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета тогда
						ДобавитьСтрокуСписка(Вопрос.Наименование, Ответ, РазвернутыйОтвет, ПотокВывода, Вопрос, Вопрос, НомерВариантаОтвета);
						
					Иначе
						ДобавитьСтрокуСписка(Вопрос.Наименование, Ответ, РазвернутыйОтвет, ПотокВывода, Вопрос, ТабличныйВопрос, НомерСтрокиВтаблице);
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
			ХМЛ.Прочитать();
			
		КонецЦикла;
		
		Если Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета Тогда
			ПрочитатьВопрос(ХМЛ, ПотокВывода, Вопрос, ТабличныйВопрос, НомерВариантаОтвета);
			
		Иначе
			ПрочитатьВопрос(ХМЛ, ПотокВывода, Вопрос, ТабличныйВопрос, НомерСтрокиВтаблице);
			
		КонецЕсли;
		
	ИначеЕсли ХМЛ.Имя = "СтрокаТаблицы" Тогда
		ТабличныйВопрос = Вопрос;
		ПрочиталиВесьВопрос = Ложь;
		
		Пока НЕ ПрочиталиВесьВопрос Цикл
			
			Если (ХМЛ.ТипУзла = ТипУзлаXML.КонецЭлемента и ХМЛ.Имя = "СтрокаТаблицы") Тогда
				ХМЛ.Прочитать();
				
				Если (ХМЛ.ТипУзла = ТипУзлаXML.КонецЭлемента и ХМЛ.Имя = "Вопрос") Тогда
					ПрочиталиВесьВопрос = Истина;
					Прервать;
				КонецЕсли;
				
			КонецЕсли;
			
			Если (ХМЛ.ТипУзла = ТипУзлаXML.НачалоЭлемента и ХМЛ.Имя = "СтрокаТаблицы") Тогда
				НомерСтрокиВтаблице = Число(ХМЛ.ПолучитьАтрибут("НомерСтроки"));
			КонецЕсли;
			
			ХМЛ.Прочитать();
			Если ХМЛ.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				
				Значение = ХМЛ.ПолучитьАтрибут("Ид");
				
				Если (ХМЛ.ТипУзла = ТипУзлаXML.НачалоЭлемента и ХМЛ.Имя = "Вопрос") Тогда
					
					Попытка
						Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ПолучитьСсылку(Новый УникальныйИдентификатор(Значение));
						
					Исключение
					КонецПопытки;
					
				КонецЕсли;
				
				ПрочитатьВопрос(ХМЛ, ПотокВывода, Вопрос, ТабличныйВопрос, НомерСтрокиВтаблице);
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		Если ХМЛ.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			ХМЛ.Прочитать();
			ПрочитатьВопрос(ХМЛ, ПотокВывода, Вопрос, ТабличныйВопрос);
		КонецЕсли;
		
	КонецЕсли;
			
КонецПроцедуры

Процедура ЗаписатьПредопределенныйТабличныйВопрос(ТабличныйВопрос, ПотокВывода, ОтветыТаблицы) Экспорт;
	
	Если ЕстьФизическиеЛица И ТабличныйВопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ТОбразование тогда
		ПотокВывода.Образование.Очистить();
	ИначеЕсли ЕстьФизическиеЛица И ТабличныйВопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ТСоставСемьи тогда
		ПотокВывода.СоставСемьи.Очистить();
	ИначеЕсли ЕстьФизическиеЛица И ТабличныйВопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ТТрудоваяДеятельность тогда
		ПотокВывода.ТрудоваяДеятельность.Очистить();
	ИначеЕсли ЕстьФизическиеЛица И ТабличныйВопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ТЗнаниеЯзыков тогда
		ПотокВывода.ЗнаниеЯзыков.Очистить();
	ИначеЕсли ЕстьКонтрагенты И ТабличныйВопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ТВидыДеятельностиКонтрагента тогда
		ПотокВывода.ВидыДеятельности.Очистить();
	Иначе
		Возврат;
	КонецЕсли;
	
	ПустаяТаблица = Истина;
	Для Каждого ОтветИзТаблицы из ОтветыТаблицы Цикл
		Если ЗначениеЗаполнено(ОтветИзТаблицы.ТиповойОтвет) тогда
			ПустаяТаблица = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если ПустаяТаблица Тогда
		Возврат;
	КонецЕсли;
	
	СтарыйНомерСтрокиТаблицы = 0;
	ПустаяТаблица = Истина;
	НоваяСтрока = Неопределено;
	Для Каждого ОтветИзТаблицы Из ОтветыТаблицы Цикл
		Если СтарыйНомерСтрокиТаблицы <> ОтветИзТаблицы.НомерСтрокиВТаблице тогда
			Если ЕстьФизическиеЛица И ТабличныйВопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ТОбразование тогда
				Если ПустаяТаблица И НоваяСтрока <> Неопределено Тогда
					ПотокВывода.Образование.Удалить(НоваяСтрока);
				КонецЕсли;
				НоваяСтрока = ПотокВывода.Образование.Добавить();
				
			ИначеЕсли ЕстьФизическиеЛица И ТабличныйВопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ТСоставСемьи тогда
				Если ПустаяТаблица И НоваяСтрока <> Неопределено Тогда
					ПотокВывода.СоставСемьи.Удалить(НоваяСтрока);
				КонецЕсли;
				НоваяСтрока = ПотокВывода.СоставСемьи.Добавить();
				
			ИначеЕсли ЕстьФизическиеЛица И ТабличныйВопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ТТрудоваяДеятельность тогда
				Если ПустаяТаблица И НоваяСтрока <> Неопределено Тогда
					ПотокВывода.ТрудоваяДеятельность.Удалить(НоваяСтрока);
				КонецЕсли;
				НоваяСтрока = ПотокВывода.ТрудоваяДеятельность.Добавить();
				
			ИначеЕсли ЕстьФизическиеЛица И ТабличныйВопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ТЗнаниеЯзыков тогда
				Если ПустаяТаблица И НоваяСтрока <> Неопределено Тогда
					ПотокВывода.ЗнаниеЯзыков.Удалить(НоваяСтрока);
				КонецЕсли;
				НоваяСтрока = ПотокВывода.ЗнаниеЯзыков.Добавить();
				
			ИначеЕсли ЕстьКонтрагенты И ТабличныйВопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ТВидыДеятельностиКонтрагента тогда
				Если ПустаяТаблица И НоваяСтрока <> Неопределено Тогда
					ПотокВывода.ВидыДеятельности.Удалить(НоваяСтрока);
				КонецЕсли;
				НоваяСтрока = ПотокВывода.ВидыДеятельности.Добавить();
				
			Иначе
				Возврат;
				
			КонецЕсли;
			
			ПустаяТаблица = Истина;
		КонецЕсли;
		Если ЗначениеЗаполнено(ОтветИзТаблицы.ТиповойОтвет) Тогда
			ПустаяТаблица = Ложь;
		КонецЕсли;
		СтарыйНомерСтрокиТаблицы = ОтветИзТаблицы.НомерСтрокиВТаблице;
		Если ЕстьФизическиеЛица И ОтветИзТаблицы.Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ВидОбразования тогда
			НоваяСтрока.ВидОбразования = ОтветИзТаблицы.ТиповойОтвет;
		ИначеЕсли ЕстьФизическиеЛица И ОтветИзТаблицы.Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ГодОкончания тогда
			НоваяСтрока.ГодОкончания = ОтветИзТаблицы.ТиповойОтвет;
		ИначеЕсли ЕстьФизическиеЛица И ОтветИзТаблицы.Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.Специальность тогда
			НоваяСтрока.Специальность = ОтветИзТаблицы.ТиповойОтвет;
		ИначеЕсли ЕстьФизическиеЛица И ОтветИзТаблицы.Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.УчебноеЗаведение тогда
			НоваяСтрока.УчебноеЗаведение = ОтветИзТаблицы.ТиповойОтвет;
		ИначеЕсли ЕстьФизическиеЛица И ОтветИзТаблицы.Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.Квалификация тогда
			НоваяСтрока.Квалификация = ОтветИзТаблицы.ТиповойОтвет;
		ИначеЕсли ЕстьФизическиеЛица И ОтветИзТаблицы.Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ДипломСерияНомер тогда
			НоваяСтрока.Диплом = ОтветИзТаблицы.ТиповойОтвет;
		ИначеЕсли ЕстьФизическиеЛица И ОтветИзТаблицы.Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.СтепеньЗнанияЯзыка тогда
			НоваяСтрока.СтепеньЗнанияЯзыка = ОтветИзТаблицы.ТиповойОтвет;
		ИначеЕсли ЕстьФизическиеЛица И ОтветИзТаблицы.Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.Язык тогда
			НоваяСтрока.Язык = ОтветИзТаблицы.ТиповойОтвет;
		ИначеЕсли ЕстьФизическиеЛица И ОтветИзТаблицы.Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.СоставСемьиГодРождения тогда
			НоваяСтрока.ГодРождения = ОтветИзТаблицы.ТиповойОтвет;
		ИначеЕсли ЕстьФизическиеЛица И ОтветИзТаблицы.Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.СоставСемьиРодственник тогда
			НоваяСтрока.Имя = ОтветИзТаблицы.ТиповойОтвет;
		ИначеЕсли ЕстьФизическиеЛица И ОтветИзТаблицы.Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.СоставСемьиСтепеньРодства тогда
			НоваяСтрока.СтепеньРодства = ОтветИзТаблицы.ТиповойОтвет;
		ИначеЕсли ЕстьФизическиеЛица И ОтветИзТаблицы.Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ТрудоваяДеятельностьДолжность тогда
			НоваяСтрока.Должность = ОтветИзТаблицы.ТиповойОтвет;
		ИначеЕсли ЕстьФизическиеЛица И ОтветИзТаблицы.Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ТрудоваяДеятельностьНачалоРаботы тогда
			НоваяСтрока.НачалоРаботы = ОтветИзТаблицы.ТиповойОтвет;
		ИначеЕсли ЕстьФизическиеЛица И ОтветИзТаблицы.Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ТрудоваяДеятельностьОкончаниеРаботы тогда
			НоваяСтрока.ОкончаниеРаботы = ОтветИзТаблицы.ТиповойОтвет;
		ИначеЕсли ЕстьФизическиеЛица И ОтветИзТаблицы.Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ТрудоваяДеятельностьОрганизация тогда
			НоваяСтрока.Организация = ОтветИзТаблицы.ТиповойОтвет;
		ИначеЕсли ЕстьКонтрагенты И ОтветИзТаблицы.Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ВидДеятельностиКонтрагента тогда
			НоваяСтрока.ВидДеятельности = ОтветИзТаблицы.ТиповойОтвет;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьФизическиеЛица И ТабличныйВопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ТОбразование тогда
		Если ПустаяТаблица И НоваяСтрока <> Неопределено Тогда
			ПотокВывода.Образование.Удалить(НоваяСтрока);
		КонецЕсли;
		
	ИначеЕсли ЕстьФизическиеЛица И ТабличныйВопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ТСоставСемьи тогда
		Если ПустаяТаблица И НоваяСтрока <> Неопределено Тогда
			ПотокВывода.СоставСемьи.Удалить(НоваяСтрока);
		КонецЕсли;
		
	ИначеЕсли ЕстьФизическиеЛица И ТабличныйВопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ТТрудоваяДеятельность тогда
		Если ПустаяТаблица И НоваяСтрока <> Неопределено Тогда
			ПотокВывода.ТрудоваяДеятельность.Удалить(НоваяСтрока);
		КонецЕсли;
		
	ИначеЕсли ЕстьФизическиеЛица И ТабличныйВопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ТЗнаниеЯзыков тогда
		Если ПустаяТаблица И НоваяСтрока <> Неопределено Тогда
			ПотокВывода.ЗнаниеЯзыков.Удалить(НоваяСтрока);
		КонецЕсли;
		
	ИначеЕсли ЕстьКонтрагенты И ТабличныйВопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ТВидыДеятельностиКонтрагента тогда
		Если ПустаяТаблица И НоваяСтрока <> Неопределено Тогда
			ПотокВывода.ВидыДеятельности.Удалить(НоваяСтрока);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПрочитатьФайл(ИмяФайла, ПотокВывода) Экспорт

	ХМЛ = Новый ЧтениеXML();
	ХМЛ.ОткрытьФайл(ИмяФайла);

	// ---- Чтение заголовка файла
	Если НЕ ХМЛ.Прочитать() Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Невозможно прочитать файл!");
		Возврат Ложь;
	КонецЕсли;

	Пока ((ХМЛ.ТипУзла <> ТипУзлаXML.НачалоЭлемента) ИЛИ (ХМЛ.Имя <> "Заголовок")) Цикл
		
		Если НЕ ХМЛ.Прочитать() Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не найден заголовок опроса!");
			Возврат Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	ДобавитьСтрокуСписка("ДатаФормирования", ХМЛ.ПолучитьАтрибут("ДатаФормирования"),, ПотокВывода);

	Версия = ХМЛ.ПолучитьАтрибут("ВерсияФормата");
	
	Если Версия <> "1.1" Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Неверная версия формата данных ("+Версия+").");
		Возврат Ложь;
	КонецЕсли;
	
	ДобавитьСтрокуСписка("ВерсияФормата", ХМЛ.ПолучитьАтрибут("ВерсияФормата"), , ПотокВывода);

	Попытка
		Опрашиваемый = ЗначениеИзСтрокиВнутр(ХМЛ.ПолучитьАтрибут("ИдОпрашиваемого"));
		
	Исключение
		Возврат Ложь;
		
	КонецПопытки;
		
	ДобавитьСтрокуСписка("ИдОпрашиваемого", Опрашиваемый,, ПотокВывода);

	// ---- Чтение результата опроса

	Пока ((ХМЛ.ТипУзла <> ТипУзлаXML.НачалоЭлемента) ИЛИ (ХМЛ.Имя <> "РезультатОпроса")) Цикл
		
		Если НЕ ХМЛ.Прочитать() Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не найдены результаты опроса!");
			Возврат Ложь;
		КонецЕсли;
		
	КонецЦикла;
		
	ДатаЗаполненияАнкеты = ХМЛ.ПолучитьАтрибут("ДатаЗаполненияАнкеты");
	ДобавитьСтрокуСписка("ДатаЗаполненияАнкеты", ДатаЗаполненияАнкеты,, ПотокВывода);

	ИдАнкеты = ХМЛ.ПолучитьАтрибут("ИдАнкеты");
	
	Попытка
		Анкета = Справочники.ТиповыеАнкеты.ПолучитьСсылку(Новый УникальныйИдентификатор(ИдАнкеты));
		
	Исключение
		Возврат Ложь;
		
	КонецПопытки;
	
	Если Анкета = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
		
	Если Анкета.Пустая() Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не обнаружена анкета с идентификатором " + ИдАнкеты);
		ОбщегоНазначения.СообщитьОбОшибке("Возможно изменился идентификатор или она удалена");
		Возврат Ложь;
	КонецЕсли;
	
	ДобавитьСтрокуСписка("ИдАнкеты", ИдАнкеты,, ПотокВывода);

	ДобавитьСтрокуСписка("НаименованиеАнкеты", ХМЛ.ПолучитьАтрибут("Наименование"),, ПотокВывода);

	ИдРасылки = ХМЛ.ПолучитьАтрибут("ИдРассылки");
	ДобавитьСтрокуСписка("ИдРассылки", ХМЛ.ПолучитьАтрибут("ИдРассылки"),, ПотокВывода);
		
	Если ТипЗнч(ПотокВывода) = Тип("ДокументОбъект.Опрос")
	 ИЛИ ТипЗнч(ПотокВывода) = Тип("ТаблицаЗначений")
	 ИЛИ ТипЗнч(ПотокВывода) = Тип("ДеревоЗначений") Тогда
	 
		Если ТипЗнч(ПотокВывода) = Тип("ДокументОбъект.Опрос") Тогда
			
			Попытка
				ПотокВывода.Дата = XMLЗначение(Тип("Дата"),ДатаЗаполненияАнкеты);
				
			Исключение
				ПотокВывода.Дата = ОбщегоНазначения.ПолучитьРабочуюДату();
				
			КонецПопытки;
			
			ПотокВывода.ТиповаяАнкета = Анкета;
			
		КонецЕсли;
		
		ПрочитатьВопросы(ХМЛ, ПотокВывода); // ---- Чтение Вопросов
		
	ИначеЕсли Анкета.ЗагружатьОбъекты Тогда
		ПрочитатьВопросы(ХМЛ, ПотокВывода, Истина, ДатаЗаполненияАнкеты, Анкета);
		
	КонецЕсли;

	ХМЛ.Прочитать(); // ---- Чтение результата опроса
	ХМЛ.Прочитать(); // ---- Чтение заголовка файла

	Возврат Истина;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Функция ПолучитьОтветы(Вопрос, Тип)

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Вопрос", Вопрос);
	
	Если Вопрос.ТипЗначения <> Неопределено Тогда
		ТипЗначения = Вопрос.ТипЗначения.Типы().Получить(0);
	КонецЕсли;

	Если (ТипЗначения = Тип("Булево")) Тогда

		ВыборкаЭлементов = Новый ТаблицаЗначений();
		ВыборкаЭлементов.Колонки.Добавить("Код");
		ВыборкаЭлементов.Колонки.Добавить("Ссылка");
		ВыборкаЭлементов.Колонки.Добавить("Наименование");
		ВыборкаЭлементов.Колонки.Добавить("Комментарий");
		ВыборкаЭлементов.Колонки.Добавить("ТребуетРазвернутыйОтвет");
		ВыборкаЭлементов.Колонки.Добавить("ГУИД");

		СтрокаТаблицы = ВыборкаЭлементов.Добавить();
		СтрокаТаблицы.Код                     = ЗначениеВСтрокуВнутр(Истина);
		СтрокаТаблицы.Ссылка                  = Истина;
		СтрокаТаблицы.Наименование            = Строка("Да");
		СтрокаТаблицы.Комментарий             = "";
		СтрокаТаблицы.ТребуетРазвернутыйОтвет = Ложь;
		СтрокаТаблицы.ГУИД = СтрокаТаблицы.Код;

		СтрокаТаблицы = ВыборкаЭлементов.Добавить();
		СтрокаТаблицы.Код                     = ЗначениеВСтрокуВнутр(Ложь);
		СтрокаТаблицы.Ссылка                  = Ложь;
		СтрокаТаблицы.Наименование            = Строка("Нет");
		СтрокаТаблицы.Комментарий             = "";
		СтрокаТаблицы.ТребуетРазвернутыйОтвет = Ложь;
		СтрокаТаблицы.ГУИД = СтрокаТаблицы.Код;

	ИначеЕсли (ТипЗначения = Тип("Строка")) ИЛИ

		 (ТипЗначения = Тип("Строка")) ИЛИ
		 (ТипЗначения = Тип("Число")) ИЛИ
		 (ТипЗначения = Тип("Дата")) ИЛИ
		 (НЕ Вопрос.Предопределенный)
		 Тогда

		 Запрос.Текст = "
		|ВЫБРАТЬ
		|	ВариантыОтветовОпросов.Код,
		|	ВариантыОтветовОпросов.Ссылка,
		|	ВариантыОтветовОпросов.Наименование,
		|	ВариантыОтветовОпросов.ТребуетРазвернутыйОтвет
		|ИЗ
		|	Справочник.ВариантыОтветовОпросов КАК ВариантыОтветовОпросов
		|
		|ГДЕ
		|	ВариантыОтветовОпросов.Владелец = &Вопрос";
		ВыборкаЭлементов =  Запрос.Выполнить().Выгрузить();
		
		ВыборкаЭлементов.Колонки.Добавить("ГУИД");
		Для Каждого СтрокаТаблицы Из ВыборкаЭлементов Цикл
			СтрокаТаблицы.ГУИД = СтрокаТаблицы.Ссылка.УникальныйИдентификатор();
		КонецЦикла;

	Иначе

		Объект = Метаданные.НайтиПоТипу(ТипЗначения);

		Попытка  // Объект - перечисление
			Перечисление = Истина;
			Значения = Объект.ЗначенияПеречисления;
		Исключение // объект - справочник
			Перечисление = Ложь;
		КонецПопытки;

		Если Перечисление Тогда

			ВыборкаЭлементов = Новый ТаблицаЗначений();
			ВыборкаЭлементов.Колонки.Добавить("Код");
			ВыборкаЭлементов.Колонки.Добавить("Ссылка");
			ВыборкаЭлементов.Колонки.Добавить("Наименование");
			ВыборкаЭлементов.Колонки.Добавить("Комментарий");
			ВыборкаЭлементов.Колонки.Добавить("ТребуетРазвернутыйОтвет");

			Менеджер = Перечисления[Объект.Имя];
			Для Индекс = 0 По Менеджер.Количество() - 1 Цикл
				СтрокаТаблицы = ВыборкаЭлементов.Добавить();
				Значение = Менеджер.Получить(Индекс);
				СтрокаТаблицы.Код                     = ЗначениеВСтрокуВнутр(Значение);;
				СтрокаТаблицы.Ссылка                  = Значение;
				СтрокаТаблицы.Наименование            = Строка(Значение);
				СтрокаТаблицы.Комментарий             = Значение.Метаданные().Комментарий;
				СтрокаТаблицы.ТребуетРазвернутыйОтвет = Ложь;
			КонецЦикла;

		Иначе // 
			Запрос = Новый Запрос();
			Запрос.Текст = "
			|ВЫБРАТЬ
			|	NULL КАК Код,
			|	"+Объект.Имя+".Ссылка       КАК Ссылка,
			|	"+Объект.Имя+".Наименование КАК Наименование,
			|	Ложь КАК ТребуетРазвернутыйОтвет
			|ИЗ
			|	Справочник."+Объект.Имя+" КАК "+Объект.Имя+"
			|";
			ВыборкаЭлементов =  Запрос.Выполнить().Выгрузить();
		КонецЕсли;

		ВыборкаЭлементов.Колонки.Добавить("ГУИД");
		Для Каждого СтрокаТаблицы Из ВыборкаЭлементов Цикл
			Если СтрокаТаблицы.Код = NULL Тогда
				СтрокаТаблицы.ГУИД = СтрокаТаблицы.Ссылка.УникальныйИдентификатор();
			Иначе
				СтрокаТаблицы.ГУИД = СтрокаТаблицы.Код
			КонецЕсли;
		КонецЦикла;

	КонецЕсли;

	Возврат ВыборкаЭлементов;

КонецФункции // ПолучитьОтветы()

Процедура ДобавитьСтрокуСписка(Имя, Значение, РазвернутыйОтвет = "", ПотокВывода, Вопрос = Неопределено, ТабличныйВопрос = Неопределено, НомерСтрокиВтаблице = 0)

	Если Вопрос <> Неопределено тогда
		ТипЗначения  = Вопрос.ТипЗначения;
	КонецЕсли;

	Если ТипЗнч(ПотокВывода) = Тип("ТаблицаЗначений") Тогда
		СтрокаСписка = ПотокВывода.Добавить();
		
		Если ПотокВывода.Колонки.Найти("НомерСтрокиВтаблице") <> Неопределено Тогда
			СтрокаСписка.НомерСтрокиВтаблице = НомерСтрокиВтаблице;
			СтрокаСписка.Вопрос           	 = Вопрос;
			Если (ТипЗначения.Типы().Получить(0) = Тип("Дата"))
			 ИЛИ (ТипЗначения.Типы().Получить(0) = Тип("Строка"))
			 ИЛИ (ТипЗначения.Типы().Получить(0) = Тип("Число")) Тогда
			 
				Если ТипЗначения.Типы().Получить(0) = Тип("Дата") И ПустаяСтрока(Значение) Тогда
					 ЗначениеВОтвет = "0001-01-01T00:00:00";
					 
				ИначеЕсли ТипЗначения.Типы().Получить(0) = Тип("Число") И ПустаяСтрока(Значение) Тогда
					 ЗначениеВОтвет = "0";
					 
				Иначе
					 ЗначениеВОтвет = Значение;
					 
				КонецЕсли;
				
				Попытка
					СтрокаСписка.ТиповойОтвет   = XMLЗначение(Тип(ТипЗначения.Типы().Получить(0)), ЗначениеВОтвет);
					
				Исключение
					Сообщить("Ответ на вопрос: """+Имя+""". Не удалось преобразовать ответ """+ЗначениеВОтвет+""" к типу """+ТипЗначения.Типы().Получить(0)+ """. Ответ не загружен!");
					
				КонецПопытки;
				
				СтрокаСписка.Ответ  		= РазвернутыйОтвет;
				
			Иначе
				СтрокаСписка.Ответ            = Значение;
				СтрокаСписка.РазвернутыйОтвет = РазвернутыйОтвет;
				СтрокаСписка.ТиповойОтвет 	  = Значение;
				
			КонецЕсли;
			
		Иначе
			СтрокаСписка.Вопрос           = Имя;
			СтрокаСписка.Ответ            = Значение;
			СтрокаСписка.РазвернутыйОтвет = РазвернутыйОтвет;
			
		КонецЕсли;
		
	Иначе
		
		Если Вопрос = Неопределено Тогда
			Возврат;
		КонецЕсли;

		Если ТабличныйВопрос = Неопределено Тогда
			СтрокаСписка = ПотокВывода.Вопросы.Добавить();
			
		Иначе
			
			Если НомерСтрокиВтаблице = 1 Тогда
				
				Если ПотокВывода.Вопросы.Количество() = 0 Тогда
					СтрокаСписка 		= ПотокВывода.Вопросы.Добавить();
					СтрокаСписка.Вопрос = ТабличныйВопрос;
					
				ИначеЕсли ПотокВывода.Вопросы[ПотокВывода.Вопросы.Количество()-1].Вопрос <> ТабличныйВопрос тогда
					СтрокаСписка 		= ПотокВывода.Вопросы.Добавить();
					СтрокаСписка.Вопрос = ТабличныйВопрос;
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета И ПустаяСтрока(Значение) Тогда
				// если это вопрос с несколькими вариантами ответа и варинат ответа невыбран, тогда вариант ответа не будем записывать
				СтрокаСписка.Вопрос = Вопрос;
				Возврат;
			КонецЕсли;
			
			СтрокаСписка						= ПотокВывода.СоставнойОтвет.Добавить();
			СтрокаСписка.ВопросВладелец			= ТабличныйВопрос;
			СтрокаСписка.НомерСтрокиВтаблице	= НомерСтрокиВтаблице;
				
		КонецЕсли;

		СтрокаСписка.Вопрос = Вопрос;
		СтрокаСписка.Ответ  = РазвернутыйОтвет;

		Если ТипЗначения <> Неопределено Тогда
			ТипЗначения = ТипЗначения.Типы().Получить(0);
		КонецЕсли;
		
		Если ТипЗначения <> Неопределено И ((ТипЗначения = Тип("Дата")) ИЛИ (ТипЗначения = Тип("Строка")) ИЛИ (ТипЗначения = Тип("Число"))) Тогда
			Если ТипЗначения = Тип("Дата") И ПустаяСтрока(Значение) Тогда
				ЗначениеВОтвет = "0001-01-01T00:00:00";
				
			ИначеЕсли ТипЗначения = Тип("Число") И ПустаяСтрока(Значение) Тогда
				ЗначениеВОтвет = "0";
				
			Иначе
				ЗначениеВОтвет = Значение;
				
			КонецЕсли;
			
			Попытка
				СтрокаСписка.ТиповойОтвет = XMLЗначение(Тип(ТипЗначения), ЗначениеВОтвет);
				
			Исключение
				Сообщить("Ответ на вопрос: """+Строка(Вопрос)+""". Не удалось преобразовать ответ """+ЗначениеВОтвет+""" к типу """+ТипЗначения+ """. Ответ не загружен!");
				
			КонецПопытки;
			
		Иначе
			СтрокаСписка.ТиповойОтвет = Значение;
			
		КонецЕсли;

	КонецЕсли;

Конецпроцедуры

Процедура ПрочитатьВопросы(ХМЛ, ПотокВывода, ВОбъект = Ложь, ДатаЗаполненияАнкеты = Неопределено, Анкета = Неопределено)

	Фамилия			= "";
	Имя				= "";
	Отчество		= "";
	ДатаРождения	= "";
	ИНН				= "";
	СерияДокумента	= "";
	ВидДокументаУдостоверяющегоЛичность	= "";
	НомерДокумента		= "";
	ДатаВыдачиДокумента	= "";
	КемВыданДокумент	= "";
	КодПодразделенияДокумента	= "";
	Гражданство			= "";
	СемейноеПоложение	= "";
	ОтношениеКВоинскойОбязанности	= "";
	ОтношениеКВоинскомуУчету		= "";
	Годность				= "";
	Звание					= "";
	НаличиеМобпредписания	= "";
	Военкомат				= "";
	ВУС						= "";
	КатегорияЗапаса			= "";
	Состав					= "";
	НомерКомандыПартии		= "";
	
	Пока ХМЛ.Прочитать() Цикл
		
		Если (ХМЛ.ТипУзла = ТипУзлаXML.НачалоЭлемента) и ((ХМЛ.Имя = "Вопрос")) Тогда
			Значение = ХМЛ.ПолучитьАтрибут("Ид");
			
			Если Значение = "" Тогда
				ХМЛ.Прочитать();
				Продолжить; // Пустые вопросы пропускаем
			КонецЕсли;
			
			Если ВОбъект Тогда
				
				Попытка
					ДатаАнкеты = XMLЗначение(Тип("Дата"), ДатаЗаполненияАнкеты);
					
				Исключение
					ДатаАнкеты = ОбщегоНазначения.ПолучитьРабочуюДату();
					
				КонецПопытки;
				
				ПоместитьВопросыВОбъектЗагрузки(ХМЛ, ПотокВывода, ДатаАнкеты, Анкета,,);
				
			Иначе
				ПрочитатьВопрос(ХМЛ, ПотокВывода);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

Функция ПроверкаПустойСтроки(ВыбСтрока, ПризнакЗапятой=Истина)
	
	Если ПустаяСтрока(ВыбСтрока) Тогда
		Возврат "";
	Иначе
		Возврат ?(ПризнакЗапятой,",","")+" ";
	КонецЕсли; 
	
КонецФункции // ПроверкаПустойСтроки()

Процедура ПоместитьВопросыВОбъектЗагрузки(ХМЛ, ПотокВывода, ДатаЗаписи, Анкета, ТабличныйВопрос = Неопределено, НомерСтрокиВтаблице = 0)
	
	//Контрагент = Неопределено;
	
	КИОбъекта = Новый ТаблицаЗначений;
	КИОбъекта.Колонки.Добавить("Поле1КИ");
	КИОбъекта.Колонки.Добавить("Поле2КИ");
	КИОбъекта.Колонки.Добавить("Поле3КИ");
	КИОбъекта.Колонки.Добавить("Поле4КИ");
	КИОбъекта.Колонки.Добавить("Поле5КИ");
	КИОбъекта.Колонки.Добавить("Поле6КИ");
	КИОбъекта.Колонки.Добавить("Поле7КИ");
	КИОбъекта.Колонки.Добавить("Поле8КИ");
	КИОбъекта.Колонки.Добавить("Поле9КИ");
	КИОбъекта.Колонки.Добавить("Поле10КИ");
	КИОбъекта.Колонки.Добавить("КомментарийКИ");
	КИОбъекта.Колонки.Добавить("ТипВидКИ");
	КИОбъекта.Колонки.Добавить("ПредставлениеКИ");
	
	ОтветыТаблицы = Новый ТаблицаЗначений;
	ОтветыТаблицы.Колонки.Добавить("Вопрос", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ВопросыДляАнкетирования"));
	ОтветыТаблицы.Колонки.Добавить("Ответ", Новый ОписаниеТипов("Строка"));
	ОтветыТаблицы.Колонки.Добавить("РазвернутыйОтвет", Новый ОписаниеТипов("Строка"));
	ОтветыТаблицы.Колонки.Добавить("ТиповойОтвет", Метаданные.ПланыВидовХарактеристик.ВопросыДляАнкетирования.Тип);
	ОтветыТаблицы.Колонки.Добавить("НомерСтрокиВТаблице", Новый ОписаниеТипов("Число"));
	
	Вопрос 	= Неопределено;
	Ответ	= Неопределено;
	ТабличныйВопрос = Неопределено;
	
	ПрочитатьВопрос(ХМЛ, ОтветыТаблицы, Вопрос, ТабличныйВопрос);
	Если ТабличныйВопрос <> Неопределено тогда
		ЗаписатьПредопределенныйТабличныйВопрос(ТабличныйВопрос, ПотокВывода, ОтветыТаблицы);
		Возврат;
	КонецЕсли;
	
	Для каждого СтрокаОтвет из ОтветыТаблицы Цикл
		Вопрос 	= СтрокаОтвет.Вопрос;
		Ответ 	= СтрокаОтвет.ТиповойОтвет;
		
		Если Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.Фамилия тогда
			Фамилия = Ответ;
		ИначеЕсли Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.Имя тогда
			Имя = Ответ;
		ИначеЕсли Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.Отчество тогда
			Отчество = Ответ;
		ИначеЕсли Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ДатаРождения тогда
			ДатаРождения = Ответ;
		ИначеЕсли Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ИНН тогда
			ИНН = Ответ;
		КонецЕсли;
		
		// Физические лица и контактные лица
		Если ЕстьФизическиеЛица
		   И (Анкета.ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ФизическиеЛица)
		   И НЕ ПустаяСтрока(Фамилия)
		   И НЕ ПустаяСтрока(Имя)
		   И НЕ ПустаяСтрока(Отчество)
		   И ЗначениеЗаполнено(ДатаРождения) Тогда
		
			Если ПустаяСтрока(ПотокВывода.Наименование) Тогда
			
				ПотокВывода.Наименование = Фамилия + " " + Имя + " " + Отчество;
			
			КонецЕсли;
			
			ПотокВывода.ДатаРождения = ДатаРождения;
			ПотокВывода.Записать();
			
			НаборЗаписейФИО = РегистрыСведений.ФИОФизЛиц.СоздатьНаборЗаписей();
			НаборЗаписейФИО.Отбор.Физлицо.Значение		= ПотокВывода.Ссылка;
			НаборЗаписейФИО.Отбор.ФизЛицо.Использование	= Истина;
				
			НоваяЗапись 			= НаборЗаписейФИО.Добавить();
			НоваяЗапись.Физлицо		= ПотокВывода.Ссылка;
			НоваяЗапись.Период		= ДатаЗаписи;
			НоваяЗапись.Фамилия		= Фамилия;
			НоваяЗапись.Имя			= Имя;
			НоваяЗапись.Отчество	= Отчество;
				
			НаборЗаписейФИО.Записать();
				
		КонецЕсли;
		
		Если ЕстьКонтактныеЛица И Анкета.ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.КонтактныеЛица и
			ЗначениеЗаполнено(Фамилия) и 
			ЗначениеЗаполнено(Имя) и 
			ЗначениеЗаполнено(Отчество) и 
			ЗначениеЗаполнено(ДатаРождения) и 
			НЕ ЗначениеЗаполнено(ПотокВывода.Фамилия + ПотокВывода.Имя + ПотокВывода.Отчество) тогда
				// это контактное лицо
				ПотокВывода.Фамилия 		= Фамилия;
				ПотокВывода.Имя 			= Имя;
				ПотокВывода.Отчество 		= Отчество;
				ПотокВывода.ДатаРождения 	= ДатаРождения;
				ПотокВывода.Наименование	= Фамилия + " " + Имя + " " + Отчество;
				Если ЗначениеЗаполнено(КонтрагентДляЗаписи) тогда
					ПотокВывода.ОбъектВладелец = КонтрагентДляЗаписи.Ссылка;
				Иначе
					ПотокВывода.ОбъектВладелец = Справочники.Контрагенты.ПустаяСсылка();
				КонецЕсли;
				ПотокВывода.Записать();
		КонецЕсли;
		
		Если ЕстьКонтрагенты И Анкета.Адресная и Анкета.ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.Контрагенты тогда
			// если анкета была отправлена конкретному контрагенту
			Если ЗначениеЗаполнено(Фамилия) и 
				ЗначениеЗаполнено(Имя) и 
				ЗначениеЗаполнено(Отчество) и 
				ЗначениеЗаполнено(ДатаРождения) и 
				ТипЗнч(ПотокВывода) = Тип("СправочникОбъект.Контрагенты") тогда
				// и встретили вопросы контактного лица, тогда запишем контрагента и создадим контактное лицо
				ПотокВывода.Записать();
				Контрагент 	= ПотокВывода;
				ПотокВывода = Справочники.КонтактныеЛица.СоздатьЭлемент();
				// это контактное лицо
				ПотокВывода.Фамилия 		= Фамилия;
				ПотокВывода.Имя 			= Имя;
				ПотокВывода.Отчество 		= Отчество;
				ПотокВывода.ДатаРождения 	= ДатаРождения;
				ПотокВывода.Наименование	= Фамилия + " " + Имя + " " + Отчество;
				ПотокВывода.ОбъектВладелец	= Контрагент.Ссылка;
				ПотокВывода.ВидКонтактногоЛица = Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента;
				ПотокВывода.Записать();
			КонецЕсли;
		КонецЕсли;
		
		// Контрагент
		Если (ЕстьКонтрагенты И ЗначениеЗаполнено(ИНН) и ТипЗнч(ПотокВывода) = Тип("СправочникОбъект.Контрагенты")) ИЛИ
			 (ЕстьКонтрагенты И ЗначениеЗаполнено(НаименованиеКонтрагента) и ТипЗнч(ПотокВывода) = Тип("СправочникОбъект.Контрагенты")) тогда

			Если НЕ ЗначениеЗаполнено(ПотокВывода.ИНН) тогда
				//Контрагент = Справочники.Контрагенты.СоздатьЭлемент();
				ПотокВывода.ИНН = ИНН;
				ПотокВывода.Наименование = НаименованиеКонтрагента;
				ПотокВывода.Записать();
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если ЕстьКонтактныеЛица И ЗначениеЗаполнено(Фамилия) и 
			 ЗначениеЗаполнено(Имя) и 
			 ЗначениеЗаполнено(Отчество) и 
			 ЗначениеЗаполнено(ДатаРождения) и  
			 НЕ ЗначениеЗаполнено(ПотокВывода) тогда
			 ПотокВывода = Справочники.КонтактныеЛица.СоздатьЭлемент();
			 ПотокВывода.Наименование = Фамилия	+ " " + Имя + " " + Отчество;
			 ПотокВывода.ДатаРождения = ДатаРождения;
			 ПотокВывода.Записать();
		КонецЕсли;
		
		Если ЕстьКонтрагенты И ЗначениеЗаполнено(Контрагент) тогда
			Если Анкета.ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.Контрагенты тогда
				КонтрагентДляЗаписи =  ПотокВывода;
			ИначеЕсли Анкета.ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.КонтактныеЛица тогда
				КонтрагентДляЗаписи =  Контрагент;
			КонецЕсли ;
			Если Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.НаименованиеКонтрагента и ТипЗнч(ПотокВывода) = Тип("СправочникОбъект.Контрагенты") тогда
				КонтрагентДляЗаписи.Наименование = Ответ;
				//ИначеЕсли	Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ИННГоловногоКонтрагента	тогда
				//	Контрагент.ИННГоловногоКонтрагента	= СтрокаВопросОтвет.ТиповойОтвет;
			ИначеЕсли	Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ВидДеятельностиКонтрагента	и ТипЗнч(ПотокВывода) = Тип("СправочникОбъект.Контрагенты") тогда
				//КонтрагентДляЗаписи.ОписаниеВидовДеятельности = Ответ;
			ИначеЕсли	Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ТипКонтрагента	и ТипЗнч(ПотокВывода) = Тип("СправочникОбъект.Контрагенты") тогда
				КонтрагентДляЗаписи.ЮрФизЛицо = Ответ;
			КонецЕсли;
		КонецЕсли;
		
		Если ЕстьФизическиеЛица И Анкета.ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ФизическиеЛица тогда
			Если ПотокВывода.ЭтоНовый() тогда
				// если не во что принимать данные, то продолжим цикл
				Продолжить;
			КонецЕсли;
		ИначеЕсли ЕстьКонтрагенты И Анкета.ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.Контрагенты тогда
			Если ПотокВывода.ЭтоНовый() тогда
				// если не во что принимать данные, то продолжим цикл
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		//ТипВидКИ	=	Вопрос.ТипВидКонтакнойИнформации;
		ТипВидКИ = Вопрос.ВидКонтактнойИнформации;
		
		Если ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.Пол и ТипЗнч(ПотокВывода) = Тип("СправочникОбъект.ФизическиеЛица") тогда
			ПотокВывода.Пол = Ответ;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ИНН  и ТипЗнч(ПотокВывода) = Тип("СправочникОбъект.ФизическиеЛица") тогда
			ПотокВывода.ИНН = Ответ;
		ИначеЕсли ЕстьКонтрагенты И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ИННГоловногоКонтрагента и ТипЗнч(ПотокВывода) = Тип("СправочникОбъект.Контрагенты") тогда
			ЗапросПоКонтрагенту = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
											   |	Контрагенты.Ссылка
											   |ИЗ
											   |	Справочник.Контрагенты КАК Контрагенты
											   |
											   |ГДЕ
											   |	Контрагенты.ИНН = &ИННГоловногоКонтрагента");
			ЗапросПоКонтрагенту.УстановитьПараметр("ИННГоловногоКонтрагента", Ответ);
			РезультатЗапроса = ЗапросПоКонтрагенту.Выполнить();
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			ГоловнойКонтрагент = Выборка.Ссылка;
			Если ЗначениеЗаполнено(ГоловнойКонтрагент) тогда
				ПотокВывода.ГоловнойКонтрагент = ГоловнойКонтрагент;
			Иначе
				Сообщить("Невозможно заполнить головного контрагента. Не найден контрагент, имеющий ИНН - " + Ответ);
			КонецЕсли;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.КодИМНС  и ТипЗнч(ПотокВывода) = Тип("СправочникОбъект.ФизическиеЛица") тогда
			ПотокВывода.КодИМНС = Ответ;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.СтраховойНомерПФР  и ТипЗнч(ПотокВывода) = Тип("СправочникОбъект.ФизическиеЛица") тогда
			ПотокВывода.СтраховойНомерПФР = Ответ;
		ИначеЕсли ЕстьКонтактныеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.Роль  и ТипЗнч(ПотокВывода) = Тип("СправочникОбъект.КонтактныеЛица") тогда
			ПотокВывода.Роль = Ответ;
		ИначеЕсли ЕстьКонтактныеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.Должность  и ТипЗнч(ПотокВывода) = Тип("СправочникОбъект.КонтактныеЛица") тогда
			ПотокВывода.Должность = Ответ;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.СерияДокумента тогда
			СерияДокумента = Ответ;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ВидДокументаУдостоверяющегоЛичность тогда
			ВидДокументаУдостоверяющегоЛичность = Ответ;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.НомерДокумента тогда
			НомерДокумента = Ответ;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ДатаВыдачиДокумента тогда
			ДатаВыдачиДокумента = Ответ;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.КемВыданДокумент тогда
			КемВыданДокумент = Ответ;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.КодПодразделенияДокумента тогда
			КодПодразделенияДокумента = Ответ;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.Гражданство тогда
			Гражданство = Ответ;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.СемейноеПоложение тогда
			СемейноеПоложение = Ответ;
		ИначеЕсли	ТипВидКИ.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес	тогда
			СтрокаКИ =	КИОбъекта.Добавить();
			СтрокаКИ.ТипВидКИ	= ТипВидКИ;
			МассивПолей	=	ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(Ответ,	"¤");
			Если	МассивПолей.Количество()	>	0	тогда
				СтрокаКИ.Поле1КИ = МассивПолей[0];
			КонецЕсли;
			Если	МассивПолей.Количество()	>	1	тогда
				СтрокаКИ.Поле2КИ = МассивПолей[1];
			КонецЕсли;
			Если	МассивПолей.Количество()	>	2	тогда
				СтрокаКИ.Поле3КИ = МассивПолей[2];
			КонецЕсли;
			Если	МассивПолей.Количество()	>	3	тогда
				СтрокаКИ.Поле4КИ = МассивПолей[3];
			КонецЕсли;
			Если	МассивПолей.Количество()	>	4	тогда
				СтрокаКИ.Поле5КИ = МассивПолей[4];
			КонецЕсли;
			Если	МассивПолей.Количество()	>	5	тогда
				СтрокаКИ.Поле6КИ = МассивПолей[5];
			КонецЕсли;
			Если	МассивПолей.Количество()	>	6	тогда
				СтрокаКИ.Поле7КИ = МассивПолей[6];
			КонецЕсли;
			Если	МассивПолей.Количество()	>	7	тогда
				СтрокаКИ.Поле8КИ = МассивПолей[7];
			КонецЕсли;
			Если	МассивПолей.Количество()	>	8	тогда
				СтрокаКИ.Поле9КИ = МассивПолей[8];
			КонецЕсли;
			Если	МассивПолей.Количество()	>	9	тогда
				СтрокаКИ.КомментарийКИ	= МассивПолей[9];
			КонецЕсли;
			Представление = "";
			
			Если СокрЛП(СтрокаКИ.Поле1КИ) <> "" Тогда
				Представление = Представление + ", " + СокрЛП(СтрокаКИ.Поле1КИ);
			КонецЕсли;
			
			Если СокрЛП(СтрокаКИ.Поле2КИ) <> "" Тогда
				Представление = Представление + ", " + СокрЛП(СтрокаКИ.Поле2КИ);
			КонецЕсли;
			
			Если СокрЛП(СтрокаКИ.Поле3КИ) <> "" Тогда
				Представление = Представление + ", " + СокрЛП(СтрокаКИ.Поле3КИ);
			КонецЕсли;
			
			Если СокрЛП(СтрокаКИ.Поле4КИ) <> "" Тогда
				Представление = Представление + ", " + СокрЛП(СтрокаКИ.Поле4КИ);
			КонецЕсли;
			
			Если СокрЛП(СтрокаКИ.Поле5КИ) <> "" Тогда
				Представление = Представление + ", " + СокрЛП(СтрокаКИ.Поле5КИ);
			КонецЕсли;
			
			Если СокрЛП(СтрокаКИ.Поле6КИ) <> "" Тогда
				Представление = Представление + ", " + СокрЛП(СтрокаКИ.Поле6КИ);
			КонецЕсли;
			
			Если СокрЛП(СтрокаКИ.Поле7КИ) <> "" Тогда
				Представление = Представление + ", дом № " + СокрЛП(СтрокаКИ.Поле7КИ);
			КонецЕсли;
			
			Если СокрЛП(СтрокаКИ.Поле8КИ) <> "" Тогда
				Представление = Представление + ", корпус " + СокрЛП(СтрокаКИ.Поле8КИ);
			КонецЕсли;
			
			Если СокрЛП(СтрокаКИ.Поле9КИ) <> "" Тогда
				Представление = Представление + ", кв." + СокрЛП(СтрокаКИ.Поле9КИ);
			КонецЕсли;
			
			Если СтрДлина(Представление) > 2 Тогда
				Представление = Сред(Представление, 3);
			КонецЕсли;
			СтрокаКИ.ПредставлениеКИ = Представление
		ИначеЕсли	ТипВидКИ.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон	тогда
			СтрокаКИ	=	КИОбъекта.Добавить();
			СтрокаКИ.ТипВидКИ	= ТипВидКИ;
			МассивПолей	=	ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(Ответ,	"¤");
			Если	МассивПолей.Количество()	>	0	тогда
				СтрокаКИ.Поле1КИ	= МассивПолей[0];
			КонецЕсли;
			Если	МассивПолей.Количество()	>	1	тогда
				СтрокаКИ.Поле2КИ	= МассивПолей[1];
			КонецЕсли;
			Если	МассивПолей.Количество()	>	2	тогда
				СтрокаКИ.Поле3КИ	= МассивПолей[2];
			КонецЕсли;
			Если	МассивПолей.Количество()	>	3	тогда
				СтрокаКИ.Поле4КИ	= МассивПолей[3];
			КонецЕсли;
			Если	МассивПолей.Количество()	>	4	тогда
				СтрокаКИ.КомментарийКИ	= МассивПолей[4];
			КонецЕсли;
			Представление = ?(Не ПустаяСтрока(СтрокаКИ.Поле1КИ),("+"+СтрокаКИ.Поле1КИ),"");
			Представление = Представление + ?((Не ПустаяСтрока(СтрокаКИ.Поле2КИ)),(ПроверкаПустойСтроки(Представление,Ложь)+"(" + СтрокаКИ.Поле2КИ + ")"),"");
			Представление = Представление + ?((Не ПустаяСтрока(СтрокаКИ.Поле3КИ)),(ПроверкаПустойСтроки(Представление,ПустаяСтрока(СтрокаКИ.Поле2КИ))+СтрокаКИ.Поле3КИ),"");
			Представление = Представление + ?((Не ПустаяСтрока(СтрокаКИ.Поле4КИ)),(ПроверкаПустойСтроки(Представление)+"доб. " + СтрокаКИ.Поле4КИ),"");
			СтрокаКИ.ПредставлениеКИ	= Представление
		ИначеЕсли ТипВидКИ.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты или 
			ТипВидКИ.Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница или 
			ТипВидКИ.Тип = Перечисления.ТипыКонтактнойИнформации.Другое тогда
			//ТипВидКИ.Тип = Перечисления.ТипыОтветаНаВопросАнкеты.МестныйТелефон или 
			//ТипВидКИ.Тип = Перечисления.ТипыОтветаНаВопросАнкеты.ПроизвольныйАдрес тогда 
			СтрокаКИ			     = КИОбъекта.Добавить();
			СтрокаКИ.ТипВидКИ	     = ТипВидКИ;
			СтрокаКИ.ПредставлениеКИ = Ответ;
			//КонецЕсли;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ОтношениеКВоинскойОбязанности тогда
			ОтношениеКВоинскойОбязанности = Ответ;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ОтношениеКВоинскомуУчету	тогда
			ОтношениеКВоинскомуУчету = Ответ;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.Годность тогда
			Годность = Ответ;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.Звание тогда
			Звание = Ответ;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.НаличиеМобпредписания тогда
			НаличиеМобпредписания = Ответ;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.Военкомат тогда
			Военкомат =	Ответ;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.ВУС тогда
			ВУС	= Ответ;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.КатегорияЗапаса тогда
			КатегорияЗапаса	= Ответ;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.Состав тогда
			Состав	= Ответ;
		ИначеЕсли ЕстьФизическиеЛица И Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.НомерКомандыПартии тогда
			НомерКомандыПартии	= Ответ;
		КонецЕсли;
	КонецЦикла; // чтение вопросов
	
	Если ЕстьКонтрагенты И ЗначениеЗаполнено(Контрагент) тогда
		Контрагент.Записать();
		ПотокВывода.ОбъектВладелец = Контрагент.Ссылка;
	КонецЕсли;
	Если ПотокВывода.Модифицированность() тогда
		ПотокВывода.Записать();
	КонецЕсли;
	
	// паспортные данные физлиц
	Если ЗначениеЗаполнено(ВидДокументаУдостоверяющегоЛичность)	или
		 ЗначениеЗаполнено(СерияДокумента) или
		 ЗначениеЗаполнено(НомерДокумента) или
		 ЗначениеЗаполнено(ДатаВыдачиДокумента) или
		 ЗначениеЗаполнено(КемВыданДокумент) или
		 ЗначениеЗаполнено(КодПодразделенияДокумента)	тогда
		НаборЗаписейПаспортныхДанных	= РегистрыСведений.ПаспортныеДанныеФизЛиц.СоздатьНаборЗаписей();
		НаборЗаписейПаспортныхДанных.Отбор.Физлицо.Значение			= ПотокВывода.Ссылка;
		НаборЗаписейПаспортныхДанных.Отбор.ФизЛицо.Использование	= Истина;
		НоваяЗапись =	НаборЗаписейПаспортныхДанных.Добавить();
		НоваяЗапись.Физлицо						= ПотокВывода.Ссылка;
		НоваяЗапись.Период						= ДатаЗаписи;
		НоваяЗапись.ДокументВид					= ВидДокументаУдостоверяющегоЛичность;
		НоваяЗапись.ДокументСерия				= СерияДокумента;
		НоваяЗапись.ДокументНомер				= НомерДокумента;
		НоваяЗапись.ДокументДатаВыдачи			= ДатаВыдачиДокумента;
		НоваяЗапись.ДокументКемВыдан			= КемВыданДокумент;
		НоваяЗапись.ДокументКодПодразделения	= КодПодразделенияДокумента;
		НаборЗаписейПаспортныхДанных.Записать();
		//СерияДокумента	= "";
		//ВидДокументаУдостоверяющегоЛичность	= "";
		//НомерДокумента		= "";
		//ДатаВыдачиДокумента	= "";
		//КемВыданДокумент	= "";
		//КодПодразделенияДокумента	= "";
	КонецЕсли;
	
	// гражданство
	Если ЕстьФизическиеЛица И ЗначениеЗаполнено(Гражданство) тогда
		НаборЗаписейГражданство	= РегистрыСведений.ГражданствоФизЛиц.СоздатьНаборЗаписей();
		НаборЗаписейГражданство.Отбор.Физлицо.Значение		= ПотокВывода.Ссылка;
		НаборЗаписейГражданство.Отбор.ФизЛицо.Использование	= Истина;
		НоваяЗапись 			= НаборЗаписейГражданство.Добавить();
		НоваяЗапись.Физлицо		= ПотокВывода.Ссылка;
		НоваяЗапись.Период		= ДатаЗаписи;
		НоваяЗапись.Страна		= Гражданство;
		НаборЗаписейГражданство.Записать();
		Гражданство			= "";
	КонецЕсли;
	
	// Семейное положение
	Если ЕстьФизическиеЛица И ЗначениеЗаполнено(СемейноеПоложение) тогда
		НаборЗаписейСемейноеПоложение	= РегистрыСведений.СемейноеПоложениеФизЛиц.СоздатьНаборЗаписей();
		НаборЗаписейСемейноеПоложение.Отбор.Физлицо.Значение		= ПотокВывода.Ссылка;
		НаборЗаписейСемейноеПоложение.Отбор.ФизЛицо.Использование	= Истина;
		НоваяЗапись 			= НаборЗаписейСемейноеПоложение.Добавить();
		НоваяЗапись.Физлицо		= ПотокВывода.Ссылка;
		НоваяЗапись.Период		= ДатаЗаписи;
		НоваяЗапись.СемейноеПоложение = СемейноеПоложение;
		НаборЗаписейСемейноеПоложение.Записать();
		СемейноеПоложение	= "";
	КонецЕсли;
	
	// воинский учет
	Если ЕстьФизическиеЛица И ЗначениеЗаполнено(ОтношениеКВоинскойОбязанности) или
		ЗначениеЗаполнено(ОтношениеКВоинскомуУчету) или
		ЗначениеЗаполнено(Годность) или
		ЗначениеЗаполнено(Звание) или
		ЗначениеЗаполнено(НаличиеМобпредписания) или
		ЗначениеЗаполнено(Военкомат) или
		ЗначениеЗаполнено(ВУС) или
		ЗначениеЗаполнено(КатегорияЗапаса) или
		ЗначениеЗаполнено(Состав) или
		ЗначениеЗаполнено(НомерКомандыПартии) тогда
		НаборЗаписейВУ								= РегистрыСведений.ВоинскийУчет.СоздатьНаборЗаписей();
		НаборЗаписейВУ.Отбор.Физлицо.Значение		= ПотокВывода.Ссылка;
		НаборЗаписейВУ.Отбор.ФизЛицо.Использование	= Истина;
		НоваяЗапись =	НаборЗаписейВУ.Добавить();
		НоваяЗапись.Физлицо		= ПотокВывода.Ссылка;
		НоваяЗапись.Период		= ДатаЗаписи;
		НоваяЗапись.ОтношениеКВоинскойОбязанности	= ОтношениеКВоинскойОбязанности;
		НоваяЗапись.ОтношениеКВоинскомуУчету		= ОтношениеКВоинскомуУчету;
		НоваяЗапись.Годность				= Годность;
		НоваяЗапись.Звание					= Звание;
		НоваяЗапись.НаличиеМобпредписания	= НаличиеМобпредписания;
		НоваяЗапись.Военкомат				= Военкомат;
		НоваяЗапись.ВУС						= ВУС;
		НоваяЗапись.КатегорияЗапаса			= КатегорияЗапаса;
		НоваяЗапись.Состав					= Состав;
		НоваяЗапись.НомерКомандыПартии		= НомерКомандыПартии;
		НаборЗаписейВУ.Записать();
		//ОтношениеКВоинскойОбязанности	= "";
		//ОтношениеКВоинскомуУчету		= "";
		//Годность				= "";
		//Звание					= "";
		//НаличиеМобпредписания	= "";
		//Военкомат				= "";
		//ВУС						= "";
	КонецЕсли;
	
	// запись контактной информации
	// контактную информацию можно записывать в контрагента, физлица и контактного лица
	Если ЕстьКонтрагенты И ПотокВывода.ЭтоНовый() и ЗначениеЗаполнено(Контрагент) тогда
		ОбъектЗагрузкиКИ = Контрагент;
	Иначе
		ОбъектЗагрузкиКИ = ПотокВывода;
	КонецЕсли;
	
	Для каждого	СтрокаКИ	из	КИОбъекта	Цикл
		Поле1КИ	= СтрокаКИ.Поле1КИ;
		Поле2КИ	= СтрокаКИ.Поле2КИ;
		Поле3КИ	= СтрокаКИ.Поле3КИ;
		Поле4КИ	= СтрокаКИ.Поле4КИ;
		Поле5КИ	= СтрокаКИ.Поле5КИ;
		Поле6КИ	= СтрокаКИ.Поле6КИ;
		Поле7КИ	= СтрокаКИ.Поле7КИ;
		Поле8КИ	= СтрокаКИ.Поле8КИ;
		Поле9КИ	= СтрокаКИ.Поле9КИ;
		Поле10КИ		= СтрокаКИ.Поле10КИ;
		КомментарийКИ	= СтрокаКИ.КомментарийКИ;
		ПредставлениеКИ	= СтрокаКИ.ПредставлениеКИ;
		ТипВидКИ		= СтрокаКИ.ТипВидКИ;
		Если 	
			ЗначениеЗаполнено(Поле1КИ)	ИЛИ
			ЗначениеЗаполнено(Поле2КИ)	ИЛИ
			ЗначениеЗаполнено(Поле3КИ)	ИЛИ
			ЗначениеЗаполнено(Поле4КИ)	ИЛИ
			ЗначениеЗаполнено(Поле5КИ)	ИЛИ
			ЗначениеЗаполнено(Поле6КИ)	ИЛИ
			ЗначениеЗаполнено(Поле7КИ)	ИЛИ
			ЗначениеЗаполнено(Поле8КИ)	ИЛИ
			ЗначениеЗаполнено(Поле9КИ)	ИЛИ
			ЗначениеЗаполнено(Поле10КИ)	ИЛИ
			ЗначениеЗаполнено(ПредставлениеКИ) тогда
			
			НаборЗаписейКИ	=	РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
			НаборЗаписейКИ.Отбор.Объект.Значение		= ОбъектЗагрузкиКИ.Ссылка;
			НаборЗаписейКИ.Отбор.Объект.Использование	= Истина;
			НаборЗаписейКИ.Отбор.Тип.Значение			= ТипВидКИ.Тип;
			НаборЗаписейКИ.Отбор.Тип.Использование		= Истина;
			НаборЗаписейКИ.Отбор.Вид.Значение			= ТипВидКИ;
			НаборЗаписейКИ.Отбор.Вид.Использование		= Истина;
			НоваяЗапись 		= НаборЗаписейКИ.Добавить();
			НоваяЗапись.Объект	= ОбъектЗагрузкиКИ.Ссылка;
			НоваяЗапись.Тип		= ТипВидКИ.Тип;
			НоваяЗапись.Вид		= ТипВидКИ;
			НоваяЗапись.Поле1	= Поле1КИ;
			НоваяЗапись.Поле2	= Поле2КИ;
			НоваяЗапись.Поле3	= Поле3КИ;
			НоваяЗапись.Поле4	= Поле4КИ;
			НоваяЗапись.Поле5	= Поле5КИ;
			НоваяЗапись.Поле6	= Поле6КИ;
			НоваяЗапись.Поле7	= Поле7КИ;
			НоваяЗапись.Поле8	= Поле8КИ;
			НоваяЗапись.Поле9	= Поле9КИ;
			НоваяЗапись.Поле10	= Поле10КИ;
			НоваяЗапись.Комментарий		= КомментарийКИ;
			Если ТипВидКИ.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес тогда
				НоваяЗапись.Представление	= УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдреса(НоваяЗапись);
			ИначеЕсли ТипВидКИ.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон тогда
				УправлениеКонтактнойИнформацией.СформироватьПредставлениеТелефона(НоваяЗапись);
			Иначе
				НоваяЗапись.Представление	= ПредставлениеКИ;
			КонецЕсли;
			НаборЗаписейКИ.Записать();
		КонецЕсли;
	КонецЦикла; // по строкам объекта
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

ЕстьФизическиеЛица	= Метаданные.Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ЗначенияПеречисления.Найти("ФизическиеЛица") <> Неопределено;
ЕстьКонтрагенты		= Метаданные.Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ЗначенияПеречисления.Найти("Контрагенты") <> Неопределено;
ЕстьКонтактныеЛица	= Метаданные.Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ЗначенияПеречисления.Найти("КонтактныеЛица") <> Неопределено;
