#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "ТоварыНаСкладах";
	
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	//УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Ложь;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	// Описание исходного текста запроса.
	// При написании текста запроса рекомендуется следовать правилам, описанным в следующем шаблоне текста запроса:
	//
	//ВЫБРАТЬ // РАЗРЕШЕННЫЕ
	//	<ПсевдонимТаблицы.Поле> КАК <ПсевдонимПоля>,
	//	ПРЕДСТАВЛЕНИЕ(<ПсевдонимТаблицы>.<Поле>),
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//{ВЫБРАТЬ
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//ИЗ
	//	<Таблица> КАК <ПсевдонимТаблицы>
	//	//СОЕДИНЕНИЯ
	//{ГДЕ
	//	<ПсевдонимТаблицы.Поле>.* КАК <ПсевдонимПоля>,
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>,
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//{УПОРЯДОЧИТЬ ПО
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//УПОРЯДОЧИТЬ_СВОЙСТВА
	//	//УПОРЯДОЧИТЬ_КАТЕГОРИИ
	//}
	//ИТОГИ
	//	АГРЕГАТНАЯ_ФУНКЦИЯ(<ПсевдонимПоказателя>)
	//	//ИТОГИ_СВОЙСТВА
	//	//ИТОГИ_КАТЕГОРИИ
	//ПО
	//	ОБЩИЕ
	//{ИТОГИ ПО
	//	<ПсевдонимПоля>.*,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостояниеДенежныхСредств.Организация,
	|	СостояниеДенежныхСредств.ВидДенежныхСредств,
	|	СостояниеДенежныхСредств.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	СостояниеДенежныхСредств.БанковскийСчетКасса.ВалютаДенежныхСредств КАК ВалютаСчетаКассы,
	|	ПРЕДСТАВЛЕНИЕ(СостояниеДенежныхСредств.Организация),
	|	ПРЕДСТАВЛЕНИЕ(СостояниеДенежныхСредств.ВидДенежныхСредств),
	|	ПРЕДСТАВЛЕНИЕ(СостояниеДенежныхСредств.БанковскийСчетКасса),
	|	ПРЕДСТАВЛЕНИЕ(СостояниеДенежныхСредств.БанковскийСчетКасса.ВалютаДенежныхСредств) КАК ВалютаСчетаКассыПредставление,
	|	СостояниеДенежныхСредств.ТекущийОстатокВВалютеДенСредств КАК ТекущийОстатокВВалютеДенСредств,
	|	СостояниеДенежныхСредств.ТекущийОстатокВУпрВалюте КАК ТекущийОстатокВУпрВалюте,
	|	СостояниеДенежныхСредств.СуммаКСписаниюВВалютеДенСредств КАК СуммаКСписаниюВВалютеДенСредств,
	|	СостояниеДенежныхСредств.СуммаКСписаниюВУпрВалюте КАК СуммаКСписаниюВУпрВалюте,
	|	СостояниеДенежныхСредств.СуммаКПолучениюВВалютеДенСредств КАК СуммаКПолучениюВВалютеДенСредств,
	|	СостояниеДенежныхСредств.СуммаКПолучениюВУпрВалюте КАК СуммаКПолучениюВУпрВалюте,
	|	СостояниеДенежныхСредств.СуммаВРезервеВВалютеДенСредств КАК СуммаВРезервеВВалютеДенСредств,
	|	СостояниеДенежныхСредств.СуммаВРезервеВУпрВалюте КАК СуммаВРезервеВУпрВалюте,
	|	СостояниеДенежныхСредств.ТекущийОстатокВУпрВалюте - СостояниеДенежныхСредств.СуммаКСписаниюВУпрВалюте + СостояниеДенежныхСредств.СуммаКПолучениюВУпрВалюте - СостояниеДенежныхСредств.СуммаВРезервеВУпрВалюте КАК СуммаСвободныйОстатокВУпрВалюте,
	|	СостояниеДенежныхСредств.ТекущийОстатокВВалютеДенСредств - СостояниеДенежныхСредств.СуммаКСписаниюВВалютеДенСредств + СостояниеДенежныхСредств.СуммаКПолучениюВВалютеДенСредств - СостояниеДенежныхСредств.СуммаВРезервеВВалютеДенСредств КАК СуммаСвободныйОстатокВВалютеДенСредств
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
	|{ВЫБРАТЬ
	|	Организация.*,
	|	ВалютаСчетаКассы,
	|	БанковскийСчетКасса.*,
	|	ТекущийОстатокВВалютеДенСредств,
	|	ТекущийОстатокВУпрВалюте,
	|	СуммаКСписаниюВВалютеДенСредств,
	|	СуммаКСписаниюВУпрВалюте,
	|	СуммаКПолучениюВВалютеДенСредств,
	|	СуммаКПолучениюВУпрВалюте,
	|	СуммаВРезервеВВалютеДенСредств,
	|	СуммаВРезервеВУпрВалюте,
	|	СуммаСвободныйОстатокВУпрВалюте,
	|	СуммаСвободныйОстатокВВалютеДенСредств
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}

	|ИЗ
	|	(ВЫБРАТЬ
	|		ДенежныеСредстваОстатки.Организация КАК Организация,
	|		ДенежныеСредстваОстатки.ВидДенежныхСредств КАК ВидДенежныхСредств,
	|		ДенежныеСредстваОстатки.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|		ДенежныеСредстваОстатки.СуммаОстаток КАК ТекущийОстатокВВалютеДенСредств,
	|		ДенежныеСредстваОстатки.СуммаУпрОстаток КАК ТекущийОстатокВУпрВалюте,
	|		0 КАК СуммаКСписаниюВВалютеДенСредств,
	|		0 КАК СуммаКСписаниюВУпрВалюте,
	|		0 КАК СуммаКПолучениюВВалютеДенСредств,
	|		0 КАК СуммаКПолучениюВУпрВалюте,
	|		0 КАК СуммаВРезервеВВалютеДенСредств,
	|		0 КАК СуммаВРезервеВУпрВалюте
	|	ИЗ
	|		РегистрНакопления.ДенежныеСредства.Остатки(&ДатаКон, ) КАК ДенежныеСредстваОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДенежныеСредстваКСписаниюОстатки.Организация,
	|		ДенежныеСредстваКСписаниюОстатки.ВидДенежныхСредств,
	|		ДенежныеСредстваКСписаниюОстатки.БанковскийСчетКасса,
	|		0,
	|		0,
	|		ДенежныеСредстваКСписаниюОстатки.СуммаОстаток,
	|		ДенежныеСредстваКСписаниюОстатки.СуммаОстаток * КурсыВалют.Курс / КурсыВалют.Кратность / КурсУпрВалюты.Курс * КурсУпрВалюты.Кратность,
	|		0,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.ДенежныеСредстваКСписанию.Остатки(&ДатаКон, ) КАК ДенежныеСредстваКСписаниюОстатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаКон, ) КАК КурсыВалют
	|			ПО КурсыВалют.Валюта = ДенежныеСредстваКСписаниюОстатки.БанковскийСчетКасса.ВалютаДенежныхСредств,
	|		РегистрСведений.КурсыВалют.СрезПоследних(&ДатаКон, Валюта = &ВалютаУправленческогоУчета) КАК КурсУпрВалюты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДенежныеСредстваКПолучениюОстатки.Организация,
	|		ДенежныеСредстваКПолучениюОстатки.ВидДенежныхСредств,
	|		ДенежныеСредстваКПолучениюОстатки.БанковскийСчетКасса,
	|		0,
	|		0,
	|		0,
	|		0,
	|		ДенежныеСредстваКПолучениюОстатки.СуммаОстаток,
	|		ДенежныеСредстваКПолучениюОстатки.СуммаОстаток * КурсыВалют.Курс / КурсыВалют.Кратность / КурсУпрВалюты.Курс * КурсУпрВалюты.Кратность,
	|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.ДенежныеСредстваКПолучению.Остатки(&ДатаКон, ) КАК ДенежныеСредстваКПолучениюОстатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаКон, ) КАК КурсыВалют
	|			ПО КурсыВалют.Валюта = ДенежныеСредстваКПолучениюОстатки.БанковскийСчетКасса.ВалютаДенежныхСредств,
	|		РегистрСведений.КурсыВалют.СрезПоследних(&ДатаКон, Валюта = &ВалютаУправленческогоУчета) КАК КурсУпрВалюты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДенежныеСредстваВРезервеОстатки.Организация,
	|		ДенежныеСредстваВРезервеОстатки.ВидДенежныхСредств,
	|		ДенежныеСредстваВРезервеОстатки.БанковскийСчетКасса,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		ДенежныеСредстваВРезервеОстатки.СуммаОстаток,
	|		ДенежныеСредстваВРезервеОстатки.СуммаОстаток * КурсыВалют.Курс / КурсыВалют.Кратность / КурсУпрВалюты.Курс * КурсУпрВалюты.Кратность
	|	ИЗ
	|		РегистрНакопления.ДенежныеСредстваВРезерве.Остатки(&ДатаКон, ) КАК ДенежныеСредстваВРезервеОстатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаКон, ) КАК КурсыВалют
	|			ПО КурсыВалют.Валюта = ДенежныеСредстваВРезервеОстатки.БанковскийСчетКасса.ВалютаДенежныхСредств,
	|		РегистрСведений.КурсыВалют.СрезПоследних(&ДатаКон, Валюта = &ВалютаУправленческогоУчета) КАК КурсУпрВалюты) КАК СостояниеДенежныхСредств
	|//СОЕДИНЕНИЯ
	|{ГДЕ
	|	СостояниеДенежныхСредств.Организация.*,
	|	СостояниеДенежныхСредств.БанковскийСчетКасса,
	|	СостояниеДенежныхСредств.ВидДенежныхСредств 				КАК ВидДенежныхСредств,
	|	СостояниеДенежныхСредств.ТекущийОстатокВВалютеДенСредств 	КАК ТекущийОстатокВВалютеДенСредств,
	|	СостояниеДенежныхСредств.БанковскийСчетКасса.ВалютаДенежныхСредств КАК ВалютаСчетаКассы,
	|	СостояниеДенежныхСредств.ТекущийОстатокВУпрВалюте 			КАК ТекущийОстатокВУпрВалюте,
	|	СостояниеДенежныхСредств.СуммаКСписаниюВВалютеДенСредств 	КАК СуммаКСписаниюВВалютеДенСредств,
	|	СостояниеДенежныхСредств.СуммаКСписаниюВУпрВалюте 			КАК СуммаКСписаниюВУпрВалюте,
	|	СостояниеДенежныхСредств.СуммаКПолучениюВВалютеДенСредств 	КАК СуммаКПолучениюВВалютеДенСредств,
	|	СостояниеДенежныхСредств.СуммаКПолучениюВУпрВалюте 			КАК СуммаКПолучениюВУпрВалюте,
	|	СостояниеДенежныхСредств.СуммаВРезервеВВалютеДенСредств 	КАК СуммаВРезервеВВалютеДенСредств,
	|	СостояниеДенежныхСредств.СуммаВРезервеВУпрВалюте 			КАК СуммаВРезервеВУпрВалюте,
	|	СостояниеДенежныхСредств.ТекущийОстатокВУпрВалюте - СостояниеДенежныхСредств.СуммаКСписаниюВУпрВалюте + СостояниеДенежныхСредств.СуммаКПолучениюВУпрВалюте - СостояниеДенежныхСредств.СуммаВРезервеВУпрВалюте КАК СуммаСвободныйОстатокВУпрВалюте,
	|	СостояниеДенежныхСредств.ТекущийОстатокВВалютеДенСредств - СостояниеДенежныхСредств.СуммаКСписаниюВВалютеДенСредств + СостояниеДенежныхСредств.СуммаКПолучениюВВалютеДенСредств - СостояниеДенежныхСредств.СуммаВРезервеВВалютеДенСредств КАК СуммаСвободныйОстатокВВалютеДенСредств
	|	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ
	|}

	|{УПОРЯДОЧИТЬ ПО
	|	Организация.*,
	|	БанковскийСчетКасса,
	|	ВидДенежныхСредств,
	|	ВалютаСчетаКассы,
    |	ТекущийОстатокВВалютеДенСредств,
	|	ТекущийОстатокВУпрВалюте,
    |	СуммаКСписаниюВВалютеДенСредств,
	|	СуммаКСписаниюВУпрВалюте,
	|	СуммаКПолучениюВВалютеДенСредств,
	|	СуммаКПолучениюВУпрВалюте,
	|	СуммаВРезервеВВалютеДенСредств,
	|	СуммаВРезервеВУпрВалюте,
	|	СуммаСвободныйОстатокВУпрВалюте,
	|	СуммаСвободныйОстатокВВалютеДенСредств
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
    |}

	|ИТОГИ
	|	СУММА(ТекущийОстатокВВалютеДенСредств),
	|	СУММА(ТекущийОстатокВУпрВалюте),
	|	СУММА(СуммаКСписаниюВВалютеДенСредств),
	|	СУММА(СуммаКСписаниюВУпрВалюте),
	|	СУММА(СуммаКПолучениюВВалютеДенСредств),
	|	СУММА(СуммаКПолучениюВУпрВалюте),
	|	СУММА(СуммаВРезервеВВалютеДенСредств),
	|	СУММА(СуммаВРезервеВУпрВалюте),
	|	СУММА(СуммаСвободныйОстатокВУпрВалюте),
	|	СУММА(СуммаСвободныйОстатокВВалютеДенСредств)
	|	//ИТОГИ_СВОЙСТВА
	|	//ИТОГИ_КАТЕГОРИИ
	|ПО
	|	ОБЩИЕ,
	|	Организация,
	|	ВалютаСчетаКассы,
	|	БанковскийСчетКасса
	|{ИТОГИ ПО
	|	Организация,
	|	ВалютаСчетаКассы,
	|	БанковскийСчетКасса.*
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}";

	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("СостояниеДенежныхСредств.Организация" , "Организация", "Организация", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Организации);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("БанковскийСчетКасса", "Банковский счет/касса");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВидДенежныхСредств", "Вид денежных средств");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВалютаСчетаКассы", "Валюта счета/кассы");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТекущийОстатокВВалютеДенСредств", "Остаток в валюте банковского счета/кассы");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТекущийОстатокВУпрВалюте", "Остаток в валюте упр. учета");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаКСписаниюВВалютеДенСредств", "К списанию в валюте банковского счета/кассы");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаКСписаниюВУпрВалюте", "К списанию в валюте упр. учета");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаКПолучениюВВалютеДенСредств", "К получению в валюте банковского счета/кассы");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаКПолучениюВУпрВалюте", "К получению в валюте упр. учета");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаВРезервеВВалютеДенСредств", "В резерве в валюте банковского счета/кассы");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаВРезервеВУпрВалюте", "В резерве в валюте упр. учета");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаСвободныйОстатокВВалютеДенСредств", "Свободный остаток в валюте банковского счета/кассы");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаСвободныйОстатокВУпрВалюте", "Свободный остаток в валюте упр. учета");

	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	УниверсальныйОтчет.ДобавитьПоказатель("ТекущийОстатокВВалютеДенСредств", "Остаток в валюте банковского счета/кассы", Истина, "ЧЦ = 15 ; ЧДЦ = 2");
	УниверсальныйОтчет.ДобавитьПоказатель("ТекущийОстатокВУпрВалюте", "Остаток в валюте упр. учета", Ложь, "ЧЦ = 15 ; ЧДЦ = 2");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаКСписаниюВВалютеДенСредств", "К списанию в валюте банковского счета/кассы", Истина, "ЧЦ = 15 ; ЧДЦ = 2");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаКСписаниюВУпрВалюте", "К списанию в валюте упр. учета", Ложь, "ЧЦ = 15 ; ЧДЦ = 2");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаКПолучениюВВалютеДенСредств", "К получению в валюте банковского счета/кассы", Истина, "ЧЦ = 15 ; ЧДЦ = 2");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаКПолучениюВУпрВалюте", "К получению в валюте упр. учета", Ложь, "ЧЦ = 15 ; ЧДЦ = 2");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаВРезервеВВалютеДенСредств", "В резерве в валюте банковского счета/кассы", Истина, "ЧЦ = 15 ; ЧДЦ = 2");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаВРезервеВУпрВалюте", "В резерве в валюте упр. учета", Ложь, "ЧЦ = 15 ; ЧДЦ = 2");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаСвободныйОстатокВВалютеДенСредств", "Свободный остаток в валюте банковского счета/кассы", Истина, "ЧЦ = 15 ; ЧДЦ = 2");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаСвободныйОстатокВУпрВалюте", "Свободный остаток в валюте упр. учета", Ложь, "ЧЦ = 15 ; ЧДЦ = 2");
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Организация");
	УниверсальныйОтчет.ДобавитьОтбор("БанковскийСчетКасса");
	УниверсальныйОтчет.ДобавитьОтбор("ВидДенежныхСредств");
	
	// Добавление предопределенных полей порядка отчета.
	// Необходимо вызывать для каждого добавляемого поля порядка.
	// УниверсальныйОтчет.ДобавитьПорядок(<ПутьКДанным>);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДаннымРодитель>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения( "ТекущийОстатокВВалютеДенСредств",        "БанковскийСчетКасса");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения( "СуммаКСписаниюВВалютеДенСредств",        "БанковскийСчетКасса");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения( "СуммаКПолучениюВВалютеДенСредств",       "БанковскийСчетКасса");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения( "СуммаВРезервеВВалютеДенСредств",         "БанковскийСчетКасса");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения( "СуммаСвободныйОстатокВВалютеДенСредств", "БанковскийСчетКасса");
	
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения( "ТекущийОстатокВВалютеДенСредств",        "ВалютаСчетКассы");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения( "СуммаКСписаниюВВалютеДенСредств",        "ВалютаСчетКассы");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения( "СуммаКПолучениюВВалютеДенСредств",       "ВалютаСчетКассы");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения( "СуммаВРезервеВВалютеДенСредств",         "ВалютаСчетКассы");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения( "СуммаСвободныйОстатокВВалютеДенСредств", "ВалютаСчетКассы");
	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>, <Размещение>, <Положение>);
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ВалютаУправленческогоУчета", глЗначениеПеременной("ВалютаУправленческогоУчета"));
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);

КонецПроцедуры // СформироватьОтчет()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = Неопределено;
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли
