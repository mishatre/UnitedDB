////////////////////////////////////////////////////////////////////////////////
// ЭлектронныеДокументыКлиентПереопределяемый: механизм обмена электронными документами.
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

 // Переопределяет сообщение о нехватке прав доступа
//
// Параметры:
//  ТекстСообщения - строка сообщения
//
Процедура ПодготовитьТекстСообщенияОНарушенииПравДоступа(ТекстСообщения) Экспорт
	
	// При необходимости можно переопределить или дополнить текст сообщения
	
КонецПроцедуры

// Производит заполнение реквизитов формы переданными значениями 
//
// Параметры:
//  Источник - Управляемая форма
//  ЗначениеЗаполнения - ссылка на хранилище
//
Процедура ОткрытьФормуВыбораПользователей(ЭтаФорма, ТекущийПользователь) Экспорт
	
	ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", , ЭтаФорма);	
	
КонецПроцедуры

// Проверяет на модифицированность объект в случае обычного приложения.
//
// Параметры:
//  Объект - объекта, модифицированность которого надо проверить;
//  Форма - форма объекта, модифицированность которого надо проверить.
//  Результат - Булево - результат проверки модифицированности формы объекта.
//
Процедура ОбъектМодифицирован(Объект, Форма, Результат) Экспорт
	
#Если ТолстыйКлиентОбычноеПриложение Тогда
	Результат = Ложь;
	
	Если Форма.Модифицированность ИЛИ НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Результат = Истина;
		
		Если Объект.Метаданные().Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить И НЕ Объект.Проведен Тогда
			Текст = НСтр("ru = 'Перед формированием ЭД документ необходимо провести.'");
		Иначе
			Текст = НСтр("ru = 'Перед формированием ЭД документ необходимо записать.'");
		КонецЕсли;
		
		ОбщегоНазначения.СообщитьИнформациюПользователю(Текст);
		
	КонецЕсли;
#КонецЕсли

КонецПроцедуры

// Проверяет на использование в прикладном решении библиотеки интернет поддержки пользователей.
//
// Параметры:
//  Использование - булево - признак использования библиотеки МПП..
//
Процедура ПроверитьИспользованиеИнтернетПоддержкаПользователей(Использование) Экспорт
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Использование = Ложь;
	#КонецЕсли
	
КонецПроцедуры

// Вспомогательная процедура для запуска метода из библиотеки интернет поддержки пользователей.
//
Процедура СтартоватьМеханизмРаботыСОператоромЭДО(СертификатАбонента, Организация, ВариантБизнесПроцесса,
	ИдентификаторОрганизации = "", ПарольСертификатаЭЦП = Неопределено) Экспорт
	
	// Не используется
	
КонецПроцедуры

// Проверяет выполняются ли необходимые автоматические условия для подписи документа.
// 
// Параметры:
//  ЭлектронныйДокумент - ссылка на присоединенный файл.
//
Функция ЭлектронныйДокументГотовКПодписи(ЭлектронныйДокумент) Экспорт
	
	Результат = Истина;
	
	Возврат Результат;
	
КонецФункции

// Заполняет адрес хранилища с таблицей значений - каталога товаров
//
// Параметры:
//  АдресВоВременномХранилище - адрес хранения каталога товаров;
//  ИдентификаторФормы - уникальный  идентификатор формы, вызвавшей функцию.
//
Процедура ПоместитьКаталогТоваровВоВременноеХранилище(АдресВоВременномХранилище, ИдентификаторФормы) Экспорт
	
	ПараметрыФормы = Новый Структура("УникальныйИдентификатор, ЗаголовокКнопкиПеренести", ИдентификаторФормы, "Отправить");
	АдресВоВременномХранилище = ОткрытьФормуМодально("Обработка.ПодборНоменклатурыПоОтбору.Форма.Форма", ПараметрыФормы);
	
КонецПроцедуры

// Выполняет интерактивное проведение документов перед формированием ЭД.
// Если есть непроведенные документы, предлагает выполнить проведение. Спрашивает
// пользователя о продолжении, если какие-то из документов не провелись и имеются проведенные.
//
// Параметры
//  ДокументыМассив - Массив           - ссылки на документы, которые требуется провести перед печатью.
//                                       После выполнения функции из массива исключаются непроведенные документы.
//  ДокументыПроведены - Булево - возвращаемый параметр, признак что документы проведены
//  ФормаИсточник   - УправляемаяФорма - форма, из которой было вызвана команда.
//
// Возвращаемое значение:
//  Булево - есть документы для печати в параметре ДокументыМассив.
//
Процедура ПроверитьДокументыПроведены(ДокументыМассив, ДокументыПроведены, ФормаИсточник = Неопределено) Экспорт
	
	// Не используется
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Сопоставление номенклатуры

// В зависимости от прикладного решения определяет момент открытия формы сопоставления номенклатуры
//
//  Параметры:
//  СопоставлятьНоменклатуру - <Булево> - Истина - открывать форму сопоставления до заполнения документа, Ложь - в обратном порядке
//  Истина для УПП, БП
//  Ложь для УТ
//
Процедура СопоставлятьНоменклатуруПередЗаполнениемДокумента(СопоставлятьНоменклатуру) Экспорт
	
	СопоставлятьНоменклатуру = Истина;
	
КонецПроцедуры

// Находит элемент номенклатуры поставщика и открывает форму просмотра
//
// Параметры:
//  Идентификатор - уникальный идентификатор объекта
//
Процедура ОткрытьЭлементНоменклатурыПоставщика(Идентификатор) Экспорт
	
КонецПроцедуры

Процедура ОткрытьФормуСопоставленияНоменклатуры(Элемент, Параметры, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Методы клиент - банка

// Разбирает переданный текстовый файл выписки.
//
// Параметры
//  ФайлСсылка - Строка, ссылка на временное хранилище
//  СоглашениеЭД - СправочникСсылка.СоглашениеОбИспользованииЭД - соглашение, по которому производится обмен.
//
Процедура РазобратьФайлВыписки(ФайлСсылка, СоглашениеЭД) Экспорт
	// Обмен с банками в данной конфигурации не поддерживается
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Лицензионное соглашение

// Вспомогательная процедура для запуска механизма согласия пользователя с условиями лицензионного соглашения.
//
Процедура ЗапроситьСогласиеСУсловиямиЛицензионногоСоглашения(СогласенСУсловиями) Экспорт
	
КонецПроцедуры

Процедура УстановитьОтображениеПредупреждения(ИмяЭлемента, Форма) Экспорт
	Если ЗначениеЗаполнено(Форма.Объект[ИмяЭлемента]) Тогда
		Форма.Элементы[ИмяЭлемента].ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
	Иначе
		Форма.Элементы[ИмяЭлемента].ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Авто;
	КонецЕсли;
КонецПроцедуры

