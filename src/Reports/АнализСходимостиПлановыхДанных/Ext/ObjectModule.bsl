#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		
		УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
		
	ИначеЕсли ДанныеОтчета.Количество() = 0 Тогда
		
		НоваяСтрока = ДанныеОтчета.Добавить();
		НоваяСтрока.ТипДанных = Перечисления.ВидыПланирования.Продажи;
		
		НоваяСтрока = ДанныеОтчета.Добавить();
		НоваяСтрока.ТипДанных = Перечисления.ВидыПланирования.Закупки;
		
	КонецЕсли;
	
	ТекстЗапроса = ПолучитьТекстЗапроса();
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("РезультатАнализа.Контрагент", "Контрагент", "Контрагент", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("РезультатАнализа.Договор", "Договор", "Договор", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ДоговорыКонтрагентов);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("РезультатАнализа.Заказ", "Заказ", "Заказ", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("РезультатАнализа.Номенклатура", "Номенклатура", "Номенклатура", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("РезультатАнализа.НоменклатурнаяГруппа", "НоменклатурнаяГруппа", "Номенклатурная группа", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_НоменклатурныеГруппы);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("РезультатАнализа.ХарактеристикаНоменклатуры", "ХарактеристикаНоменклатуры", "Характеристика номенклатуры", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	// Представления полей отчета.
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТипДанных", "Источник данных");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Сценарий", "Сценарий");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Проект", "Проект");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Подразделение", "Подразделение");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Контрагент", "Контрагент");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Договор", "Договор");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Заказ", "Заказ");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НоменклатурнаяГруппа", "Номенклатурная группа");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Номенклатура", "Номенклатура");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ХарактеристикаНоменклатуры", "Характеристика номенклатуры");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Ответственный", "Ответственный");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДокументПланирования", "Документ планирования");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Количество", "Количество (в единицах хранения)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоБазовыхЕдиниц", "Количество (в базовых единицах)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоЕдиницОтчетов", "Количество (в единицах отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоОтклонение", "Отклонение (в единицах хранения)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоБазовыхЕдиницОтклонение", "Отклонение (в базовых единицах)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоЕдиницОтчетовОтклонение", "Отклонение (в единицах отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоОтклонениеПроцент", "Отклонение количества (%)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтоимостьБезНДС", "Стоимость без НДС");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтоимостьБезНДСОтклонение", "Отклонение стоимости без НДС");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтоимостьБезНДСОтклонениеПроцент", "Отклонение стоимости без НДС (%)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НДС", "НДС");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НДСОтклонение", "Отклонение НДС");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НДСОтклонениеПроцент", "Отклонение НДС (%)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтоимостьСНДС", "Стоимость с НДС");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтоимостьСНДСОтклонение", "Отклонение стоимости с НДС");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтоимостьСНДСОтклонениеПроцент", "Отклонение стоимости с НДС (%)");
	
	// Добавление показателей
	УниверсальныйОтчет.ДобавитьПоказатель("Количество", "Ед. хранения", Истина, "ЧЦ=15; ЧДЦ=3", "Количество", "Количество");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоБазовыхЕдиниц", "Базовых ед.", Ложь, "ЧЦ=15; ЧДЦ=3", "Количество");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоЕдиницОтчетов", "Ед. отчетов", Ложь, "ЧЦ=15; ЧДЦ=3", "Количество");
	
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоОтклонение", "Ед. хранения", Истина, "ЧЦ=15; ЧДЦ=3", "ОтклонениеКоличества", "Отклонение количества");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоБазовыхЕдиницОтклонение", "Базовых ед.", Ложь, "ЧЦ=15; ЧДЦ=3", "ОтклонениеКоличества");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоЕдиницОтчетовОтклонение", "Ед. отчетов", Ложь, "ЧЦ=15; ЧДЦ=3", "ОтклонениеКоличества");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоОтклонениеПроцент", "%", Истина, "ЧЦ=15; ЧДЦ=2", "ОтклонениеКоличества");
	
	УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьБезНДС", "Без НДС", Ложь, "ЧЦ=15; ЧДЦ=2", "Стоимость", "Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель("НДС", "НДС", Ложь, "ЧЦ=15; ЧДЦ=2", "Стоимость", "Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьСНДС", "С НДС", Истина, "ЧЦ=15; ЧДЦ=2", "Стоимость");
	
	УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьБезНДСОтклонение", "Без НДС", Ложь, "ЧЦ=15; ЧДЦ=2", "ОтклонениеСтоимости", "Отклонение стоимости");
	УниверсальныйОтчет.ДобавитьПоказатель("НДСОтклонение", "НДС", Ложь, "ЧЦ=15; ЧДЦ=2", "ОтклонениеСтоимости");
	УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьСНДСОтклонение", "С НДС", Истина, "ЧЦ=15; ЧДЦ=2", "ОтклонениеСтоимости");
	
	УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьБезНДСОтклонениеПроцент", "Без НДС, %", Ложь, "ЧЦ=15; ЧДЦ=2", "ОтклонениеСтоимости");
	УниверсальныйОтчет.ДобавитьПоказатель("НДСОтклонениеПроцент", "НДС, %", Ложь, "ЧЦ=15; ЧДЦ=2", "ОтклонениеСтоимости");
	УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьСНДСОтклонениеПроцент", "С НДС, %", Истина, "ЧЦ=15; ЧДЦ=2", "ОтклонениеСтоимости");
	
	// Добавление предопределенных группировок строк отчета.
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Подразделение");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Номенклатура");
	
	// Добавление предопределенных группировок колонок отчета.
	УниверсальныйОтчет.ДобавитьИзмерениеКолонки("ТипДанных");
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("Номенклатура");
	
	// Добавление предопределенных полей порядка отчета.
	// Необходимо вызывать для каждого добавляемого поля порядка.
	// УниверсальныйОтчет.ДобавитьПорядок(<ПутьКДанным>);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДаннымРодитель>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>, <Размещение>, <Положение>);
	
КонецПроцедуры // УстановитьНачальныеНастройки()

Функция ПолучитьТекстЗапроса() Экспорт
	
	ТекстЗапроса = "";
	
	Для каждого СравниваемыеДанные из ДанныеОтчета Цикл
		
		ДобавитьПлан_План(ТекстЗапроса, СравниваемыеДанные, ДанныеОтчета[0]);
			
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|{УПОРЯДОЧИТЬ ПО
	|	ТипДанных,
	|	Сценарий.*,
	|	Проект.*,
	|	Подразделение.*,
	|	Контрагент.*,
	|	Договор.*,
	|	Заказ.*,
	|	НоменклатурнаяГруппа.*,
	|	Номенклатура.*,
	|	ХарактеристикаНоменклатуры.*,
	|	Ответственный.*,
	|	Регистратор.*,
	|	Период,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	Количество,
	|	КоличествоБазовыхЕдиниц,
	|	КоличествоЕдиницОтчетов,
	|	КоличествоОтклонение,
	|	КоличествоБазовыхЕдиницОтклонение,
	|	КоличествоЕдиницОтчетовОтклонение,
	|	КоличествоОтклонениеПроцент,
	|	СтоимостьБезНДС,
	|	НДС,
	|	СтоимостьСНДС,
	|	СтоимостьБезНДСОтклонение,
	|	СтоимостьБезНДСОтклонениеПроцент,
	|	НДСОтклонение,
	|	НДСОтклонениеПроцент,
	|	СтоимостьСНДСОтклонение,
	|	СтоимостьСНДСОтклонениеПроцент
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(КоличествоБазовыхЕдиниц),
	|	СУММА(КоличествоЕдиницОтчетов),
	|	СУММА(КоличествоОтклонение),
	|	СУММА(КоличествоБазовыхЕдиницОтклонение),
	|	СУММА(КоличествоЕдиницОтчетовОтклонение),
	|	ВЫБОР КОГДА ЕСТЬNULL(СУММА(КоличествоОтклонение), 0) = 0 ТОГДА
	|		0
	|	ИНАЧЕ
	|		ВЫБОР КОГДА ЕСТЬNULL(СУММА(Количество), 0) = 0 ТОГДА
	|			- 100
	|		ИНАЧЕ
	|			ВЫБОР КОГДА (СУММА(Количество) - СУММА(КоличествоОтклонение)) = 0 ТОГДА
	|				""-""
	|			ИНАЧЕ
	|				СУММА(КоличествоОтклонение) * 100 / (СУММА(Количество) - СУММА(КоличествоОтклонение))
	|			КОНЕЦ
	|		КОНЕЦ
	|	КОНЕЦ КАК КоличествоОтклонениеПроцент,
	|	СУММА(СтоимостьБезНДС),
	|	СУММА(СтоимостьБезНДСОтклонение),
	|	ВЫБОР КОГДА ЕСТЬNULL(СУММА(СтоимостьБезНДСОтклонение), 0) = 0 ТОГДА
	|		0
	|	ИНАЧЕ
	|		ВЫБОР КОГДА ЕСТЬNULL(СУММА(СтоимостьБезНДС), 0) = 0 ТОГДА
	|			- 100
	|		ИНАЧЕ
	|			ВЫБОР КОГДА (СУММА(СтоимостьБезНДС) - СУММА(СтоимостьБезНДСОтклонение)) = 0 ТОГДА
	|				""-""
	|			ИНАЧЕ
	|				СУММА(СтоимостьБезНДСОтклонение) * 100 / (СУММА(СтоимостьБезНДС) - СУММА(СтоимостьБезНДСОтклонение))
	|			КОНЕЦ
	|		КОНЕЦ
	|	КОНЕЦ КАК СтоимостьБезНДСОтклонениеПроцент,
	|	СУММА(НДС),
	|	СУММА(НДСОтклонение),
	|	ВЫБОР КОГДА ЕСТЬNULL(СУММА(НДСОтклонение), 0) = 0 ТОГДА
	|		0
	|	ИНАЧЕ
	|		ВЫБОР КОГДА ЕСТЬNULL(СУММА(НДС), 0) = 0 ТОГДА
	|			- 100
	|		ИНАЧЕ
	|			ВЫБОР КОГДА (СУММА(НДС) - СУММА(НДСОтклонение)) = 0 ТОГДА
	|				""-""
	|			ИНАЧЕ
	|				СУММА(НДСОтклонение) * 100 / (СУММА(НДС) - СУММА(НДСОтклонение))
	|			КОНЕЦ
	|		КОНЕЦ
	|	КОНЕЦ КАК НДСОтклонениеПроцент,
	|	СУММА(СтоимостьСНДС),
	|	СУММА(СтоимостьСНДСОтклонение),
	|	ВЫБОР КОГДА ЕСТЬNULL(СУММА(СтоимостьСНДСОтклонение), 0) = 0 ТОГДА
	|		0
	|	ИНАЧЕ
	|		ВЫБОР КОГДА ЕСТЬNULL(СУММА(СтоимостьСНДС), 0) = 0 ТОГДА
	|			- 100
	|		ИНАЧЕ
	|			ВЫБОР КОГДА (СУММА(СтоимостьСНДС) - СУММА(СтоимостьСНДСОтклонение)) = 0 ТОГДА
	|				""-""
	|			ИНАЧЕ
	|				СУММА(СтоимостьСНДСОтклонение) * 100 / (СУММА(СтоимостьСНДС) - СУММА(СтоимостьСНДСОтклонение))
	|			КОНЕЦ
	|		КОНЕЦ
	|	КОНЕЦ КАК СтоимостьСНДСОтклонениеПроцент
	|	//ИТОГИ_СВОЙСТВА
	|	//ИТОГИ_КАТЕГОРИИ
	|ПО
	|	ОБЩИЕ
	|{ИТОГИ ПО
	|	ТипДанных,
	|	Сценарий.*,
	|	Проект.*,
	|	Подразделение.*,
	|	Контрагент.*,
	|	Договор.*,
	|	Заказ.*,
	|	НоменклатурнаяГруппа.*,
	|	Номенклатура.*,
	|	ХарактеристикаНоменклатуры.*,
	|	Ответственный.*,
	|	Регистратор.*,
	|	Период,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}";
		
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапроса()

// Эталонные данные - "План", текущие данные - "План"
Процедура ДобавитьПлан_План(ТекстЗапроса, СравниваемыеДанные, ЭталонныеДанные)
	
	НомерСтроки = СравниваемыеДанные.НомерСтроки;
	
	Если ЭталонныеДанные.ТипДанных = Перечисления.ВидыПланирования.Продажи Тогда
			
		ИмяРегистраЭталонныеДанные = "ПланыПродаж";
			
	ИначеЕсли ЭталонныеДанные.ТипДанных = Перечисления.ВидыПланирования.Закупки Тогда
			
		ИмяРегистраЭталонныеДанные = "ПланыЗакупок";
			
	КонецЕсли;
	
	Если СравниваемыеДанные.ТипДанных = Перечисления.ВидыПланирования.Продажи Тогда
			
		ИмяРегистраТекущиеДанные = "ПланыПродаж";
			
	ИначеЕсли СравниваемыеДанные.ТипДанных = Перечисления.ВидыПланирования.Закупки Тогда
			
		ИмяРегистраТекущиеДанные = "ПланыЗакупок";
			
	КонецЕсли;
	
	Если НомерСтроки > 1 Тогда
			
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
			
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ " + ?(ПустаяСтрока(ТекстЗапроса), "РАЗРЕШЕННЫЕ", "") + "
	|	&ТипДанных" + Формат(НомерСтроки, "ЧГ=0") + " КАК ТипДанных,
	|	РезультатАнализа.Сценарий КАК Сценарий,
	|	ПРЕДСТАВЛЕНИЕ(РезультатАнализа.Сценарий) КАК СценарийПредставление,
	|	РезультатАнализа.Проект КАК Проект,
	|	ПРЕДСТАВЛЕНИЕ(РезультатАнализа.Проект) КАК ПроектПредставление,
	|	РезультатАнализа.Подразделение КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕ(РезультатАнализа.Подразделение) КАК ПодразделениеПредставление,
	|	РезультатАнализа.Контрагент КАК Контрагент,
	|	ПРЕДСТАВЛЕНИЕ(РезультатАнализа.Контрагент) КАК КонтрагентПредставление,
	|	РезультатАнализа.Договор КАК Договор,
	|	ПРЕДСТАВЛЕНИЕ(РезультатАнализа.Договор) КАК ДоговорПредставление,
	|	РезультатАнализа.Заказ КАК Заказ,
	|	ПРЕДСТАВЛЕНИЕ(РезультатАнализа.Заказ) КАК ЗаказПредставление,
	|	РезультатАнализа.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ПРЕДСТАВЛЕНИЕ(РезультатАнализа.НоменклатурнаяГруппа) КАК НоменклатурнаяГруппаПредставление,
	|	РезультатАнализа.Номенклатура КАК Номенклатура,
	|	ПРЕДСТАВЛЕНИЕ(РезультатАнализа.Номенклатура) КАК НоменклатураПредставление,
	|	РезультатАнализа.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(РезультатАнализа.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатурыПредставление,
	|	РезультатАнализа.Ответственный КАК Ответственный,
	|	ПРЕДСТАВЛЕНИЕ(РезультатАнализа.Ответственный) КАК ОтветственныйПредставление,
	|	РезультатАнализа.Регистратор КАК Регистратор,
	|	ПРЕДСТАВЛЕНИЕ(РезультатАнализа.Регистратор) КАК РегистраторПредставление,
	|	РезультатАнализа.Период КАК Период,
	|	РезультатАнализа.ПериодДень КАК ПериодДень,
	|	РезультатАнализа.ПериодНеделя КАК ПериодНеделя,
	|	РезультатАнализа.ПериодДекада КАК ПериодДекада,
	|	РезультатАнализа.ПериодМесяц КАК ПериодМесяц,
	|	РезультатАнализа.ПериодКвартал КАК ПериодКвартал,
	|	РезультатАнализа.ПериодПолугодие КАК ПериодПолугодие,
	|	РезультатАнализа.ПериодГод КАК ПериодГод,
	|	РезультатАнализа.Количество КАК Количество,
	|	РезультатАнализа.КоличествоБазовыхЕдиниц КАК КоличествоБазовыхЕдиниц,
	|	РезультатАнализа.КоличествоЕдиницОтчетов КАК КоличествоЕдиницОтчетов,
	|	РезультатАнализа.КоличествоОтклонение КАК КоличествоОтклонение,
	|	РезультатАнализа.КоличествоБазовыхЕдиницОтклонение КАК КоличествоБазовыхЕдиницОтклонение,
	|	РезультатАнализа.КоличествоЕдиницОтчетовОтклонение КАК КоличествоЕдиницОтчетовОтклонение,
	|	ВЫБОР
	|		КОГДА РезультатАнализа.КоличествоОтклонение = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РезультатАнализа.Количество = 0
	|					ТОГДА -100
	|				ИНАЧЕ ВЫБОР
	|						КОГДА РезультатАнализа.Количество - РезультатАнализа.КоличествоОтклонение = 0
	|							ТОГДА ""-""
	|						ИНАЧЕ РезультатАнализа.КоличествоОтклонение * 100 / РезультатАнализа.Количество - РезультатАнализа.КоличествоОтклонение
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоОтклонениеПроцент,
	|	РезультатАнализа.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	РезультатАнализа.НДС КАК НДС,
	|	РезультатАнализа.СтоимостьСНДС КАК СтоимостьСНДС,
	|	РезультатАнализа.СтоимостьБезНДСОтклонение КАК СтоимостьБезНДСОтклонение,
	|	ВЫБОР
	|		КОГДА РезультатАнализа.СтоимостьБезНДСОтклонение = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РезультатАнализа.СтоимостьБезНДС = 0
	|					ТОГДА -100
	|				ИНАЧЕ ВЫБОР
	|						КОГДА РезультатАнализа.СтоимостьБезНДС - РезультатАнализа.СтоимостьБезНДСОтклонение = 0
	|							ТОГДА ""-""
	|						ИНАЧЕ РезультатАнализа.СтоимостьБезНДСОтклонение * 100 / РезультатАнализа.СтоимостьБезНДС - РезультатАнализа.СтоимостьБезНДСОтклонение
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СтоимостьБезНДСОтклонениеПроцент,
	|	РезультатАнализа.НДСОтклонение КАК НДСОтклонение,
	|	ВЫБОР
	|		КОГДА РезультатАнализа.НДСОтклонение = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РезультатАнализа.НДС = 0
	|					ТОГДА -100
	|				ИНАЧЕ ВЫБОР
	|						КОГДА РезультатАнализа.НДС - РезультатАнализа.НДСОтклонение = 0
	|							ТОГДА ""-""
	|						ИНАЧЕ РезультатАнализа.НДСОтклонение * 100 / РезультатАнализа.НДС - РезультатАнализа.НДСОтклонение
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК НДСОтклонениеПроцент,
	|	РезультатАнализа.СтоимостьСНДСОтклонение КАК СтоимостьСНДСОтклонение,
	|	ВЫБОР
	|		КОГДА РезультатАнализа.СтоимостьСНДСОтклонение = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РезультатАнализа.СтоимостьСНДС = 0
	|					ТОГДА -100
	|				ИНАЧЕ ВЫБОР
	|						КОГДА РезультатАнализа.СтоимостьСНДС - РезультатАнализа.СтоимостьСНДСОтклонение = 0
	|							ТОГДА ""-""
	|						ИНАЧЕ РезультатАнализа.СтоимостьСНДСОтклонение * 100 / РезультатАнализа.СтоимостьСНДС - РезультатАнализа.СтоимостьСНДСОтклонение
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СтоимостьСНДСОтклонениеПроцент
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
	|{ВЫБРАТЬ
	|	Сценарий.*,
	|	Проект.*,
	|	Подразделение.*,
	|	Контрагент.*,
	|	Договор.*,
	|	Заказ.*,
	|	НоменклатурнаяГруппа.*,
	|	Номенклатура.*,
	|	ХарактеристикаНоменклатуры.*,
	|	Ответственный.*,
	|	Регистратор.*,
	|	Период,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	Количество,
	|	КоличествоБазовыхЕдиниц,
	|	КоличествоЕдиницОтчетов,
	|	КоличествоОтклонение,
	|	КоличествоБазовыхЕдиницОтклонение,
	|	КоличествоЕдиницОтчетовОтклонение,
	|	КоличествоОтклонениеПроцент,
	|	СтоимостьБезНДС,
	|	НДС,
	|	СтоимостьСНДС,
	|	СтоимостьБезНДСОтклонение,
	|	СтоимостьБезНДСОтклонениеПроцент,
	|	НДСОтклонение,
	|	НДСОтклонениеПроцент,
	|	СтоимостьСНДСОтклонение,
	|	СтоимостьСНДСОтклонениеПроцент
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|ИЗ
	|	(ВЫБРАТЬ
	|		АнализируемыеДанные.Сценарий КАК Сценарий,
	|		АнализируемыеДанные.Проект КАК Проект,
	|		АнализируемыеДанные.Подразделение КАК Подразделение,
	|		АнализируемыеДанные.Контрагент КАК Контрагент,
	|		АнализируемыеДанные.Договор КАК Договор,
	|		АнализируемыеДанные.Заказ КАК Заказ,
	|		АнализируемыеДанные.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|		АнализируемыеДанные.Номенклатура КАК Номенклатура,
	|		АнализируемыеДанные.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		АнализируемыеДанные.Ответственный КАК Ответственный,
	|		АнализируемыеДанные.Регистратор КАК Регистратор,
	|		АнализируемыеДанные.Период КАК Период,
	|		АнализируемыеДанные.ПериодДень КАК ПериодДень,
	|		АнализируемыеДанные.ПериодНеделя КАК ПериодНеделя,
	|		АнализируемыеДанные.ПериодДекада КАК ПериодДекада,
	|		АнализируемыеДанные.ПериодМесяц КАК ПериодМесяц,
	|		АнализируемыеДанные.ПериодКвартал КАК ПериодКвартал,
	|		АнализируемыеДанные.ПериодПолугодие КАК ПериодПолугодие,
	|		АнализируемыеДанные.ПериодГод КАК ПериодГод,
	|		СУММА(АнализируемыеДанные.ПланыПродажКоличествоТекущие) КАК Количество,
	|		СУММА(АнализируемыеДанные.ПланыПродажКоличествоБазовыхЕдиницТекущие) КАК КоличествоБазовыхЕдиниц,
	|		СУММА(АнализируемыеДанные.ПланыПродажКоличествоЕдиницОтчетовТекущие) КАК КоличествоЕдиницОтчетов,
	|		СУММА(АнализируемыеДанные.ПланыПродажКоличествоТекущие) - СУММА(АнализируемыеДанные.ПланыПродажКоличествоЭталонные) КАК КоличествоОтклонение,
	|		СУММА(АнализируемыеДанные.ПланыПродажКоличествоБазовыхЕдиницТекущие) - СУММА(АнализируемыеДанные.ПланыПродажКоличествоБазовыхЕдиницЭталонные) КАК КоличествоБазовыхЕдиницОтклонение,
	|		СУММА(АнализируемыеДанные.ПланыПродажКоличествоЕдиницОтчетовТекущие) - СУММА(АнализируемыеДанные.ПланыПродажКоличествоЕдиницОтчетовЭталонные) КАК КоличествоЕдиницОтчетовОтклонение,
	|		СУММА(АнализируемыеДанные.ПланыПродажСтоимостьБезНДСТекущие) КАК СтоимостьБезНДС,
	|		СУММА(АнализируемыеДанные.ПланыПродажНДСТекущие) КАК НДС,
	|		СУММА(АнализируемыеДанные.ПланыПродажСтоимостьСНДСТекущие) КАК СтоимостьСНДС,
	|		СУММА(АнализируемыеДанные.ПланыПродажСтоимостьБезНДСТекущие) - СУММА(АнализируемыеДанные.ПланыПродажСтоимостьБезНДСЭталонные) КАК СтоимостьБезНДСОтклонение,
	|		СУММА(АнализируемыеДанные.ПланыПродажНДСТекущие) - СУММА(АнализируемыеДанные.ПланыПродажНДСЭталонные) КАК НДСОтклонение,
	|		СУММА(АнализируемыеДанные.ПланыПродажСтоимостьСНДСТекущие) - СУММА(АнализируемыеДанные.ПланыПродажСтоимостьСНДСЭталонные) КАК СтоимостьСНДСОтклонение
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ПланыПродажОборотыТекущие.Сценарий КАК Сценарий,
	|			ПланыПродажОборотыТекущие.Проект КАК Проект,
	|			ПланыПродажОборотыТекущие.Подразделение КАК Подразделение,
	|			ПланыПродажОборотыТекущие.Контрагент КАК Контрагент,
	|			ПланыПродажОборотыТекущие.Договор КАК Договор,
	|			ПланыПродажОборотыТекущие.Заказ КАК Заказ,
	|			ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА ПланыПродажОборотыТекущие.Номенклатура ССЫЛКА Справочник.Номенклатура
	|						ТОГДА ПланыПродажОборотыТекущие.Номенклатура.НоменклатурнаяГруппа
	|					ИНАЧЕ ПланыПродажОборотыТекущие.Номенклатура
	|				КОНЕЦ КАК Справочник.НоменклатурныеГруппы) КАК НоменклатурнаяГруппа,
	|			ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА ПланыПродажОборотыТекущие.Номенклатура ССЫЛКА Справочник.НоменклатурныеГруппы
	|						ТОГДА &СправочникНоменклатураПустаяСсылка
	|					ИНАЧЕ ПланыПродажОборотыТекущие.Номенклатура
	|				КОНЕЦ КАК Справочник.Номенклатура) КАК Номенклатура,
	|			ПланыПродажОборотыТекущие.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|			ПланыПродажОборотыТекущие.ДокументПланирования.Ответственный КАК Ответственный,
	|			ПланыПродажОборотыТекущие.Регистратор КАК Регистратор,
	|			ПланыПродажОборотыТекущие.Период КАК Период,
	|			НАЧАЛОПЕРИОДА(ПланыПродажОборотыТекущие.Период, ДЕНЬ) КАК ПериодДень,
	|			НАЧАЛОПЕРИОДА(ПланыПродажОборотыТекущие.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	|			НАЧАЛОПЕРИОДА(ПланыПродажОборотыТекущие.Период, ДЕКАДА) КАК ПериодДекада,
	|			НАЧАЛОПЕРИОДА(ПланыПродажОборотыТекущие.Период, МЕСЯЦ) КАК ПериодМесяц,
	|			НАЧАЛОПЕРИОДА(ПланыПродажОборотыТекущие.Период, КВАРТАЛ) КАК ПериодКвартал,
	|			НАЧАЛОПЕРИОДА(ПланыПродажОборотыТекущие.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	|			НАЧАЛОПЕРИОДА(ПланыПродажОборотыТекущие.Период, ГОД) КАК ПериодГод,
	|			ПланыПродажОборотыТекущие.КоличествоОборот КАК ПланыПродажКоличествоТекущие,
	|			ПланыПродажОборотыТекущие.КоличествоОборот * ПланыПродажОборотыТекущие.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК ПланыПродажКоличествоБазовыхЕдиницТекущие,
	|			ПланыПродажОборотыТекущие.КоличествоОборот * ПланыПродажОборотыТекущие.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ЕСТЬNULL(ПланыПродажОборотыТекущие.Номенклатура.ЕдиницаДляОтчетов.Коэффициент, 1) КАК ПланыПродажКоличествоЕдиницОтчетовТекущие,
	|			0 КАК ПланыПродажКоличествоЭталонные,
	|			0 КАК ПланыПродажКоличествоБазовыхЕдиницЭталонные,
	|			0 КАК ПланыПродажКоличествоЕдиницОтчетовЭталонные,
	|			ПланыПродажОборотыТекущие.СтоимостьОборот КАК ПланыПродажСтоимостьБезНДСТекущие,
	|			ПланыПродажОборотыТекущие.НДСОборот КАК ПланыПродажНДСТекущие,
	|			ПланыПродажОборотыТекущие.СтоимостьОборот + ПланыПродажОборотыТекущие.НДСОборот КАК ПланыПродажСтоимостьСНДСТекущие,
	|			0 КАК ПланыПродажСтоимостьБезНДСЭталонные,
	|			0 КАК ПланыПродажНДСЭталонные,
	|			0 КАК ПланыПродажСтоимостьСНДСЭталонные
	|		ИЗ
	|			РегистрНакопления." + ИмяРегистраТекущиеДанные + ".Обороты(&ДатаНач" + Формат(НомерСтроки, "ЧГ=0") + ", &ДатаКон" + Формат(НомерСтроки, "ЧГ=0") + ", Регистратор, ВЫБОР КОГДА &Сценарий" + Формат(НомерСтроки, "ЧГ=0") + " = НЕОПРЕДЕЛЕНО ТОГДА ИСТИНА ИНАЧЕ Сценарий = &Сценарий" + Формат(НомерСтроки, "ЧГ=0") + " КОНЕЦ {Проект.* КАК Проект, Подразделение.* КАК Подразделение, Контрагент.* КАК Контрагент, Договор.* КАК Договор, Заказ.* КАК Заказ, ДокументПланирования.* КАК ДокументПланирования, ВЫРАЗИТЬ((ВЫБОР КОГДА Номенклатура ССЫЛКА Справочник.Номенклатура ТОГДА Номенклатура.НоменклатурнаяГруппа ИНАЧЕ Номенклатура КОНЕЦ) КАК Справочник.НоменклатурныеГруппы).* КАК НоменклатурнаяГруппа, ВЫРАЗИТЬ(Номенклатура КАК Справочник.Номенклатура).* КАК Номенклатура, ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры, ДокументПланирования.Ответственный.* КАК Ответственный}) КАК ПланыПродажОборотыТекущие
	|
	|		ОБЪЕДИНИТЬ ВСЕ
	|
	|		ВЫБРАТЬ
	|			ПланыПродажОборотыЭталонные.Сценарий КАК Сценарий,
	|			ПланыПродажОборотыЭталонные.Проект КАК Проект,
	|			ПланыПродажОборотыЭталонные.Подразделение КАК Подразделение,
	|			ПланыПродажОборотыЭталонные.Контрагент КАК Контрагент,
	|			ПланыПродажОборотыЭталонные.Договор КАК Договор,
	|			ПланыПродажОборотыЭталонные.Заказ КАК Заказ,
	|			ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА ПланыПродажОборотыЭталонные.Номенклатура ССЫЛКА Справочник.Номенклатура
	|						ТОГДА ПланыПродажОборотыЭталонные.Номенклатура.НоменклатурнаяГруппа
	|					ИНАЧЕ ПланыПродажОборотыЭталонные.Номенклатура
	|				КОНЕЦ КАК Справочник.НоменклатурныеГруппы) КАК НоменклатурнаяГруппа,
	|			ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА ПланыПродажОборотыЭталонные.Номенклатура ССЫЛКА Справочник.НоменклатурныеГруппы
	|						ТОГДА &СправочникНоменклатураПустаяСсылка
	|					ИНАЧЕ ПланыПродажОборотыЭталонные.Номенклатура
	|				КОНЕЦ КАК Справочник.Номенклатура) КАК Номенклатура,
	|			ПланыПродажОборотыЭталонные.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|			ПланыПродажОборотыЭталонные.ДокументПланирования.Ответственный КАК Ответственный,
	|			ПланыПродажОборотыЭталонные.Регистратор КАК Регистратор,
	|			ПланыПродажОборотыЭталонные.Период КАК Период,
	|			НАЧАЛОПЕРИОДА(ПланыПродажОборотыЭталонные.Период, ДЕНЬ) КАК ПериодДень,
	|			НАЧАЛОПЕРИОДА(ПланыПродажОборотыЭталонные.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	|			НАЧАЛОПЕРИОДА(ПланыПродажОборотыЭталонные.Период, ДЕКАДА) КАК ПериодДекада,
	|			НАЧАЛОПЕРИОДА(ПланыПродажОборотыЭталонные.Период, МЕСЯЦ) КАК ПериодМесяц,
	|			НАЧАЛОПЕРИОДА(ПланыПродажОборотыЭталонные.Период, КВАРТАЛ) КАК ПериодКвартал,
	|			НАЧАЛОПЕРИОДА(ПланыПродажОборотыЭталонные.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	|			НАЧАЛОПЕРИОДА(ПланыПродажОборотыЭталонные.Период, ГОД) КАК ПериодГод,
	|			0 КАК ПланыПродажКоличествоТекущие,
	|			0 КАК ПланыПродажКоличествоБазовыхЕдиницТекущие,
	|			0 КАК ПланыПродажКоличествоЕдиницОтчетовТекущие,
	|			ПланыПродажОборотыЭталонные.КоличествоОборот КАК ПланыПродажКоличествоЭталонные,
	|			ПланыПродажОборотыЭталонные.КоличествоОборот * ПланыПродажОборотыЭталонные.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК ПланыПродажКоличествоБазовыхЕдиницЭталонные,
	|			ПланыПродажОборотыЭталонные.КоличествоОборот * ПланыПродажОборотыЭталонные.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ЕСТЬNULL(ПланыПродажОборотыЭталонные.Номенклатура.ЕдиницаДляОтчетов.Коэффициент, 1) КАК ПланыПродажКоличествоЕдиницОтчетовЭталонные,
	|			0 КАК ПланыПродажСтоимостьБезНДСТекущие,
	|			0 КАК ПланыПродажНДСТекущие,
	|			0 КАК ПланыПродажСтоимостьСНДСТекущие,
	|			ПланыПродажОборотыЭталонные.СтоимостьОборот КАК ПланыПродажСтоимостьБезНДСЭталонные,
	|			ПланыПродажОборотыЭталонные.НДСОборот КАК ПланыПродажНДСЭталонные,
	|			ПланыПродажОборотыЭталонные.СтоимостьОборот + ПланыПродажОборотыЭталонные.НДСОборот КАК ПланыПродажСтоимостьСНДСЭталонные
	|		ИЗ
	|			РегистрНакопления." + ИмяРегистраЭталонныеДанные + ".Обороты(&ДатаНач1, &ДатаКон1, Регистратор, ВЫБОР КОГДА &Сценарий1 = НЕОПРЕДЕЛЕНО ТОГДА ИСТИНА ИНАЧЕ Сценарий = &Сценарий1 КОНЕЦ {Проект.* КАК Проект, Подразделение.* КАК Подразделение, Контрагент.* КАК Контрагент, Договор.* КАК Договор, Заказ.* КАК Заказ, ДокументПланирования.* КАК ДокументПланирования, ВЫРАЗИТЬ((ВЫБОР КОГДА Номенклатура ССЫЛКА Справочник.Номенклатура ТОГДА Номенклатура.НоменклатурнаяГруппа ИНАЧЕ Номенклатура КОНЕЦ) КАК Справочник.НоменклатурныеГруппы).* КАК НоменклатурнаяГруппа, ВЫРАЗИТЬ(Номенклатура КАК Справочник.Номенклатура).* КАК Номенклатура, ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры, ДокументПланирования.Ответственный.* КАК Ответственный}) КАК ПланыПродажОборотыЭталонные) КАК АнализируемыеДанные
	|	СГРУППИРОВАТЬ ПО
	|		АнализируемыеДанные.Сценарий,
	|		АнализируемыеДанные.Проект,
	|		АнализируемыеДанные.Подразделение,
	|		АнализируемыеДанные.Контрагент,
	|		АнализируемыеДанные.Договор,
	|		АнализируемыеДанные.Заказ,
	|		АнализируемыеДанные.НоменклатурнаяГруппа,
	|		АнализируемыеДанные.Номенклатура,
	|		АнализируемыеДанные.ХарактеристикаНоменклатуры,
	|		АнализируемыеДанные.Ответственный,
	|		АнализируемыеДанные.Регистратор,
	|		АнализируемыеДанные.Период,
	|		АнализируемыеДанные.ПериодДень,
	|		АнализируемыеДанные.ПериодНеделя,
	|		АнализируемыеДанные.ПериодДекада,
	|		АнализируемыеДанные.ПериодМесяц,
	|		АнализируемыеДанные.ПериодКвартал,
	|		АнализируемыеДанные.ПериодПолугодие,
	|		АнализируемыеДанные.ПериодГод) КАК РезультатАнализа
	|	//СОЕДИНЕНИЯ
	|{ГДЕ
	|	РезультатАнализа.Регистратор КАК Регистратор,
	|	РезультатАнализа.Период КАК Период,
	|	РезультатАнализа.ПериодДень КАК ПериодДень,
	|	РезультатАнализа.ПериодНеделя КАК ПериодНеделя,
	|	РезультатАнализа.ПериодДекада КАК ПериодДекада,
	|	РезультатАнализа.ПериодМесяц КАК ПериодМесяц,
	|	РезультатАнализа.ПериодКвартал КАК ПериодКвартал,
	|	РезультатАнализа.ПериодПолугодие КАК ПериодПолугодие,
	|	РезультатАнализа.ПериодГод КАК ПериодГод,
	|	РезультатАнализа.Количество КАК Количество,
	|	РезультатАнализа.КоличествоБазовыхЕдиниц КАК КоличествоБазовыхЕдиниц,
	|	РезультатАнализа.КоличествоЕдиницОтчетов КАК КоличествоЕдиницОтчетов,
	|	РезультатАнализа.КоличествоОтклонение КАК КоличествоОтклонение,
	|	РезультатАнализа.КоличествоБазовыхЕдиницОтклонение КАК КоличествоБазовыхЕдиницОтклонение,
	|	РезультатАнализа.КоличествоЕдиницОтчетовОтклонение КАК КоличествоЕдиницОтчетовОтклонение,
	|	ВЫБОР
	|		КОГДА РезультатАнализа.КоличествоОтклонение = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РезультатАнализа.Количество = 0
	|					ТОГДА -100
	|				ИНАЧЕ ВЫБОР
	|						КОГДА РезультатАнализа.Количество - РезультатАнализа.КоличествоОтклонение = 0
	|							ТОГДА ""-""
	|						ИНАЧЕ РезультатАнализа.КоличествоОтклонение * 100 / РезультатАнализа.Количество - РезультатАнализа.КоличествоОтклонение
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоОтклонениеПроцент,
	|	РезультатАнализа.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	РезультатАнализа.НДС КАК НДС,
	|	РезультатАнализа.СтоимостьСНДС КАК СтоимостьСНДС,
	|	РезультатАнализа.СтоимостьБезНДСОтклонение КАК СтоимостьБезНДСОтклонение,
	|	ВЫБОР
	|		КОГДА РезультатАнализа.СтоимостьБезНДСОтклонение = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РезультатАнализа.СтоимостьБезНДС = 0
	|					ТОГДА -100
	|				ИНАЧЕ ВЫБОР
	|						КОГДА РезультатАнализа.СтоимостьБезНДС - РезультатАнализа.СтоимостьБезНДСОтклонение = 0
	|							ТОГДА ""-""
	|						ИНАЧЕ РезультатАнализа.СтоимостьБезНДСОтклонение * 100 / РезультатАнализа.СтоимостьБезНДС - РезультатАнализа.СтоимостьБезНДСОтклонение
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СтоимостьБезНДСОтклонениеПроцент,
	|	РезультатАнализа.НДСОтклонение КАК НДСОтклонение,
	|	ВЫБОР
	|		КОГДА РезультатАнализа.НДСОтклонение = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РезультатАнализа.НДС = 0
	|					ТОГДА -100
	|				ИНАЧЕ ВЫБОР
	|						КОГДА РезультатАнализа.НДС - РезультатАнализа.НДСОтклонение = 0
	|							ТОГДА ""-""
	|						ИНАЧЕ РезультатАнализа.НДСОтклонение * 100 / РезультатАнализа.НДС - РезультатАнализа.НДСОтклонение
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК НДСОтклонениеПроцент,
	|	РезультатАнализа.СтоимостьСНДСОтклонение КАК СтоимостьСНДСОтклонение,
	|	ВЫБОР
	|		КОГДА РезультатАнализа.СтоимостьСНДСОтклонение = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РезультатАнализа.СтоимостьСНДС = 0
	|					ТОГДА -100
	|				ИНАЧЕ ВЫБОР
	|						КОГДА РезультатАнализа.СтоимостьСНДС - РезультатАнализа.СтоимостьСНДСОтклонение = 0
	|							ТОГДА ""-""
	|						ИНАЧЕ РезультатАнализа.СтоимостьСНДСОтклонение * 100 / РезультатАнализа.СтоимостьСНДС - РезультатАнализа.СтоимостьСНДСОтклонение
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СтоимостьСНДСОтклонениеПроцент
	|	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ
	|}";
	
КонецПроцедуры // ДобавитьПлан_План()

Функция ПолучитьПредставлениеДанных(Данные)
	
	Результат = Формат(Данные.НомерСтроки, "ЧГ=0") + ". ";
	
	Если Данные.НомерСтроки = 1 Тогда
		
		Результат = Результат + "Эталонный период.";
		
	Иначе
		
		Результат = Результат + "Сравниваемый период.";
		
	КонецЕсли;
	
	Результат = Результат + Символы.ПС + Данные.ТипДанных + ". " + Символы.ПС;
	
	Если НЕ Данные.Сценарий.Пустая() Тогда
		
		Результат = Результат + Строка(Данные.Сценарий) + Символы.ПС;
		
	КонецЕсли;
	
	Если Данные.ДатаНач = Дата('00010101') И Данные.ДатаКон = Дата('00010101') Тогда
		
		Если УниверсальныйОтчет.ДатаНач = Дата('00010101') И УниверсальныйОтчет.ДатаКон = Дата('00010101') Тогда
			
			Результат = Результат + "Без ограничения периода.";
			
		Иначе
			
			Результат = Результат + "С " + Формат(УниверсальныйОтчет.ДатаНач, "ДЛФ=Д; ДП = ""...""") + " по " + Формат(УниверсальныйОтчет.ДатаКон, "ДЛФ=Д; ДП = ""...""");
			
		КонецЕсли;
		
	Иначе
		
		Результат = Результат + "С " + Формат(Данные.ДатаНач, "ДЛФ=Д; ДП = ""...""") + " по " + Формат(Данные.ДатаКон, "ДЛФ=Д; ДП = ""...""");
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ПолучитьПредставлениеДанных()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	Перем ТекущиеНастройкиОтчета;
	
	СформироватьСтруктуруДляСохраненияНастроек(ТекущиеНастройкиОтчета);
	УстановитьНачальныеНастройки();
	ВосстановитьНастройкиИзСтруктуры(ТекущиеНастройкиОтчета);
	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("СправочникНоменклатураПустаяСсылка", Справочники.Номенклатура.ПустаяСсылка());
	
	Для каждого Данные из ДанныеОтчета Цикл
		
		УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ТипДанных" + Формат(Данные.НомерСтроки, "ЧГ=0"), ПолучитьПредставлениеДанных(Данные));
		УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("Сценарий" + Формат(Данные.НомерСтроки, "ЧГ=0"), ?(Данные.Сценарий.Пустая(), Неопределено, Данные.Сценарий));
		
		Если Данные.ДатаНач = Дата('00010101') И Данные.ДатаКон = Дата('00010101') Тогда
			
			УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ДатаНач" + Формат(Данные.НомерСтроки, "ЧГ=0"), ?(УниверсальныйОтчет.ДатаНач = Дата('00010101'), УниверсальныйОтчет.ДатаНач, Новый Граница(НачалоДня(УниверсальныйОтчет.ДатаНач), ВидГраницы.Включая)));
			УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ДатаКон" + Формат(Данные.НомерСтроки, "ЧГ=0"), ?(УниверсальныйОтчет.ДатаКон = Дата('00010101'), УниверсальныйОтчет.ДатаКон, Новый Граница(КонецДня(УниверсальныйОтчет.ДатаКон), ВидГраницы.Включая)));
			
		Иначе
			
			УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ДатаНач" + Формат(Данные.НомерСтроки, "ЧГ=0"), ?(Данные.ДатаНач = Дата('00010101'), Данные.ДатаНач, Новый Граница(НачалоДня(Данные.ДатаНач), ВидГраницы.Включая)));
			УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ДатаКон" + Формат(Данные.НомерСтроки, "ЧГ=0"), ?(Данные.ДатаКон = Дата('00010101'), Данные.ДатаКон, Новый Граница(КонецДня(Данные.ДатаКон), ВидГраницы.Включая)));
			
		КонецЕсли;
		
	КонецЦикла;
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);
	
	ОбластьЭталонныйПериод = Неопределено;
	
	Пока Истина Цикл
		
		ОбластьЭталонныйПериод = ТабличныйДокумент.НайтиТекст(ПолучитьПредставлениеДанных(ДанныеОтчета[0]), ОбластьЭталонныйПериод);
		
		Если ОбластьЭталонныйПериод = Неопределено Тогда
			
			Прервать;
			
		Иначе
			
			Для каждого Показатель из УниверсальныйОтчет.Показатели.Строки Цикл
						
				Если (Показатель.Имя = "ОтклонениеКоличества" ИЛИ Показатель.Имя = "ОтклонениеСтоимости") И Показатель.Использование Тогда
							
					Результат = ТабличныйДокумент.НайтиТекст(Показатель.ПредставлениеВОтчете,, ТабличныйДокумент.Область(ОбластьЭталонныйПериод.Верх, ОбластьЭталонныйПериод.Лево, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы));
					
					Если Результат <> Неопределено Тогда
						
						Индекс = 0;
						
						Для каждого ТекущийПоказатель из Показатель.Строки Цикл
							
							Если ТекущийПоказатель.Использование Тогда
								
								ТабличныйДокумент.Область(, Результат.Лево + Индекс,, Результат.Лево + Индекс).Видимость = Ложь;
								Индекс = Индекс + 1;
								
							КонецЕсли;
							
						КонецЦикла;
						
					КонецЕсли;
					
				КонецЕсли;
						
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры // СформироватьОтчет()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: // (-1) - не выбирать период, 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли
