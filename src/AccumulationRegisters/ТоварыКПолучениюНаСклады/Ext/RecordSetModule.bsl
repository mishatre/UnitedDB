Перем мПериод          Экспорт; // Период движений
Перем мТаблицаДвижений Экспорт; // Таблица движений

// Выполняет приход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьПриход() Экспорт

	ОбщегоНазначения.ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Приход);

КонецПроцедуры // ВыполнитьПриход()

// Выполняет расход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьРасход() Экспорт

	ОбщегоНазначения.ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Расход);

КонецПроцедуры // ВыполнитьРасход()

// Выполняет движения по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьДвижения() Экспорт

	Загрузить(мТаблицаДвижений);

КонецПроцедуры // ВыполнитьДвижения()

// Процедура контролирует остаток по данному регистру по переданному документу
// и его табличной части. В случае недостатка товаров выставляется флаг отказа и 
// выдается сообщение.
//
// Параметры:
//  ДокументОбъект    - объект проводимого документа, 
//  ИмяТабличнойЧасти - строка, имя табличной части, которая проводится по регистру, 
//  СтруктураШапкиДокумента - структура, содержащая значения "через точку" ссылочных реквизитов по шапке документа,
//  Отказ             - флаг отказа в проведении,
//  Заголовок         - строка, заголовок сообщения об ошибке проведения.
//
Процедура КонтрольОстатков(ДокументОбъект, ИмяТабличнойЧасти, СтруктураШапкиДокумента, Отказ, Заголовок) Экспорт

	МетаданныеДокумента     = ДокументОбъект.Метаданные();
	ИмяДокумента            = МетаданныеДокумента.Имя;
	ИмяТаблицы              = ИмяДокумента + "." + СокрЛП(ИмяТабличнойЧасти);
	ЕстьХарактеристика      = ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("ХарактеристикаНоменклатуры", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьСерия               = ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("СерияНоменклатуры", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьКачество            = ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("Качество", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьОрдерВТабЧасти      = ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("ПриходныйОрдер", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьСкладВТабЧасти      = ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("Склад", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьДокументРезерва     = ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("ДокументРезерва", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьДокументПеремещения = (МетаданныеДокумента.Реквизиты.Найти("ДокументПеремещения") <> Неопределено);
	ЕстьДокументПередачи    = (МетаданныеДокумента.Реквизиты.Найти("ДокументПередачи") <> Неопределено);
	ЕстьКоэффициент         = ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("Коэффициент", МетаданныеДокумента, ИмяТабличнойЧасти);
	ЕстьКлючСтроки          = ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("КлючСтроки", МетаданныеДокумента, ИмяТабличнойЧасти);

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",          СтруктураШапкиДокумента.Ссылка);
	Если МетаданныеДокумента.Реквизиты.Найти("СкладОрдер") <> Неопределено Тогда
		Запрос.УстановитьПараметр("ПриходныйОрдер",          СтруктураШапкиДокумента.СкладОрдер);
		Запрос.УстановитьПараметр("Склад",                   СтруктураШапкиДокумента.СкладПриходногоОрдера);
		текСклад = СтруктураШапкиДокумента.СкладПриходногоОрдера;
	ИначеЕсли ЕстьДокументПеремещения Тогда
		Запрос.УстановитьПараметр("ПриходныйОрдер",     СтруктураШапкиДокумента.ДокументПеремещения);
		Запрос.УстановитьПараметр("Склад",                   СтруктураШапкиДокумента.Склад);
		текСклад = СтруктураШапкиДокумента.Склад;
	ИначеЕсли ЕстьДокументПередачи Тогда
		Запрос.УстановитьПараметр("ПриходныйОрдер",          СтруктураШапкиДокумента.ДокументПередачи);
		Запрос.УстановитьПараметр("Склад",                   СтруктураШапкиДокумента.Склад);
		текСклад = СтруктураШапкиДокумента.Склад;
	ИначеЕсли ИмяДокумента = "КорректировкаСерийИХарактеристикТоваров" ИЛИ ИмяДокумента = "КорректировкаКачестваТоваров" Тогда
		Запрос.УстановитьПараметр("ПриходныйОрдер",          неопределено);
		Запрос.УстановитьПараметр("Склад",                   СтруктураШапкиДокумента.Склад);
		текСклад = СтруктураШапкиДокумента.Склад;
	Иначе
		Запрос.УстановитьПараметр("ПриходныйОрдер",          Неопределено);
		Запрос.УстановитьПараметр("Склад",                   СтруктураШапкиДокумента.СкладОтправитель);
		текСклад = СтруктураШапкиДокумента.СкладОтправитель;
	КонецЕсли;

	Если ЕстьДокументПеремещения Тогда
		Запрос.УстановитьПараметр("ДокументПеремещения",  СтруктураШапкиДокумента.ДокументПеремещения);
	КонецЕсли;
	
	Если ЕстьСкладВТабЧасти Тогда
		ЗапросСклады = новый Запрос;
		ЗапросСклады.Текст = "Выбрать различные Склад ИЗ Документ."+ИмяТаблицы+"
		|ГДЕ Ссылка=&ДокументСсылка";
		ЗапросСклады.УстановитьПараметр("ДокументСсылка",СтруктураШапкиДокумента.Ссылка);
		СписокСкладов = ЗапросСклады.Выполнить().Выгрузить().ВыгрузитьКолонку("Склад");
	Иначе
		СписокСкладов = новый СписокЗначений;
		СписокСкладов.Добавить(текСклад);
	КонецЕсли;
	Запрос.УстановитьПараметр("СписокСкладов", СписокСкладов);

		
	МассивПустыхСсылок = Новый Массив;
	МассивПустыхСсылок.Добавить(Неопределено);
	МассивПустыхСсылок.Добавить(Документы.ПриходныйОрдерНаТовары.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("МассивПустыхСсылок", МассивПустыхСсылок);

	Если ЕстьКлючСтроки Тогда
		ТекстДокумент = "
		|	(ВЫБРАТЬ
		|		ВЫБОР КОГДА Док.Номенклатура.Комплект ТОГДА
		|			СоставНабора.Номенклатура
		|		ИНАЧЕ
		|			Док.Номенклатура
		|		КОНЕЦ КАК Номенклатура,
		|		"
		   + ?(ЕстьОрдерВТабЧасти, "
		|	Док.ПриходныйОрдер КАК ПриходныйОрдер,", 
		      ?(ЕстьДокументРезерва, ?(ИмяДокумента = "ПеремещениеТоваров", "
		|	Док.ДокументРезерва КАК ПриходныйОрдер,", " 
		|	Док.ДокументРезерва КАК ДокументРезерва,"), " 
		|	&ПриходныйОрдер КАК ПриходныйОрдер,")) + "
		|"
		   + ?(ЕстьХарактеристика, "
		|		ВЫБОР КОГДА Док.Номенклатура.Комплект ТОГДА
		|			СоставНабора.ХарактеристикаНоменклатуры
		|		ИНАЧЕ
		|			Док.ХарактеристикаНоменклатуры
		|		КОНЕЦ КАК ХарактеристикаНоменклатуры,
		|"
		   ,"")
		   + ?(ЕстьСерия, "
		|		ВЫБОР КОГДА Док.Номенклатура.Комплект ТОГДА
		|			СоставНабора.СерияНоменклатуры
		|		ИНАЧЕ
		|			Док.СерияНоменклатуры
		|		КОНЕЦ КАК СерияНоменклатуры,
		|"
			,"")
		   + ?(ЕстьКачество, "Док.Качество КАК Качество,
		|"
		   ,"")
		   + ?(ЕстьСкладВТабЧасти, "
		|		Док.Склад", "&Склад") + " КАК Склад,
		|		ВЫБОР КОГДА Док.Номенклатура.Комплект ТОГДА
		|			Док.Количество * СоставНабора.Количество
		|		ИНАЧЕ
		|			Док.Количество
		|		КОНЕЦ КАК Количество,
		|		Док.Ссылка КАК Ссылка,
		| " + ?(ЕстьКоэффициент, "
		|		Док.Коэффициент КАК Коэффициент"
		   ,"") + "
		|	ИЗ
		|		Документ." + ИмяТаблицы + " КАК Док
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		Документ." + ИмяДокумента + ".СоставНабора КАК СоставНабора
		|	ПО
		|		СоставНабора.Ссылка = Док.Ссылка
		|		И СоставНабора.КлючСтроки = Док.КлючСтроки
		|	ГДЕ
		|		Док.Ссылка = &ДокументСсылка
		|	) КАК Док";

		// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
		ТекстЗапросаСписокНоменклатуры = "
		|ВЫБРАТЬ
		|	Номенклатура
		|ИЗ
		|	Документ." + ИмяТаблицы + "
		|ГДЕ
		|	Ссылка = &ДокументСсылка
		|ОБЪЕДИНИТЬ
		|ВЫБРАТЬ
		|	Номенклатура
		|ИЗ
		|	Документ." + ИмяДокумента + ".СоставНабора
		|ГДЕ
		|	Ссылка = &ДокументСсылка";
	Иначе
		ТекстДокумент = "Документ." + ИмяТаблицы + " КАК Док";

		// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
		ТекстЗапросаСписокНоменклатуры = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Номенклатура 
		|ИЗ
		|	Документ." + ИмяТаблицы + "
		|ГДЕ
		|	Ссылка = &ДокументСсылка";
	КонецЕсли;

	Запрос.Текст = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура.Представление                         КАК НоменклатураПредставление,"
	+ ?(ЕстьСкладВТабЧасти, "
	|   Док.Склад                                              КАК Склад,", "
	|   &Склад                                                 КАК Склад,") 
	+ ?(ЕстьОрдерВТабЧасти, "
	|   Док.ПриходныйОрдер                                     КАК ПриходныйОрдер,", 
	?(ЕстьДокументРезерва, ?(ИмяДокумента = "ПеремещениеТоваров", "
	|   Док.ДокументРезерва                                    КАК ПриходныйОрдер,", " 
	|   Док.ДокументРезерва                                    КАК ДокументРезерва,"), " 
	|   &ПриходныйОрдер                                        КАК ПриходныйОрдер,")) + "
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,"
	+ ?(ЕстьХарактеристика, "
	|	Док.ХарактеристикаНоменклатуры				           КАК ХарактеристикаНоменклатуры,"
	,"")
	+ ?(ЕстьСерия, "
	|	Док.СерияНоменклатуры           					   КАК СерияНоменклатуры,"
	,"")
	+ ?(ЕстьКачество, "
	|	Док.Качество			                               КАК Качество,"
	,"") 
	+ ?(ЕстьКоэффициент, "
	|	ВЫРАЗИТЬ(СУММА(Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК Число(15,3)) КАК ДокументКоличество,", "
	|	СУММА(Док.Количество)                                  КАК ДокументКоличество,") + "
	|	ЕСТЬNULL(МАКСИМУМ(Остатки.КоличествоОстаток), 0)       КАК ОстатокКоличество
	|ИЗ 
	|	" + ТекстДокумент + "
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыКПолучениюНаСклады.Остатки(, Склад в (&СписокСкладов) И
	|		Номенклатура В (" + ТекстЗапросаСписокНоменклатуры + ")"
	+ ?(ЕстьОрдерВТабЧасти ИЛИ ЕстьДокументРезерва, "", "
	|   И ДокументПолучения = &ПриходныйОрдер")
	+ ?(ЕстьДокументПеремещения,"
	|   И ДокументПолучения = &ДокументПеремещения"
	,"") + "
	|	) КАК Остатки
	|ПО 
	|	Док.Номенклатура                = Остатки.Номенклатура"
	+ ?(ЕстьХарактеристика, "
	| И Док.ХарактеристикаНоменклатуры  = Остатки.ХарактеристикаНоменклатуры"
	,"")
	+ ?(ЕстьСерия, "
	| И Док.СерияНоменклатуры           = Остатки.СерияНоменклатуры"
	,"")
	+ ?(ЕстьКачество, "
	| И Док.Качество  = Остатки.Качество"
	,"") 
	+ ?(ЕстьОрдерВТабЧасти, "
	| И Док.ПриходныйОрдер = Остатки.ДокументПолучения", "")
	+ ?(ЕстьДокументРезерва, ?(ИмяДокумента = "ПеремещениеТоваров", "
	| И Док.ДокументРезерва = Остатки.ДокументПолучения", "
	| И Док.ДокументРезерва = Остатки.ДокументРезерва"), "")
	+ ?(ЕстьСкладВТабЧасти, "
	| И Док.Склад          = Остатки.Склад", "") + "
	|
	|ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка"
	+?(ЕстьОрдерВТабЧасти, " 
	|И НЕ Док.ПриходныйОрдер В (&МассивПустыхСсылок)","")
	+ ?(ЕстьДокументРезерва И ИмяДокумента = "ПеремещениеТоваров", "
	|	И НЕ Док.ДокументРезерва В (&МассивПустыхСсылок)
	|	И НЕ Док.ДокументРезерва Ссылка Документ.ВнутреннийЗаказ
	|	И НЕ Док.ДокументРезерва Ссылка Документ.ЗаказПокупателя
	|", "") + "
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура"
	+ ?(ЕстьХарактеристика, "
	|	, Док.ХарактеристикаНоменклатуры "
	,"")
	+ ?(ЕстьСерия, "
	|	, Док.СерияНоменклатуры "
	,"")
	+ ?(ЕстьКачество, "
	|	, Док.Качество "
	,"")
	+ ?(ЕстьОрдерВТабЧасти, "
	|	, Док.ПриходныйОрдер "
	,"")
	+ ?(ЕстьДокументРезерва, "
	|	, Док.ДокументРезерва "
	,"")
	+ ?(ЕстьСкладВТабЧасти, "
	|	, Док.Склад "
	,"") + "
	|
	|ИМЕЮЩИЕ " + ?(ЕстьДокументПеремещения, "-", "") + " ЕСТЬNULL(МАКСИМУМ(Остатки.КоличествоОстаток), 0) < "
	+ ?(ЕстьКоэффициент,	"ВЫРАЗИТЬ(СУММА(Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК Число(15,3))",
							"СУММА(Док.Количество)") + "
    |
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ТоварыКПолучениюНаСклады.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		КоличествоОстаток =  ?(ЕстьДокументПеремещения, - Выборка.ОстатокКоличество, Выборка.ОстатокКоличество);

		СтрокаСообщения = "Остатка " + 
		УправлениеЗапасами.ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
								  ?(ЕстьХарактеристика, Выборка.ХарактеристикаНоменклатуры, ""), ?(ЕстьСерия, Выборка.СерияНоменклатуры, "")) +
		" к получению на склад " + СокрЛП(Выборка.Склад) + ?(ЕстьДокументПередачи," по документу " + СтруктураШапкиДокумента.ДокументПередачи, "")
		+ ?(ЕстьКачество, " с качеством " + Выборка.Качество, "") 
		+ ?(ЕстьДокументРезерва И ИмяДокумента <> "ПеремещениеТоваров", ?(НЕ ЗначениеЗаполнено(Выборка.ДокументРезерва),""," с документом резерва " + СокрЛП(Выборка.ДокументРезерва)), "") + " недостаточно.";

		УправлениеЗапасами.ОшибкаНетОстатка(СтрокаСообщения, КоличествоОстаток, Выборка.ДокументКоличество,
		Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);

	КонецЦикла;

КонецПроцедуры // КонтрольОстатков()
