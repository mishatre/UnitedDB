#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Истина;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "ТоварыНаСкладах";
	
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	//УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Ложь;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	// Описание исходного текста запроса.
	// При написании текста запроса рекомендуется следовать правилам, описанным в следующем шаблоне текста запроса:
	//
	//ВЫБРАТЬ // РАЗРЕШЕННЫЕ
	//	<ПсевдонимТаблицы.Поле> КАК <ПсевдонимПоля>,
	//	ПРЕДСТАВЛЕНИЕ(<ПсевдонимТаблицы>.<Поле>),
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//{ВЫБРАТЬ
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//ИЗ
	//	<Таблица> КАК <ПсевдонимТаблицы>
	//	//СОЕДИНЕНИЯ
	//{ГДЕ
	//	<ПсевдонимТаблицы.Поле>.* КАК <ПсевдонимПоля>,
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>,
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//{УПОРЯДОЧИТЬ ПО
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//УПОРЯДОЧИТЬ_СВОЙСТВА
	//	//УПОРЯДОЧИТЬ_КАТЕГОРИИ
	//}
	//ИТОГИ
	//	АГРЕГАТНАЯ_ФУНКЦИЯ(<ПсевдонимПоказателя>)
	//	//ИТОГИ_СВОЙСТВА
	//	//ИТОГИ_КАТЕГОРИИ
	//ПО
	//	ОБЩИЕ
	//{ИТОГИ ПО
	//	<ПсевдонимПоля>.*,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДвиженияДенежныхСредствОбороты.Организация КАК Организация,
	|	ДвиженияДенежныхСредствОбороты.ВидДенежныхСредств КАК ВидДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ДвиженияДенежныхСредствОбороты.ДокументПланированияПлатежа = НЕОПРЕДЕЛЕНО
	|				ИЛИ ДвиженияДенежныхСредствОбороты.ДокументПланированияПлатежа.ЦФО = &ПустойЦФО
	|			ТОГДА ДвиженияДенежныхСредствОбороты.ДокументДвижения.Подразделение
	|		ИНАЧЕ ДвиженияДенежныхСредствОбороты.ДокументПланированияПлатежа.ЦФО
	|	КОНЕЦ КАК Подразделение,
	|	ДвиженияДенежныхСредствОбороты.Проект КАК Проект,
	|	ДвиженияДенежныхСредствОбороты.Контрагент КАК Контрагент,
	|	ДвиженияДенежныхСредствОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДвиженияДенежныхСредствОбороты.Сделка КАК Сделка,
	|	ДвиженияДенежныхСредствОбороты.ДокументДвижения КАК ДокументДвижения,
	|	ДвиженияДенежныхСредствОбороты.ДокументПланированияПлатежа КАК ДокументПланированияПлатежа,
	|	ДвиженияДенежныхСредствОбороты.ДокументРасчетовСКонтрагентом КАК ДокументРасчетовСКонтрагентом,
	|	ДвиженияДенежныхСредствОбороты.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДенежныхСредствОбороты.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ДвиженияДенежныхСредствОбороты.БанковскийСчетКасса.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ДвиженияДенежныхСредствОбороты.ПриходРасход КАК ПриходРасход,
	|	ПРЕДСТАВЛЕНИЕ(ДвиженияДенежныхСредствОбороты.Организация) КАК ОрганизацияПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ДвиженияДенежныхСредствОбороты.ВидДенежныхСредств) КАК ВидДенежныхСредствПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ВЫБОР
	|			КОГДА ДвиженияДенежныхСредствОбороты.ДокументПланированияПлатежа = НЕОПРЕДЕЛЕНО
	|					ИЛИ ДвиженияДенежныхСредствОбороты.ДокументПланированияПлатежа.ЦФО = &ПустойЦФО
	|				ТОГДА ДвиженияДенежныхСредствОбороты.ДокументДвижения.Подразделение
	|			ИНАЧЕ ДвиженияДенежныхСредствОбороты.ДокументПланированияПлатежа.ЦФО
	|		КОНЕЦ) КАК ПодразделениеПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ДвиженияДенежныхСредствОбороты.Проект) КАК ПроектПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ДвиженияДенежныхСредствОбороты.Контрагент) КАК КонтрагентПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ДвиженияДенежныхСредствОбороты.ДоговорКонтрагента) КАК ДоговорКонтрагентаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ДвиженияДенежныхСредствОбороты.Сделка) КАК СделкаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ДвиженияДенежныхСредствОбороты.ДокументДвижения) КАК ДокументДвиженияПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ДвиженияДенежныхСредствОбороты.ДокументПланированияПлатежа) КАК ДокументПланированияПлатежаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ДвиженияДенежныхСредствОбороты.ДокументРасчетовСКонтрагентом) КАК ДокументРасчетовСКонтрагентомПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ДвиженияДенежныхСредствОбороты.СтатьяДвиженияДенежныхСредств) КАК СтатьяДвиженияДенежныхСредствПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ДвиженияДенежныхСредствОбороты.БанковскийСчетКасса) КАК БанковскийСчетКассаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ДвиженияДенежныхСредствОбороты.БанковскийСчетКасса.ВалютаДенежныхСредств) КАК ВалютаДенежныхСредствПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ДвиженияДенежныхСредствОбороты.ПриходРасход) КАК ПриходРасходПредставление,
	|	ДвиженияДенежныхСредствОбороты.Период КАК Период,
	|	НАЧАЛОПЕРИОДА(ДвиженияДенежныхСредствОбороты.Период, ДЕНЬ) КАК ПериодДень,
	|	НАЧАЛОПЕРИОДА(ДвиженияДенежныхСредствОбороты.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	|	НАЧАЛОПЕРИОДА(ДвиженияДенежныхСредствОбороты.Период, ДЕКАДА) КАК ПериодДекада,
	|	НАЧАЛОПЕРИОДА(ДвиженияДенежныхСредствОбороты.Период, МЕСЯЦ) КАК ПериодМесяц,
	|	НАЧАЛОПЕРИОДА(ДвиженияДенежныхСредствОбороты.Период, КВАРТАЛ) КАК ПериодКвартал,
	|	НАЧАЛОПЕРИОДА(ДвиженияДенежныхСредствОбороты.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	|	НАЧАЛОПЕРИОДА(ДвиженияДенежныхСредствОбороты.Период, ГОД) КАК ПериодГод,
	|	ДвиженияДенежныхСредствОбороты.Регистратор КАК Регистратор,
	|	ВЫБОР
	|		КОГДА ДвиженияДенежныхСредствОбороты.ПриходРасход = &Приход
	|			ТОГДА ДвиженияДенежныхСредствОбороты.СуммаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПриходВал,
	|	ВЫБОР
	|		КОГДА ДвиженияДенежныхСредствОбороты.ПриходРасход = &Расход
	|			ТОГДА ДвиженияДенежныхСредствОбороты.СуммаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасходВал,
	|	ВЫБОР
	|		КОГДА ДвиженияДенежныхСредствОбороты.ПриходРасход = &Приход
	|			ТОГДА ДвиженияДенежныхСредствОбороты.СуммаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ - ВЫБОР
	|		КОГДА ДвиженияДенежныхСредствОбороты.ПриходРасход = &Расход
	|			ТОГДА ДвиженияДенежныхСредствОбороты.СуммаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДенежныйПотокВал,
	|	ВЫБОР
	|		КОГДА ДвиженияДенежныхСредствОбороты.ПриходРасход = &Приход
	|			ТОГДА ДвиженияДенежныхСредствОбороты.СуммаУпрОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПриходУпр,
	|	ВЫБОР
	|		КОГДА ДвиженияДенежныхСредствОбороты.ПриходРасход = &Расход
	|			ТОГДА ДвиженияДенежныхСредствОбороты.СуммаУпрОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасходУпр,
	|	ВЫБОР
	|		КОГДА ДвиженияДенежныхСредствОбороты.ПриходРасход = &Приход
	|			ТОГДА ДвиженияДенежныхСредствОбороты.СуммаУпрОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ - ВЫБОР
	|		КОГДА ДвиженияДенежныхСредствОбороты.ПриходРасход = &Расход
	|			ТОГДА ДвиженияДенежныхСредствОбороты.СуммаУпрОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДенежныйПотокУпр
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
	|{ВЫБРАТЬ
	|	Организация.*,
	|	ВидДенежныхСредств.*,
	|	Подразделение.*,
	|	Проект.*,
	|	Контрагент.*,
	|	ДоговорКонтрагента.*,
	|	Сделка.*,
	|	ДокументДвижения.*,
	|	ДокументПланированияПлатежа.*,
	|	ДокументРасчетовСКонтрагентом.*,
	|	СтатьяДвиженияДенежныхСредств.*,
	|	БанковскийСчетКасса.*,
	|	ВалютаДенежныхСредств.*,
	|	ПриходРасход.*,
	|	Период,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	Регистратор.*,
	|	СуммаПриходВал,
	|	СуммаРасходВал,
	|	ДенежныйПотокВал,
	|	СуммаПриходУпр,
	|	СуммаРасходУпр,
	|	ДенежныйПотокУпр
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств.Обороты(&ДатаНач, &ДатаКон, Регистратор {&Периодичность}, {Организация.* КАК Организация, ВидДенежныхСредств.* КАК ВидДенежныхСредств, (ВЫБОР
	|		    КОГДА ДокументПланированияПлатежа = НЕОПРЕДЕЛЕНО
	|		            ИЛИ ДокументПланированияПлатежа.ЦФО = &ПустойЦФО
	|		        ТОГДА ДокументДвижения.Подразделение
	|		    ИНАЧЕ ДокументПланированияПлатежа.ЦФО
	|		КОНЕЦ).* КАК Подразделение, Проект.* КАК Проект, Контрагент.* КАК Контрагент, ДоговорКонтрагента.* КАК ДоговорКонтрагента, Сделка.* КАК Сделка, ДокументДвижения.* КАК ДокументДвижения, ДокументПланированияПлатежа.* КАК ДокументПланированияПлатежа, ДокументРасчетовСКонтрагентом.* КАК ДокументРасчетовСКонтрагентом, СтатьяДвиженияДенежныхСредств.* КАК СтатьяДвиженияДенежныхСредств, БанковскийСчетКасса.* КАК БанковскийСчетКасса, БанковскийСчетКасса.ВалютаДенежныхСредств.* КАК ВалютаДенежныхСредств, ПриходРасход.* КАК ПриходРасход}) КАК ДвиженияДенежныхСредствОбороты
	|	//СОЕДИНЕНИЯ
	|{ГДЕ
	|	ДвиженияДенежныхСредствОбороты.Период,
	|	НАЧАЛОПЕРИОДА(ДвиженияДенежныхСредствОбороты.Период, ДЕНЬ) КАК ПериодДень,
	|	НАЧАЛОПЕРИОДА(ДвиженияДенежныхСредствОбороты.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	|	НАЧАЛОПЕРИОДА(ДвиженияДенежныхСредствОбороты.Период, ДЕКАДА) КАК ПериодДекада,
	|	НАЧАЛОПЕРИОДА(ДвиженияДенежныхСредствОбороты.Период, МЕСЯЦ) КАК ПериодМесяц,
	|	НАЧАЛОПЕРИОДА(ДвиженияДенежныхСредствОбороты.Период, КВАРТАЛ) КАК ПериодКвартал,
	|	НАЧАЛОПЕРИОДА(ДвиженияДенежныхСредствОбороты.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	|	НАЧАЛОПЕРИОДА(ДвиженияДенежныхСредствОбороты.Период, ГОД) КАК ПериодГод,
	|	ДвиженияДенежныхСредствОбороты.Регистратор.*,
	|	ВЫБОР
	|			КОГДА ДвиженияДенежныхСредствОбороты.ПриходРасход = &Приход
	|				ТОГДА ДвиженияДенежныхСредствОбороты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаПриходВал,
	|	ВЫБОР
	|			КОГДА ДвиженияДенежныхСредствОбороты.ПриходРасход = &Расход
	|				ТОГДА ДвиженияДенежныхСредствОбороты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаРасходВал,
	|	ВЫБОР
	|			КОГДА ДвиженияДенежныхСредствОбороты.ПриходРасход = &Приход
	|				ТОГДА ДвиженияДенежныхСредствОбороты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ - ВЫБОР
	|			КОГДА ДвиженияДенежныхСредствОбороты.ПриходРасход = &Расход
	|				ТОГДА ДвиженияДенежныхСредствОбороты.СуммаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ДенежныйПотокВал,
	|	ВЫБОР
	|			КОГДА ДвиженияДенежныхСредствОбороты.ПриходРасход = &Приход
	|				ТОГДА ДвиженияДенежныхСредствОбороты.СуммаУпрОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаПриходУпр,
	|	ВЫБОР
	|			КОГДА ДвиженияДенежныхСредствОбороты.ПриходРасход = &Расход
	|				ТОГДА ДвиженияДенежныхСредствОбороты.СуммаУпрОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаРасходУпр,
	|	ВЫБОР
	|			КОГДА ДвиженияДенежныхСредствОбороты.ПриходРасход = &Приход
	|				ТОГДА ДвиженияДенежныхСредствОбороты.СуммаУпрОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ - ВЫБОР
	|			КОГДА ДвиженияДенежныхСредствОбороты.ПриходРасход = &Расход
	|				ТОГДА ДвиженияДенежныхСредствОбороты.СуммаУпрОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ДенежныйПотокУпр
	|	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ
	|}
	|{УПОРЯДОЧИТЬ ПО
	|	Организация.*,
	|	ВидДенежныхСредств.*,
	|	Подразделение.*,
	|	Проект.*,
	|	Контрагент.*,
	|	ДоговорКонтрагента.*,
	|	Сделка.*,
	|	ДокументДвижения.*,
	|	ДокументПланированияПлатежа.*,
	|	ДокументРасчетовСКонтрагентом.*,
	|	СтатьяДвиженияДенежныхСредств.*,
	|	БанковскийСчетКасса.*,
	|	ВалютаДенежныхСредств.*,
	|	ПриходРасход.*,
	|	Период,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	Регистратор.*,
	|	СуммаПриходВал,
	|	СуммаРасходВал,
	|	ДенежныйПотокВал,
	|	СуммаПриходУпр,
	|	СуммаРасходУпр,
	|	ДенежныйПотокУпр
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}	
	|ИТОГИ
	|	СУММА(СуммаПриходВал),
	|	СУММА(СуммаРасходВал),
	|	СУММА(ДенежныйПотокВал),
	|	СУММА(СуммаПриходУпр),
	|	СУММА(СуммаРасходУпр),
	|	СУММА(ДенежныйПотокУпр)
	|	//ИТОГИ_СВОЙСТВА
	|	//ИТОГИ_КАТЕГОРИИ
	|ПО
	|	ОБЩИЕ
	|{ИТОГИ ПО
	|	Организация.*,
	|	ВидДенежныхСредств.*,
	|	Подразделение,
	|	Проект.*,
	|	Контрагент.*,
	|	ДоговорКонтрагента.*,
	|	Сделка.*,
	|	ДокументДвижения.*,
	|	ДокументПланированияПлатежа.*,
	|	ДокументРасчетовСКонтрагентом.*,
	|	СтатьяДвиженияДенежныхСредств.*,
	|	БанковскийСчетКасса.*,
	|	ВалютаДенежныхСредств.*,
	|	ПриходРасход.*,
	|	Период,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	Регистратор.*
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}";	
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ДвиженияДенежныхСредствОбороты.Организация", "Организация", "Организация", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Организации);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ДвиженияДенежныхСредствОбороты.Контрагент", "Контрагент", "Контрагент", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты);

		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Организация", "Организация");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВидДенежныхСредств", "Вид денежных средств (наличные, безналичные)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Подразделение", "Подразделение");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Проект", "Проект");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Контрагент", "Контрагент");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДоговорКонтрагента", "Договор контрагента");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Сделка", "Сделка");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДокументДвижения", "Документ движения");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДокументПланированияПлатежа", "Документ планирования платежа");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДокументРасчетовСКонтрагентом", "Документ расчетов с контрагентом");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтатьяДвиженияДенежныхСредств", "Статья движения денежных средств");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("БанковскийСчетКасса", "Банковский счет/касса");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВалютаДенежныхСредств", "Валюта движения");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПриходРасход", "Вид движения");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаПриходВал", "Поступления в валюте операций");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаРасходВал", "Платежи в валюте операций");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДенежныйПотокВал", "Чистый денежный поток в валюте операций");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаПриходУпр", "Поступления в валюте упр. учета (" + глЗначениеПеременной("ВалютаУправленческогоУчета") + ")");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаРасходУпр", "Платежи в валюте упр. учета (" + глЗначениеПеременной("ВалютаУправленческогоУчета") + ")");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДенежныйПотокУпр", "Чистый денежный поток в валюте упр. учета (" + глЗначениеПеременной("ВалютаУправленческогоУчета") + ")");

	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаПриходВал", "Поступления", Истина, "ЧЦ = 15 ; ЧДЦ = 2", "ВВалютеОпераций", "В валюте операций");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаРасходВал", "Платежи", Ложь, "ЧЦ = 15 ; ЧДЦ = 2", "ВВалютеОпераций");
	УниверсальныйОтчет.ДобавитьПоказатель("ДенежныйПотокВал", "Чистый денежный поток", Истина, "ЧЦ = 15 ; ЧДЦ = 2", "ВВалютеОпераций");
	
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаПриходУпр", "Поступления", Истина, "ЧЦ = 15 ; ЧДЦ = 2", "ВВалютеУпрУчета", "В валюте упр учета (" + глЗначениеПеременной("ВалютаУправленческогоУчета") + ")");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаРасходУпр", "Платежи", Ложь, "ЧЦ = 15 ; ЧДЦ = 2", "ВВалютеУпрУчета");
	УниверсальныйОтчет.ДобавитьПоказатель("ДенежныйПотокУпр", "Чистый денежный поток", Истина, "ЧЦ = 15 ; ЧДЦ = 2", "ВВалютеУпрУчета");
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("СтатьяДвиженияДенежныхСредств");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Организация");
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("Проект");
	
	// Добавление предопределенных полей порядка отчета.
	// Необходимо вызывать для каждого добавляемого поля порядка.
	// УниверсальныйОтчет.ДобавитьПорядок(<ПутьКДанным>);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДаннымРодитель>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("СуммаПоступленияВал", "ВалютаДенежныхСредств");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("СуммаПлатежиВал", "ВалютаДенежныхСредств");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ДенежныйПотокВал", "ВалютаДенежныхСредств");
	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>, <Размещение>, <Положение>);
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ПустойЦФО", Справочники.Подразделения.ПустаяСсылка());
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("Приход", Перечисления.ВидыДвиженийПриходРасход.Приход);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("Расход", Перечисления.ВидыДвиженийПриходРасход.Расход);
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);

КонецПроцедуры // СформироватьОтчет()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = Неопределено;
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли
