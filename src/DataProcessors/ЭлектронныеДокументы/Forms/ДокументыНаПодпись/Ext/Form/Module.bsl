////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Функция ИспользуетсяОбменСБанками()
	
	Возврат ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьЗначениеФункциональнойОпции("ИспользоватьОбменЭДСБанками");
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокСертификатовИДокументов(МассивСтруктурСертификатов)
	
	ТаблицаДоступныхСертификатов = ЭлектронныеДокументыСлужебный.ТаблицаДоступныхДляПодписиСертификатов(МассивСтруктурСертификатов);
	ЗаполнитьСводнуюТаблицу(ТаблицаДоступныхСертификатов);
	ЗаполнитьСписокСертификатов(ТаблицаДоступныхСертификатов);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокСертификатов(ТаблицаДоступныхСертификатов)
	
	ТаблицаСертификатов.Очистить();
	Для Каждого ТекСтрока Из ТаблицаДоступныхСертификатов Цикл
		СтрокаТаблицы = ТаблицаСертификатов.Добавить();
		СтрокаТаблицы.Сертификат = ТекСтрока.Ссылка;
		СтрокаТаблицы.Отпечаток = ТекСтрока.Отпечаток;
		СтрокаТаблицы.ПарольПользователя = ТекСтрока.ПарольПользователя;
		ПараметрыОтбора = Новый Структура("Сертификат", ТекСтрока.Ссылка);
		СтрокаТаблицы.КоличествоДокументов = СводнаяТаблица.НайтиСтроки(ПараметрыОтбора).Количество();
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСводнуюТаблицу(ТаблицаДоступныхСертификатов)
	
	ЗапросПоДокументам = Новый Запрос;
	
	СтруктураДопОтбора = Новый Структура;
	Если ЗначениеЗаполнено(Контрагент) Тогда 
		СтруктураДопОтбора.Вставить("Контрагент", Контрагент);
		ЗапросПоДокументам.УстановитьПараметр("Контрагент", Контрагент);
	КонецЕсли;
	Если ЗначениеЗаполнено(ВидЭД) Тогда 
		СтруктураДопОтбора.Вставить("ВидЭД", ВидЭД);
		ЗапросПоДокументам.УстановитьПараметр("ВидЭД", ВидЭД);
	КонецЕсли;
	Если ЗначениеЗаполнено(НаправлениеЭД) Тогда 
		СтруктураДопОтбора.Вставить("НаправлениеЭД", НаправлениеЭД);
		ЗапросПоДокументам.УстановитьПараметр("НаправлениеЭД", НаправлениеЭД);
	КонецЕсли;
	
	ЗапросСоставаИсполнителей = Новый Запрос;
	ЗапросСоставаИсполнителей.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СертификатыЭЦП.Ссылка,
	|	СертификатыЭЦП.ПроверятьСоставИсполнителей КАК ПроверятьСоставИсполнителей,
	|	СертификатыЭЦПСоставИсполнителей.Исполнитель
	|ИЗ
	|	Справочник.СертификатыЭЦП КАК СертификатыЭЦП
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СертификатыЭЦП.СоставИсполнителей КАК СертификатыЭЦПСоставИсполнителей
	|		ПО СертификатыЭЦПСоставИсполнителей.Ссылка = СертификатыЭЦП.Ссылка
	|ГДЕ
	|	СертификатыЭЦП.Ссылка В(&СписокДоступныхСертификатов)";
	ЗапросСоставаИсполнителей.УстановитьПараметр(
		"СписокДоступныхСертификатов", ТаблицаДоступныхСертификатов.ВыгрузитьКолонку("Ссылка"));
	ВыборкаПоСоставу = ЗапросСоставаИсполнителей.Выполнить().Выгрузить();
	
	// Проверим, что нет таких сертификатов, по которым нет контроля на состав исполнителей
	ЛюбойИсполнитель = ВыборкаПоСоставу.Найти(Ложь,"ПроверятьСоставИсполнителей");
	Если ЛюбойИсполнитель = Неопределено Тогда // есть строгое ограничение на состав исполнителей по всем доступным сертификатам
		МассивИсполнителей = ВыборкаПоСоставу.ВыгрузитьКолонку("Исполнитель");
		СтруктураДопОтбора.Вставить("ОтборПоИсполнителям", Истина);
		ЗапросПоДокументам.УстановитьПараметр("СоставИсполнителей", МассивИсполнителей);
	КонецЕсли;
		
	МассивВидовСлужебныхЭД = Новый Массив;
	МассивВидовСлужебныхЭД.Добавить(Перечисления.ВидыЭД.ИзвещениеОПолучении);
	МассивВидовСлужебныхЭД.Добавить(Перечисления.ВидыЭД.УведомлениеОбУточнении);
	
	ЗапросПоДокументам.Текст = ЭлектронныеДокументы.ПолучитьТекстЗапросаЭлектронныхДокументовНаПодписи(Ложь, СтруктураДопОтбора);
	ЗапросПоДокументам.УстановитьПараметр("ТекущийПользователь", Пользователи.АвторизованныйПользователь());
	ЗапросПоДокументам.УстановитьПараметр("ВидыЭД", МассивВидовСлужебныхЭД);
	Таблица = ЗапросПоДокументам.Выполнить().Выгрузить();
	
	ЗначениеВРеквизитФормы(Таблица, "СводнаяТаблица");
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьТаблицы()
	
	Попытка
		Если ЭлектронныеДокументыСлужебныйВызовСервера.ВыполнятьКриптооперацииНаСервере() Тогда
			МассивСтруктурСертификатов = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьМассивСтруктурСертификатов(Истина);
		Иначе
			МассивСтруктурСертификатов = ЭлектроннаяЦифроваяПодписьКлиент.ПолучитьМассивСтруктурСертификатов(Истина);
		КонецЕсли;
	Исключение
		МассивСтруктурСертификатов = Новый Массив;
	КонецПопытки;
	ЗаполнитьСписокСертификатовИДокументов(МассивСтруктурСертификатов);
	ЗаполнитьСписокДокументовПоСертификату();
	
КонецПроцедуры

&НаКлиенте
Функция ЕстьДокументыНаПодпись() 
	
	ПроверочныеДанные = ?(Элементы.ТаблицаСертификатов.ТекущиеДанные = Неопределено,
		ТаблицаСертификатов[0], Элементы.ТаблицаСертификатов.ТекущиеДанные);
	
	Если ПроверочныеДанные.КоличествоДокументов = 0 Тогда
		ТекстПредупреждения = НСтр("ru = 'По данному сертификату нет документов на подпись'");
		Предупреждение(ТекстПредупреждения);
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ПерейтиНаСтраницу(КДетализации)
	
	Если КДетализации Тогда
		Элементы.СтраницыАРМ.ТекущаяСтраница = Элементы.СтраницыАРМ.ПодчиненныеЭлементы.СтраницаДетализации;
		Заголовок = НСтр("ru = 'Документы на подпись по сертификату'")+ ": " + СертификатПодписи;
	Иначе
		Элементы.СтраницыАРМ.ТекущаяСтраница = Элементы.СтраницыАРМ.ПодчиненныеЭлементы.СтраницаСводки;
		Заголовок = НСтр("ru = 'Документы на подпись'");
	КонецЕсли;
	
	Если ЭтоСертификатСбербанка(СертификатПодписи) Тогда
		Элементы.Подписать.Заголовок = Нстр("ru = 'Подписать отмеченные'");
	Иначе
		Элементы.Подписать.Заголовок = Нстр("ru = 'Подписать и отправить отмеченные'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДокументовПоСертификату()
	
	ТаблицаДокументов.Очистить();
	ПараметрыОтбора = Новый Структура("Сертификат", СертификатПодписи);
	СтрокиДокументов = СводнаяТаблица.НайтиСтроки(ПараметрыОтбора);
	
	Для Каждого СтрокаСДокументом Из СтрокиДокументов Цикл
		СтрокаТаблицы = ТаблицаДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаСДокументом);
	КонецЦикла;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоСертификатСбербанка(Сертификат)

	ПрограммаБанка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сертификат, "ПрограммаБанка");
	Возврат ПрограммаБанка = Перечисления.ПрограммыБанка.СбербанкОнлайн;
	
КонецФункции

&НаКлиенте
Процедура ПодписатьОтправитьПроизвольныеДокументы(МассивЭД)
	
	Если МассивЭД.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура("Сертификат", СертификатПодписи);
	МассивСтрок = ТаблицаСертификатов.НайтиСтроки(Отбор);
	СтрокаСертификата = МассивСтрок[0];
	
	СтруктураСертификата = Новый Структура("Отпечаток, ПарольПользователя", СтрокаСертификата.Отпечаток, СтрокаСертификата.ПарольПользователя);
	КолПодписанных = ЭлектронныеДокументыСлужебныйКлиент.ПодписатьЭДОпределеннымСертификатом(МассивЭД, СертификатПодписи, СтруктураСертификата);
	
	Если МассивЭД.Количество() <> КолПодписанных Тогда
		Для Сч = -МассивЭД.Количество() + 1 По 0 Цикл
			ЭД = МассивЭД[-Сч];
			ЭППрисутствует = Ложь;
			Для Каждого ЭП Из ЭД.ЭлектронныеЦифровыеПодписи Цикл
				Если СтрокаСертификата.Отпечаток = ЭП.Отпечаток Тогда
					ЭППрисутствует = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если Не ЭППрисутствует Тогда
				МассивЭД.Удалить(-Сч);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	КолПодготовленных = 0;
	КолОтправленных = 0;
	Если МассивЭД.Количество() > 0 Тогда
		СтруктураРезультата = ЭлектронныеДокументыСлужебныйКлиент.ПодготовитьИОтправитьПЭД(МассивЭД, Ложь);
		Если СтруктураРезультата.КолОтправленных > 0 Тогда
			КолОтправленных = СтруктураРезультата.КолОтправленных;
		Иначе
			КолПодготовленных = СтруктураРезультата.КолПодготовленных;
		КонецЕсли;
	КонецЕсли;
	
	ТекстСостояния = НСтр("ru = 'Подписано произвольных ЭД: (%1)'");
	Количество = 0;
	Если КолОтправленных > 0 Тогда
		ТекстСостояния = ТекстСостояния + Символы.ПС + НСтр("ru = 'Отправлено: (%2)'");
		Количество = КолОтправленных;
	ИначеЕсли КолПодготовленных > 0 Тогда
		ТекстСостояния = НСтр("ru = 'Подготовлено к отправке: (%2)'");
		Количество = КолПодготовленных;
	КонецЕсли;
	ТекстЗаголовка = НСтр("ru = 'Обмен электронными документами'");
	ТекстСостояния = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСостояния, КолПодписанных, Количество);
	ПоказатьОповещениеПользователя(ТекстЗаголовка, , ТекстСостояния);
	Оповестить("ОбновитьСостояниеЭД");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Обновить(Команда)
	
	ПерезаполнитьТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура Подписать(Команда)
	
	МассивЭД = Новый Массив;
	МассивПроизвольныхЭД = Новый Массив;
	ПроизвольныйЭД = ПредопределенноеЗначение("Перечисление.ВидыЭД.ПроизвольныйЭД");
	Для Каждого ТекСтрока Из ТаблицаДокументов Цикл
		Если ТекСтрока.Выбрать Тогда
			Если ТекСтрока.ВидЭД = ПроизвольныйЭД Тогда
				МассивПроизвольныхЭД.Добавить(ТекСтрока.ЭлектронныйДокумент);
			Иначе
				МассивЭД.Добавить(ТекСтрока.ЭлектронныйДокумент);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ЭлектронныеДокументыКлиент.СформироватьПодписатьОтправитьЭД(МассивЭД);
	ПодписатьОтправитьПроизвольныеДокументы(МассивПроизвольныхЭД)
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьВсе(Команда)
	
	Если НЕ ЕстьДокументыНаПодпись() Тогда
		Возврат;
	КонецЕсли;
	
	// По выделенному сертификату найдем все документы на подпись
	СертификатПодписи = ?(Элементы.ТаблицаСертификатов.ТекущиеДанные = Неопределено,
		ТаблицаСертификатов[0].Сертификат, Элементы.ТаблицаСертификатов.ТекущиеДанные.Сертификат);
	
	ПараметрыОтбора = Новый Структура("Сертификат", СертификатПодписи);
	СтрокиДокументов = СводнаяТаблица.НайтиСтроки(ПараметрыОтбора);
	
	МассивДокументовНаПодпись = Новый Массив;
	Для Каждого ЭлементТаблицы Из СтрокиДокументов Цикл
		МассивДокументовНаПодпись.Добавить(ЭлементТаблицы.ЭлектронныйДокумент);
	КонецЦикла;
	
	ЭлектронныеДокументыКлиент.СформироватьПодписатьОтправитьЭД(МассивДокументовНаПодпись);
	
КонецПроцедуры

&НаКлиенте
Процедура ВернутьсяКСпискуСертификатов(Команда)
	
	ПерейтиНаСтраницу(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКСпискуДокументов(Команда)
	
	СертификатПодписи = ?(Элементы.ТаблицаСертификатов.ТекущиеДанные = Неопределено,
		ТаблицаСертификатов[0].Сертификат, Элементы.ТаблицаСертификатов.ТекущиеДанные.Сертификат);
		
	Если НЕ ЕстьДокументыНаПодпись() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСписокДокументовПоСертификату();
	ПерейтиНаСтраницу(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВыделенные(Команда)
	
	МассивСтрок = Элементы.ТаблицаДокументов.ВыделенныеСтроки;
	Для Каждого НомерСтроки Из МассивСтрок Цикл
		СтрокаТаблицы = ТаблицаДокументов.НайтиПоИдентификатору(НомерСтроки);
		Если СтрокаТаблицы <> Неопределено Тогда
			СтрокаТаблицы.Выбрать = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметкуСоВсехСтрок(Команда)
	
	Для Каждого ТекДокумент Из ТаблицаДокументов Цикл
		Если ТекДокумент.Выбрать Тогда
			ТекДокумент.Выбрать = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ФОРМЫ

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ПерезаполнитьТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЭлектронныеДокументыСлужебныйКлиент.ОткрытьЭДДляПросмотра(Элементы.ТаблицаДокументов.ТекущиеДанные.ЭлектронныйДокумент);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСертификатовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СертификатПодписи = Элементы.ТаблицаСертификатов.ТекущиеДанные.Сертификат;
	Если НЕ ЕстьДокументыНаПодпись() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСписокДокументовПоСертификату();
	ПерейтиНаСтраницу(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЭДПриИзменении(Элемент)
	
	ПерезаполнитьТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура НаправлениеЭДПриИзменении(Элемент)
	
	ПерезаполнитьТаблицы();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИспользуетсяОбменСБанками = ИспользуетсяОбменСБанками();
	МассивСтруктурСертификатов = Новый Массив;
	
	Если ЭлектронныеДокументыСлужебныйВызовСервера.ВыполнятьКриптооперацииНаСервере() Тогда
		ЕстьКриптосредстваНаСервере = ЭлектронныеДокументыСлужебныйВызовСервера.ЕстьКриптосредстваНаСервере();
		Если НЕ (ЕстьКриптосредстваНаСервере ИЛИ ИспользуетсяОбменСБанками) Тогда
			Отказ = Истина;
		КонецЕсли;
		Если НЕ Отказ И ЕстьКриптосредстваНаСервере Тогда
			МассивСтруктурСертификатов = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьМассивСтруктурСертификатов(Истина);
		КонецЕсли;
	Иначе
		Если НЕ (ПодключитьРасширениеРаботыСКриптографией()
				ИЛИ ЭлектронныеДокументыСлужебныйКлиент.УстановитьРасширениеРаботыСКриптографиейНаКлиенте()) Тогда
			Отказ = Истина;
		КонецЕсли;
		Попытка
			МенеджерКриптографии = ЭлектроннаяЦифроваяПодписьКлиент.ПолучитьМенеджерКриптографии(Отказ);
			ЕстьКриптосредствоНаКлиенте = Истина;
		Исключение
			Если НЕ ИспользуетсяОбменСБанками Тогда
				ТекстСообщения = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьСообщениеОбОшибке("100");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				Отказ = Истина;
			КонецЕсли;
			ЕстьКриптосредствоНаКлиенте = Ложь;
		КонецПопытки;
		Если Не Отказ И ЕстьКриптосредствоНаКлиенте Тогда
			МассивСтруктурСертификатов = ЭлектроннаяЦифроваяПодписьКлиент.ПолучитьМассивСтруктурСертификатов(Истина);
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		ЗаполнитьСписокСертификатовИДокументов(МассивСтруктурСертификатов);
		
		Если ТаблицаСертификатов.Количество() = 0 Тогда
			ТекстПредупреждения = НСтр("ru = 'Нет сертификатов подписи для пользователя или не настроены правила подписи документов!'"); 
			Предупреждение(ТекстПредупреждения);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Если ТаблицаСертификатов.Количество() > 1 Тогда
			ПерейтиНаСтраницу(Ложь);
		Иначе
			СертификатПодписи = ТаблицаСертификатов[0].Сертификат;
			ЗаполнитьСписокДокументовПоСертификату();
			ПерейтиНаСтраницу(Истина);
			Элементы.ГруппаКнопкиНазад.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьЗначениеФункциональнойОпции("ИспользоватьОбменЭД") Тогда
		ТекстСообщения = ЭлектронныеДокументыСлужебныйВызовСервера.ТекстСообщенияОНеобходимостиНастройкиСистемы("РаботаСЭД");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
	КонецЕсли;
	
	Если НЕ ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьЗначениеФункциональнойОпции("ИспользоватьЭлектронныеЦифровыеПодписи") Тогда
		ТекстСообщения = ЭлектронныеДокументыСлужебныйВызовСервера.ТекстСообщенияОНеобходимостиНастройкиСистемы("ПодписаниеЭД");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
	КонецЕсли;
	
	Элементы.СтраницыАРМ.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	
	АктуальныеВидыЭД = ЭлектронныеДокументыПовтИсп.ПолучитьАктуальныеВидыЭД();
	МассивВычитания = Новый Массив;
	МассивВычитания.Добавить(Перечисления.ВидыЭД.ЗапросВыписки);
	МассивВычитания.Добавить(Перечисления.ВидыЭД.ВыпискаБанка);
	ОбщегоНазначенияКлиентСервер.СократитьМассив(АктуальныеВидыЭД, МассивВычитания);
	Элементы.ВидЭД.СписокВыбора.ЗагрузитьЗначения(АктуальныеВидыЭД);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСостояниеЭД" Тогда
		ПерезаполнитьТаблицы();
	КонецЕсли;
	
КонецПроцедуры
