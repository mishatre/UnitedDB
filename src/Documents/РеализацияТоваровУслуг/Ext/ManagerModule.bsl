Функция ПолучитьДанныеДляПечатиАктаНаПередачуПрав(Ссылка, ВалютаДанных) Экспорт
	
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		ТекстДляЗамены = "//КорректировкаРеализации";
	Иначе
		ТекстДляЗамены = "//РеализацияТоваровУслуг";
	КонецЕсли;
	
	// 1. Получим данные шапки
	ТекстЗапросаШапка =
	"ВЫБРАТЬ
	|	//РеализацияТоваровУслуг """" КАК ВидОперации,
	|	//КорректировкаРеализации ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭД.Исправление) КАК ВидОперации,
	|	//РеализацияТоваровУслуг Док.Сделка КАК ДокументОснование,
	|	//КорректировкаРеализации Док.ДокументРеализации КАК ДокументОснование,
	|	//РеализацияТоваровУслуг ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка) КАК ИсправляемыйДокументРеализации,
	|	//КорректировкаРеализации ИсправляемыйДокументРеализации КАК ИсправляемыйДокументРеализации,
	|	Док.Номер КАК НомерДокумента,
	|	Док.Дата КАК ДатаДокумента,
	|	Док.АдресДоставки,
	|	Док.БанковскийСчетОрганизации,
	|	Док.ВалютаДокумента,
	|	Док.Грузоотправитель,
	|	ВЫБОР
	|		КОГДА Док.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Док.Контрагент
	|		ИНАЧЕ Док.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	Док.ДоговорКонтрагента,
	|	Док.Контрагент,
	|	Док.КратностьВзаиморасчетов,
	|	Док.КурсВзаиморасчетов,
	|	Док.Организация,
	|	Док.СуммаВключаетНДС,
	|	Док.УчитыватьНДС,
	|	//РеализацияТоваровУслуг Док.ОтпускРазрешил,
	|	//КорректировкаРеализации Док.ИсправляемыйДокументРеализации.ОтпускРазрешил КАК ОтпускРазрешил,
	|	//РеализацияТоваровУслуг Док.ОтпускПроизвел,
	|	//КорректировкаРеализации Док.ИсправляемыйДокументРеализации.ОтпускПроизвел КАК ОтпускПроизвел,
	|	//РеализацияТоваровУслуг Док.ДоверенностьНомер,
	|	//КорректировкаРеализации Док.ИсправляемыйДокументРеализации.ДоверенностьНомер КАК ДоверенностьНомер,
	|	//РеализацияТоваровУслуг Док.ДоверенностьДата,
	|	//КорректировкаРеализации Док.ИсправляемыйДокументРеализации.ДоверенностьДата КАК ДоверенностьДата,
	|	//РеализацияТоваровУслуг Док.ДоверенностьВыдана,
	|	//КорректировкаРеализации Док.ИсправляемыйДокументРеализации.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	//РеализацияТоваровУслуг Док.ДоверенностьЧерезКого,
	|	//КорректировкаРеализации Док.ИсправляемыйДокументРеализации.ДоверенностьЧерезКого КАК ДоверенностьЧерезКого,
	|	Док.ДополнениеКАдресуДоставки,
	|	Док.Сделка,
	|	Док.ДоговорКонтрагента.ВедениеВзаиморасчетов КАК ВедениеВзаиморасчетов
	|ИЗ
	|	//РеализацияТоваровУслуг Документ.РеализацияТоваровУслуг КАК Док
	|	//КорректировкаРеализации Документ.КорректировкаРеализации КАК Док
	|ГДЕ
	|	Док.Ссылка = &ТекущийДокумент";
	
	ТекстЗапросаШапка = СтрЗаменить(ТекстЗапросаШапка, ТекстДляЗамены, "");
	Запрос = Новый Запрос(ТекстЗапросаШапка);
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	// 2. Получим данные табличной части
	ТекстЗапросаТЧ =
	"ВЫБРАТЬ
	|	ТЧ.Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(ТЧ.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК Наименование,
	|	ВЫБОР
	|		КОГДА &ДопКолонка = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ТЧ.Номенклатура.Артикул
	|		ИНАЧЕ ТЧ.Номенклатура.Код
	|	КОНЕЦ КАК ТоварКод,
	|	ТЧ.БазоваяЕдиницаИзмерения.Код КАК БазоваяЕдиницаКод,
	|	ТЧ.БазоваяЕдиницаИзмерения.Представление КАК БазоваяЕдиницаНаименование,
	|	ТЧ.БазоваяЕдиницаИзмерения.НаименованиеПолное КАК БазоваяЕдиницаНаименованиеПолное,
	|	ТЧ.БазоваяЕдиницаИзмерения.МеждународноеСокращение КАК БазоваяЕдиницаМеждународноеСокращение,
	|	ТЧ.ЕдиницаИзмерения КАК Упаковка,
	|	ТЧ.Характеристика КАК Характеристика,
	|	ТЧ.Серия КАК Серия,
	|	ТЧ.СтавкаНДС КАК СтавкаНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТЧ.ПроцентАвтоматическихСкидок <> 0
	|					ИЛИ ТЧ.ПроцентСкидкиНаценки <> 0
	|				ТОГДА ВЫБОР
	|						КОГДА ТЧ.Количество = 0
	|							ТОГДА 0
	|						ИНАЧЕ ВЫБОР
	|								КОГДА ТЧ.СуммаВключаетНДС
	|									ТОГДА ВЫРАЗИТЬ(ТЧ.СуммаСНДС / ТЧ.Количество КАК ЧИСЛО(15, 2))
	|								ИНАЧЕ ВЫРАЗИТЬ(ТЧ.СуммаБезНДС / ТЧ.Количество КАК ЧИСЛО(15, 2))
	|							КОНЕЦ
	|					КОНЕЦ
	|			ИНАЧЕ ТЧ.Цена
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
	|	ТЧ.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ТЧ.СуммаБезНДС КАК ЧИСЛО(15, 2)) КАК СуммаБезНДС,
	|	ВЫРАЗИТЬ(ТЧ.СуммаНДС КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ВЫРАЗИТЬ(ТЧ.СуммаСНДС КАК ЧИСЛО(15, 2)) КАК СуммаСНДС,
	|	ТЧ.СуммаВключаетНДС КАК НДСУчтеноВСумме,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТЧ.СуммаВключаетНДС
	|				ТОГДА ТЧ.СуммаСНДС
	|			ИНАЧЕ ТЧ.СуммаБезНДС
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Сумма,
	|	ТЧ.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|	ТЧ.ЕдиницаИзмерения.Коэффициент КАК ЕдиницаИзмеренияКоэффициент,
	|	ТЧ.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ТЧ.СтранаПроисхождения.НаименованиеПолное КАК Страна,
	|	ТЧ.НомерГТД.Код КАК ГТД,
	|	ТЧ.ДокументОснование
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТЧ.Номенклатура КАК Номенклатура,
	|		ТЧ.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ТЧ.Номенклатура.БазоваяЕдиницаИзмерения КАК БазоваяЕдиницаИзмерения,
	|		ТЧ.ХарактеристикаНоменклатуры КАК Характеристика,
	|		ТЧ.СерияНоменклатуры КАК Серия,
	|		ТЧ.СтавкаНДС КАК СтавкаНДС,
	|		ТЧ.Цена * &Курс / &Кратность КАК Цена,
	|		СУММА(ТЧ.Количество) КАК Количество,
	|		СУММА(ТЧ.СуммаНДС * &Курс / &Кратность) КАК СуммаНДС,
	|		МИНИМУМ(ТЧ.НомерСтроки) КАК НомерСтроки,
	|		ТЧ.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|		СУММА(ВЫБОР
	|				КОГДА ТЧ.Ссылка.СуммаВключаетНДС
	|					ТОГДА ТЧ.Сумма - ТЧ.СуммаНДС
	|				ИНАЧЕ ТЧ.Сумма
	|			КОНЕЦ * &Курс / &Кратность) КАК СуммаБезНДС,
	|		СУММА(ВЫБОР
	|				КОГДА ТЧ.Ссылка.СуммаВключаетНДС
	|					ТОГДА ТЧ.Сумма
	|				ИНАЧЕ ТЧ.Сумма + ТЧ.СуммаНДС
	|			КОНЕЦ * &Курс / &Кратность) КАК СуммаСНДС,
	|		ТЧ.СерияНоменклатуры.СтранаПроисхождения КАК СтранаПроисхождения,
	|		ТЧ.СерияНоменклатуры.НомерГТД КАК НомерГТД,
	|		//РеализацияТоваровУслуг ТЧ.ПроцентАвтоматическихСкидок КАК ПроцентАвтоматическихСкидок,
	|		//КорректировкаРеализации 0 КАК ПроцентАвтоматическихСкидок,
	|		//РеализацияТоваровУслуг ТЧ.ПроцентСкидкиНаценки КАК ПроцентСкидкиНаценки,
	|		//КорректировкаРеализации 0 КАК ПроцентСкидкиНаценки,
	|		ТЧ.ЗаказПокупателя КАК ДокументОснование
	|	ИЗ
	|		//РеализацияТоваровУслуг Документ.РеализацияТоваровУслуг.Товары КАК ТЧ
	|		//КорректировкаРеализации Документ.КорректировкаРеализации.Товары КАК ТЧ
	|	ГДЕ
	|		ТЧ.Ссылка = &ТекущийДокумент
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТЧ.Номенклатура,
	|		ТЧ.ЕдиницаИзмерения,
	|		ТЧ.ХарактеристикаНоменклатуры,
	|		ТЧ.СерияНоменклатуры,
	|		ТЧ.СтавкаНДС,
	|		ТЧ.Ссылка.СуммаВключаетНДС,
	|		ТЧ.Номенклатура.БазоваяЕдиницаИзмерения,
	|		ТЧ.СерияНоменклатуры.СтранаПроисхождения,
	|		ТЧ.СерияНоменклатуры.НомерГТД,
	|		//РеализацияТоваровУслуг ТЧ.ПроцентАвтоматическихСкидок,
	|		//РеализацияТоваровУслуг ТЧ.ПроцентСкидкиНаценки,
	|		ТЧ.ЗаказПокупателя,
	|		ТЧ.Цена * &Курс / &Кратность) КАК ТЧ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТЧ.НомерСтроки";
	
	ТекстЗапросаТЧ = СтрЗаменить(ТекстЗапросаТЧ, ТекстДляЗамены, "");
	Запрос = Новый Запрос(ТекстЗапросаТЧ);
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.УстановитьПараметр("ДопКолонка", 	 глЗначениеПеременной("ДополнительнаяКолонкаПечатныхФормДокументов"));
	Запрос.УстановитьПараметр("Курс",            ЗаполнениеДокументов.КурсДокумента(Ссылка, ВалютаДанных));
	Запрос.УстановитьПараметр("Кратность",       ЗаполнениеДокументов.КратностьДокумента(Ссылка, ВалютаДанных));
	
	тчТовары = Запрос.Выполнить().Выгрузить();
	
	// 3. Получим серийные номера
	ТекстЗапросаСН = 
	"ВЫБРАТЬ
	|	ТЧ.Номенклатура КАК Номенклатура,
	|	ТЧ.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|	ТЧ.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ТЧ.СерияНоменклатуры КАК Серия,
	|	ТЧ.СтавкаНДС КАК СтавкаНДС,
	|	//РеализацияТоваровУслуг ВЫРАЗИТЬ(ВЫБОР
	|	//РеализацияТоваровУслуг 		КОГДА ТЧ.Ссылка.СуммаВключаетНДС
	|	//РеализацияТоваровУслуг 				ИЛИ ТЧ.ПроцентАвтоматическихСкидок <> 0
	|	//РеализацияТоваровУслуг 				ИЛИ ТЧ.ПроцентСкидкиНаценки <> 0
	|	//РеализацияТоваровУслуг 			ТОГДА ВЫБОР
	|	//РеализацияТоваровУслуг 					КОГДА ТЧ.Количество = 0
	|	//РеализацияТоваровУслуг 						ТОГДА 0
	|	//РеализацияТоваровУслуг 					ИНАЧЕ (ТЧ.Сумма - ТЧ.СуммаНДС) / ТЧ.Количество
	|	//РеализацияТоваровУслуг 				КОНЕЦ
	|	//РеализацияТоваровУслуг 		ИНАЧЕ ТЧ.Цена
	|	//РеализацияТоваровУслуг 	КОНЕЦ * &Курс / &Кратность КАК ЧИСЛО(15, 2)) КАК Цена,
	|	//КорректировкаРеализации ВЫРАЗИТЬ(ТЧ.Цена * &Курс / &Кратность КАК ЧИСЛО(15, 2)) КАК Цена,
	|	СН.СерийныйНомер.Код КАК СерийныйНомер
	|ИЗ
	|	//РеализацияТоваровУслуг Документ.РеализацияТоваровУслуг.Товары КАК ТЧ
	|	//КорректировкаРеализации Документ.КорректировкаРеализации.Товары КАК ТЧ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|	//РеализацияТоваровУслуг Документ.РеализацияТоваровУслуг.СерийныеНомера КАК СН
	|	//КорректировкаРеализации Документ.КорректировкаРеализации.СерийныеНомера КАК СН
	|		ПО ТЧ.КлючСвязи = СН.КлючСвязи
	|ГДЕ
	|	ТЧ.Ссылка = &ТекущийДокумент
	|	И СН.Ссылка = &ТекущийДокумент";
	
	ТекстЗапросаСН = СтрЗаменить(ТекстЗапросаСН, ТекстДляЗамены, "");
	Запрос = Новый Запрос(ТекстЗапросаСН);
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.УстановитьПараметр("Курс",            ЗаполнениеДокументов.КурсДокумента(Ссылка, ВалютаДанных));
	Запрос.УстановитьПараметр("Кратность",       ЗаполнениеДокументов.КратностьДокумента(Ссылка, ВалютаДанных));

	тчСерийныеНомера = Запрос.Выполнить().Выгрузить();
	
	// 4. Заполним возвращаемую структуру
	ДанныеДляПечати = Новый Структура();	
	// Вспомогательные данные {
	// Валюта данных может или совпадать с валютой документа или с валютой регламентированного учета
	ДанныеДляПечати.Вставить("ВалютаДанных",       ВалютаДанных);
	ДанныеДляПечати.Вставить("ВалютаДокумента",    Шапка.ВалютаДокумента);
	ДанныеДляПечати.Вставить("КурсДокумента",      ЗаполнениеДокументов.КурсДокумента(Ссылка, ВалютаДанных));
	ДанныеДляПечати.Вставить("КратностьДокумента", ЗаполнениеДокументов.КратностьДокумента(Ссылка, ВалютаДанных));
	// Вспомогательные данные }
	
	СписокЮр   = "ПолноеНаименование,ИНН,Свидетельство,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет";
	СписокФакт = "ПолноеНаименование,ИНН,Свидетельство,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет";
	
	СведенияОЛицензиаре = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента, , Шапка.БанковскийСчетОрганизации);
	СведенияОЛицензиаре.Вставить("ЮрФизЛицо", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Шапка.Организация, "ЮрФизЛицо"));
	ДанныеДляПечати.Вставить("СведенияОЛицензиаре", СведенияОЛицензиаре);
	ДанныеДляПечати.Вставить("ПредставлениеЛицензиара", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОЛицензиаре, СписокФакт));
	ДанныеДляПечати.Вставить("Поставщик", Шапка.Организация); // для расшифровки
	
	СведенияОЛицензиате = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Контрагент,  Шапка.ДатаДокумента);
	СведенияОЛицензиате.Вставить("ЮрФизЛицо", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Шапка.Контрагент, "ЮрФизЛицо"));
	ДанныеДляПечати.Вставить("СведенияОЛицензиате", СведенияОЛицензиате);
	ДанныеДляПечати.Вставить("ПредставлениеЛицензиата", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОЛицензиате, СписокФакт));
	ДанныеДляПечати.Вставить("Грузополучатель", Шапка.Контрагент); // для расшифровки
	
	СведенияОПлательщике = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.ДатаДокумента);
	СведенияОПлательщике.Вставить("ЮрФизЛицо", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Шапка.Контрагент, "ЮрФизЛицо"));
	ДанныеДляПечати.Вставить("СведенияОПлательщике", СведенияОПлательщике);
	ДанныеДляПечати.Вставить("ПредставлениеПлательщика", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПлательщике, СписокЮр));
	ДанныеДляПечати.Вставить("Плательщик", Шапка.Контрагент); // для расшифровки
	
	ДанныеДляПечати.Вставить("ДатаДокумента", Шапка.ДатаДокумента);
	ДанныеДляПечати.Вставить("НомерДокумента", ОбщегоНазначения.ПолучитьНомерНаПечать(Ссылка));
	ДанныеДляПечати.Вставить("ВидОперации", Шапка.ВидОперации);
	ДанныеДляПечати.Вставить("ДокументыОснования", Шапка.ДокументОснование);
	ДанныеДляПечати.Вставить("ИсправляемыйДокументРеализации", Шапка.ИсправляемыйДокументРеализации);
	
	Если Шапка.ВедениеВзаиморасчетов <> Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом И ЗначениеЗаполнено(Шапка.Сделка) Тогда
		Основание = ОбщегоНазначения.СформироватьЗаголовокДокумента(Шапка.Сделка, Строка(Шапка.Сделка.Метаданные().Синоним));
	Иначе
		Основание = Шапка.ДоговорКонтрагента;
	КонецЕсли;
	ДанныеДляПечати.Вставить("Основание", Основание);
	
	ДанныеДляПечати.Вставить("ЛицензиарНаименование", СведенияОЛицензиаре.ПолноеНаименование); 
	ДанныеДляПечати.Вставить("ЛицензиатНаименование", СведенияОЛицензиате.ПолноеНаименование); 
	
	ДанныеДляПечати.Вставить("ОтсрочкаПлатежаДней", 0);
	ДанныеДляПечати.Вставить("ПроцентШтрафаЗаДеньПросрочки", 0);
	ДанныеДляПечати.Вставить("КодПартнера", "");
	
	// В табличной части заполним колонку "СерийныйНомер"
	тчТовары.Колонки.Добавить("СерийныйНомер", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(1000));
	СтруктураОтбора = Новый Структура("Номенклатура,ЕдиницаИзмеренияКодПоОКЕИ,Характеристика,Серия,СтавкаНДС,Цена");
	Для Каждого СтрокаТовара Из тчТовары Цикл
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаТовара);
		мСерийныеНомера = тчСерийныеНомера.НайтиСтроки(СтруктураОтбора);
		КоличествоСерийныхНомеров = мСерийныеНомера.Количество();
		Для Сч = 0 По КоличествоСерийныхНомеров - 1 Цикл
			СтрокаСерийногоНомера = мСерийныеНомера[Сч];
			СтрокаТовара.СерийныйНомер = СтрокаТовара.СерийныйНомер + СтрокаСерийногоНомера.СерийныйНомер;
			Если Сч <> КоличествоСерийныхНомеров - 1 Тогда
				СтрокаТовара.СерийныйНомер = СтрокаТовара.СерийныйНомер + ";";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ДанныеДляПечати.Вставить("Строки", тчТовары);
	
	ДанныеДляПечати.Вставить("КоличествоЛистовВПриложении", 0); // Будет вычислено при выводе
	ДанныеДляПечати.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(тчТовары.Количество(), ,",,,,,,,,0"));
	ДанныеДляПечати.Вставить("СуммаПрописью", ОбщегоНазначения.СформироватьСуммуПрописью(тчТовары.Итог("СуммаСНДС"), ДанныеДляПечати.ВалютаДанных));
	
	Если ЗначениеЗаполнено(Шапка.ОтпускРазрешил) Тогда
		ФИО = ФормированиеПечатныхФорм.ФамилияИмяОтчество(Шапка.ОтпускРазрешил, Шапка.ДатаДокумента);
		ФИОРуководителя = ОбщегоНазначения.ФамилияИнициалыФизЛица(ФИО.Фамилия+" "+ФИО.Имя+" "+ФИО.Отчество)+" "+Шапка.ОтпускРазрешил;
		СведенияОСотруднике = ФормированиеПечатныхФорм.ДолжностьОтветственногоЛицаОрганизации(Шапка.ОтпускРазрешил, Шапка.ДатаДокумента, Шапка.Организация);
		ДолжностьРуководителя = СведенияОСотруднике.Должность;
	Иначе
		ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизации(Шапка.Организация, Шапка.ДатаДокумента);
		ФИОРуководителя = ОтветственныеЛица.Руководитель;
		ДолжностьРуководителя = ОтветственныеЛица.РуководительДолжность;
	КонецЕсли;
	ДанныеДляПечати.Вставить("ДолжностьРуководителя", ДолжностьРуководителя);
	ДанныеДляПечати.Вставить("ФИОРуководителя", ФИОРуководителя); // Здесь должны быть фамилия и инициалы
	
	ДанныеДляПечати.Вставить("ДатаПодписиДокумента", Формат(Шапка.ДатаДокумента, "ДФ='дд ММММ гггг ""года.""'"));
	ДанныеДляПечати.Вставить("ДоверенностьНомер", Шапка.ДоверенностьНомер);
	ДанныеДляПечати.Вставить("ДоверенностьДата", Формат(Шапка.ДоверенностьДата, "ДФ='дд ММММ гггг ""года.""'"));
	ДанныеДляПечати.Вставить("ДоверенностьВыдана", Шапка.ДоверенностьВыдана);
	ДанныеДляПечати.Вставить("ДоверенностьЧерезКого", Шапка.ДоверенностьЧерезКого);
	
	Возврат ДанныеДляПечати;
	
КонецФункции
