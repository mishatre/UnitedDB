
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Обработчик события ПередЗаписью объекта.
//
Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если Не ЭтоГруппа
	   И Не ЭтоНовый()
	   И ВидСклада <> Ссылка.ВидСклада
	   И СуществуютСсылки() Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Существуют документы, в которых выбран склад """ + Наименование + """."
		   + Символы.ПС + "Реквизит ""Вид склада"" не может быть изменен.", Отказ);
	КонецЕсли;

	// Для розничных складов и НТТ необходимо указывать тип цен.
	Если Не ЭтоГруппа
	   И (ВидСклада = Перечисления.ВидыСкладов.Розничный Или ВидСклада = Перечисления.ВидыСкладов.НТТ)
	   И Не ЗначениеЗаполнено(ТипЦенРозничнойТорговли) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Для склада вида """ + ВидСклада + """ необходимо указать тип цен розничной торговли.", Отказ);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция проверяет, существуют ли движения по складу.
// Если есть - менять реквизит "Вид склада" нельзя.
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Истина - если есть движения, Ложь - если нет.
//
Функция СуществуютСсылки()

	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Результат
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
	|ГДЕ
	|	ТоварыНаСкладах.Склад = &Склад
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Результат
	|ИЗ
	|	РегистрНакопления.ТоварыВРознице КАК ТоварыВРознице
	|ГДЕ
	|	ТоварыВРознице.Склад = &Склад
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Результат
	|ИЗ
	|	РегистрНакопления.ТоварыВНТТ КАК ТоварыВНТТ
	|ГДЕ
	|	ТоварыВНТТ.Склад = &Склад
	|");

	Запрос.УстановитьПараметр("Склад", Ссылка);

	Возврат Не Запрос.Выполнить().Пустой();

КонецФункции