 //Модуль процедур - доработок.
 
 Функция ИспользоватьКонтрольПрав()
	//Настройка использования контроля 
	//Истина - итспользовать, ложь - не использовать.
	 Возврат Истина;
	 
 КонецФункции	 
 
 ////////////////////////////////////////////////////
 //Проверка прав пользователя.
 
 //Есть ли у суперпользователя права суперпользователя 
 Функция ЭтоСуперпользователь() Экспорт
	 
	 Если РольДоступна("Суперпользователь") тогда 
		 Возврат Истина;
	 Иначе	 
	     Возврат Ложь;
	 КонецЕсли;	 
		 
 КонецФункции	
 //Есть ли у пользователя права админа
 Функция ЭтоАдмин() Экспорт
	 
	 Если РольДоступна("ПолныеПрава") тогда 
		 Возврат Истина;
	 Иначе	 
	     Возврат Ложь;
	 КонецЕсли;	  
	 
 КонецФункции	 
 //Есть ли у сотрудника права администратора склада
  Функция ЭтоАдминистраторСклада() Экспорт
	 
	 Если РольДоступна("АдминистраторСклада") тогда 
		 Возврат Истина;
	 Иначе	 
	     Возврат Ложь;
	 КонецЕсли;	  
	 
 КонецФункции	
 
 //Является ли текущийПользователь руководителем  подразделения выбранного сотрудника
 Функция ЭтоРуководительПодразделения(Сотрудник) Экспорт
	 
	 Запрос = Новый Запрос;
		 Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                |	Подразделения.Ссылка
		                |ИЗ
		                |	Справочник.Подразделения КАК Подразделения
		                |ГДЕ
		                |	Подразделения.РуководительПодразделения = &РуководительПодразделения
		                |	И Подразделения.Сотрудники.Пользователь = &ПроверяемыйСотрудник";
		 
		 Запрос.УстановитьПараметр("РуководительПодразделения", ПараметрыСеанса.ТекущийПользователь );
		 Запрос.УстановитьПараметр("ПроверяемыйСотрудник", Сотрудник );

		 
		 Результат = Запрос.Выполнить();
		 Выборка = Результат.Выбрать();
		 
		 Если  Выборка.Количество()> 0 Тогда
			 Возврат Истина;
		 Иначе
			 Возврат Ложь;
		 КонецЕсли;	 
	 
 КонецФункции
 
 //Список подразделений, в которых работает сотрудник
 Функция ПолучитьПодразделения(Сотрудник)Экспорт
	    Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ПодразделенияСотрудники.Ссылка
		               |ИЗ
		               |	Справочник.Подразделения.Сотрудники КАК ПодразделенияСотрудники
		               |ГДЕ
		               |	(ПодразделенияСотрудники.Пользователь = &Пользователь
		               |			ИЛИ ПодразделенияСотрудники.Ссылка.РуководительПодразделения = &Пользователь)";
		
		Запрос.УстановитьПараметр("Пользователь", Сотрудник );    		
		Результат = Запрос.Выполнить();                           		
		Возврат Результат.Выгрузить();		
		
 КонецФункции	                                 
 
 //Отображает сотрудников подразделения
 Функция СотрудникиПодразделений(Подразделения) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПодразделенияСотрудники.Пользователь
	               |ИЗ
	               |	Справочник.Подразделения.Сотрудники КАК ПодразделенияСотрудники
	               |ГДЕ
	               |	ПодразделенияСотрудники.Ссылка В(&Подразделения)"	;
	 
	Запрос.УстановитьПараметр("Подразделения", Подразделения );		
	Результат = Запрос.Выполнить();		
	Возврат Результат.Выгрузить();	 
	 
 КонецФункции	 
 
 //Список сотрудников, доверяющих просмотр
 Функция ПолучитьДоверителейНаПросмотр(Сотрудник) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПользователиДелегированныеЛица.Ссылка
	               |ИЗ
	               |	Справочник.Пользователи.ДелегированныеЛица КАК ПользователиДелегированныеЛица
	               |ГДЕ
	               |	ПользователиДелегированныеЛица.Пользователь = &Пользователь
	               |	И ПользователиДелегированныеЛица.Чтение = ИСТИНА";
	
	Запрос.УстановитьПараметр("Пользователь",Сотрудник );
	
	Результат = Запрос.Выполнить();

	Возврат Результат.Выгрузить();
	  
 КонецФункции
 
 //Список сотрудников, доверяющих редактирование
 Функция ПолучитьДоверителейНаРедактирование(Сотрудник) Экспорт
	 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПользователиДелегированныеЛица.Ссылка
	               |ИЗ
	               |	Справочник.Пользователи.ДелегированныеЛица КАК ПользователиДелегированныеЛица
	               |ГДЕ
	               |	ПользователиДелегированныеЛица.Пользователь = &Пользователь
	               |	И ПользователиДелегированныеЛица.Запись = ИСТИНА";
	
	Запрос.УстановитьПараметр("Пользователь",Сотрудник );
	
	Результат = Запрос.Выполнить();

	Возврат Результат.Выгрузить();
 
 КонецФункции
 
 //Список сотрудников, доверяющих управление резервами
 Функция ПолучитьДоверителейНаРезервирование(Сотрудник) Экспорт
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПользователиДелегированныеЛица.Ссылка
	               |ИЗ
	               |	Справочник.Пользователи.ДелегированныеЛица КАК ПользователиДелегированныеЛица
	               |ГДЕ
	               |	ПользователиДелегированныеЛица.Пользователь = &Пользователь
	               |	И ПользователиДелегированныеЛица.Резервы = ИСТИНА";
	
	Запрос.УстановитьПараметр("Пользователь",Сотрудник );
	
	Результат = Запрос.Выполнить();

	Возврат Результат.Выгрузить();
 
 КонецФункции	 
 
 //Можно ли открывать организацию?
 Функция ОрганизацияРазрешена(Сотрудник, Организация) Экспорт
	 
	   Запрос = Новый Запрос;
	   Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                  |	ПользователиЗапрещенныеОрганизации.Ссылка
	                  |ИЗ
	                  |	Справочник.Пользователи.ЗапрещенныеОрганизации КАК ПользователиЗапрещенныеОрганизации
	                  |ГДЕ
	                  |	ПользователиЗапрещенныеОрганизации.Ссылка = &Пользователь
	                  |	И ПользователиЗапрещенныеОрганизации.Организация = &Организация";
	   
	   Запрос.УстановитьПараметр("Пользователь", Сотрудник);
	   Запрос.УстановитьПараметр("Организация",  Организация);
	   
	   Результат = Запрос.Выполнить();
	   Выборка = Результат.Выбрать();
	   
	   Если Выборка.Количество()>0 тогда
		   Возврат Ложь;
	   Иначе
		   Возврат Истина;
	   КонецЕсли;	   
 
 КонецФункции	 
 
 //Можно ли использовать склад?
 Функция СкладРазрешен(Сотрудник, Склад) Экспорт
	    Запрос = Новый Запрос;
	   Запрос.Текст = "ВЫБРАТЬ
	                  |	ПользователиЗапрещенныеСклады.Ссылка
	                  |ИЗ
	                  |	Справочник.Пользователи.ЗапрещенныеСклады КАК ПользователиЗапрещенныеСклады
	                  |ГДЕ
	                  |	ПользователиЗапрещенныеСклады.Ссылка = &Пользователь
	                  |	И ПользователиЗапрещенныеСклады.Склад = &Склад";
	   
	   Запрос.УстановитьПараметр("Пользователь", Сотрудник);
	   Запрос.УстановитьПараметр("Склад",  Склад);
	   
	   Результат = Запрос.Выполнить();
	   Выборка = Результат.Выбрать();
	   
	   Если Выборка.Количество()>0 тогда
		   Возврат Ложь;
	   Иначе
		   Возврат Истина;
	   КонецЕсли;	   

 КонецФункции	 
 
 //Контрагент разрешен?
 Функция КонтрагентРазрешен(Сотрудник, Контрагент) Экспорт
	 
	 Запрос = Новый Запрос;
	   Запрос.Текст = "ВЫБРАТЬ
	                  |	ПользователиЗапрещенныеКонтрагенты.Ссылка
	                  |ИЗ
	                  |	Справочник.Пользователи.ЗапрещенныеКонтрагенты КАК ПользователиЗапрещенныеКонтрагенты
	                  |ГДЕ
	                  |	ПользователиЗапрещенныеКонтрагенты.Ссылка = &Пользователь
	                  |	И ПользователиЗапрещенныеКонтрагенты.Контрагент = &Контрагент";
	   
	   Запрос.УстановитьПараметр("Пользователь", Сотрудник);
	   Запрос.УстановитьПараметр("Контрагент",  Контрагент);
	   
	   Результат = Запрос.Выполнить();
	   Выборка = Результат.Выбрать();
	   
	   Если Выборка.Количество()>0 тогда
		   Возврат Ложь;
	   Иначе
		   Возврат Истина;
	   КонецЕсли;	   

 КонецФункции
 
 //Регион разрешен?
 Функция РегионРазрешен (Сотрудник, Регион) Экспорт
	 
	   Запрос = Новый Запрос;
	   Запрос.Текст = "ВЫБРАТЬ
	                  |	ПользователиРазрешенныеРегионы.Ссылка
	                  |ИЗ
	                  |	Справочник.Пользователи.РазрешенныеРегионы КАК ПользователиРазрешенныеРегионы
	                  |ГДЕ
	                  |	ПользователиРазрешенныеРегионы.Ссылка = &Пользователь
	                  |	И ПользователиРазрешенныеРегионы.Регион = &Регион";
	   
	   Запрос.УстановитьПараметр("Пользователь", Сотрудник);
	   Запрос.УстановитьПараметр("Регион",  Регион);
	   
	   Результат = Запрос.Выполнить();
	   Выборка = Результат.Выбрать();
	   
	   Если Выборка.Количество()>0 тогда
		   Возврат Истина;
	   Иначе
		   Возврат Ложь;
	   КонецЕсли;	
   КонецФункции	
   
 Функция СотрудникДоверяетЧтениеДокументовТекПользователю(Сотрудник)
	   
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПользователиДелегированныеЛица.Ссылка
	|ИЗ
	|	Справочник.Пользователи.ДелегированныеЛица КАК ПользователиДелегированныеЛица
	|ГДЕ
	|	ПользователиДелегированныеЛица.Пользователь = &ТекущийПользователь
	|	И ПользователиДелегированныеЛица.Чтение = ИСТИНА
	|	И ПользователиДелегированныеЛица.Ссылка = &Сотрудник";
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник );
	Запрос.УстановитьПараметр("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь );

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Количество()>0 Тогда
		Возврат Истина;
	иначе
		Возврат Ложь;
	КонецЕсли; 
	
 КонецФункции
 
//Возвращает список разроешенных регионов
Функция ПолучитьРегионыСотрудника(Сотрудник)
	
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	 |	ПользователиРазрешенныеРегионы.Регион
	 |ИЗ
	 |	Справочник.Пользователи.РазрешенныеРегионы КАК ПользователиРазрешенныеРегионы
	 |ГДЕ
	 |	ПользователиРазрешенныеРегионы.Ссылка = &Сотрудник";
	 
	 Запрос.УстановитьПараметр("Сотрудник",Сотрудник );
	 
	 Возврат Запрос.Выполнить().Выгрузить();
		 
	
КонецФункции	  
  ///////////////////////////////////////////////////////////////////
  //Модули обработки ограничения прав////////////////////////////////
  ///////////////////////////////////////////////////////////////////

Процедура амбЗаказПриОткрытииПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	// Вставить содержимое обработчика.
КонецПроцедуры


Функция МожноОткрытьЗаказ(СсылкаНаОбъект) Экспорт
//Проверка заказа покупателя на возможность быть открытым.
//Возвращает отказ = Истина/Ложь 

Если ИспользоватьКонтрольПрав() Тогда 
	Если ЕстьЗапретНаПросмотрКонтрагента(СсылкаНаОбъект.Контрагент) тогда
		Возврат Истина;	
	Иначе	
		Если СсылкаНаОбъект.ЭтоНовый() или ЭтоАдмин() или ЭтоСуперпользователь() тогда
			Возврат Истина;
		ИначеЕсли 	ПараметрыСеанса.ТекущийПользователь = СсылкаНаОбъект.Ответственный или ПараметрыСеанса.ТекущийПользователь = СсылкаНаОбъект.ДоговорКонтрагента.вббОтветственный тогда
			Возврат Истина;
		ИначеЕсли ЭтоРуководительПодразделения(СсылкаНаОбъект.Ответственный) или ЭтоРуководительПодразделения(СсылкаНаОбъект.ДоговорКонтрагента.вббОтветственный) тогда
			Возврат Истина;
		ИначеЕсли СотрудникДоверяетЧтениеДокументовТекПользователю(СсылкаНаОбъект.Ответственный) или СотрудникДоверяетЧтениеДокументовТекПользователю(СсылкаНаОбъект.ДоговорКонтрагента.вббОтветственный) тогда
	        Возврат Истина;		
		Иначе	
			Возврат Ложь;
		КонецЕсли;	//Это Админ?
	КонецЕсли; // Есть запрет на просмотр контрагента	
Иначе 
	Возврат Истина;
КонецЕсли; //Использовать контроль прав	

КонецФункции	

Функция ЕстьЗапретНаПросмотрКонтрагента(Контрагент) Экспорт     	
	Если ИспользоватьКонтрольПрав() тогда  		
		Если Контрагент = Справочники.Контрагенты.ПустаяСсылка() или Контрагент.ЭтоНовый() или ЭтоАдмин() или ЭтоСуперпользователь() тогда
			Возврат Ложь;
		ИначеЕсли не РегионРазрешен (ПараметрыСеанса.ТекущийПользователь, Контрагент.Регион) Тогда			
			Возврат Истина;
		ИначеЕсли не КонтрагентРазрешен(ПараметрыСеанса.ТекущийПользователь, Контрагент) Тогда
			Возврат Истина; 
		Иначе
			Возврат Ложь;
		КонецЕсли	
	Иначе
		Возврат Ложь;
	КонецЕсли;//Использовать контроль прав?	
КонецФункции	


 
 
 
 