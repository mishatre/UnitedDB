////////////////////////////////////////////////////////////////////////////////
//СЕРВИСНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//
# Если Клиент Тогда
// Функция управляет выпадающим списком полей дат
//
Функция ВыборДатыВремениИзВыпадающегоСписка(Элемент, СтандартнаяОбработка, Форма) Экспорт

	СтандартнаяОбработка = Ложь;

	СписокВремен = Новый СписокЗначений;

	Если Не ЗначениеЗаполнено(Элемент.Значение) Тогда
		Элемент.Значение = НачалоМинуты(ТекущаяДата());
	КонецЕсли;

	Если ДеньГода(Элемент.Значение) = ДеньГода(ТекущаяДата()) Тогда

		Если Минута(ТекущаяДата()) > 30 Тогда
			ВремяСписка = НачалоМинуты(КонецЧаса(ТекущаяДата()) + 60);
		Иначе
			ВремяСписка = НачалоМинуты(КонецЧаса(ТекущаяДата()) - 29*60);
		КонецЕсли;

	Иначе
		ВремяСписка = НачалоДня(Элемент.Значение);
	КонецЕсли;

	Пока НачалоЧаса(ВремяСписка) < КонецДня(Элемент.Значение) Цикл

		СписокВремен.Добавить(ВремяСписка, Формат(ВремяСписка,"ДФ='дд.ММ.гггг ЧЧ:мм'"));
		ВремяСписка = ВремяСписка + 30*60;

	КонецЦикла;

	ВыбранноеВремя = Форма.ВыбратьИзСписка(СписокВремен, Элемент);

	Возврат ВыбранноеВремя;

КонецФункции // ВыборДатыВремениИзВыпадающегоСписка()
# КонецЕсли

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ОБЪЕКТА
//

// Процедура снимает флаг оповещения перед записью завершенной задачи
// или задачи, в которой дата оповещения не определена.
//
Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(СрокОповещения)
		Или  Выполнена Тогда
		Оповещение = ЛОЖЬ;
	КонецЕсли;

КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события "ПриВыполнении".
//
Процедура ПриВыполнении(Отказ)

	ДатаИсполнения = ТекущаяДата();
	Исполнитель    = ОбщегоНазначения.ПолучитьЗначениеПеременной("глТекущийПользователь");

КонецПроцедуры // ПриВыполнении()

// Процедура - обработчик события "ПередВыполнением".
//
Процедура ПередВыполнением(Отказ)

	РаботаСБизнесПроцессами.ПроверитьЗаполнениеРеквизитов(ЭтотОбъект, Отказ);

КонецПроцедуры // ПередВыполнением()
