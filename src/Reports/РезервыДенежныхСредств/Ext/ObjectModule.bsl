#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "ТоварыНаСкладах";
	
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	 УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	// Описание исходного текста запроса.
	// При написании текста запроса рекомендуется следовать правилам, описанным в следующем шаблоне текста запроса:
	//
	//ВЫБРАТЬ // РАЗРЕШЕННЫЕ
	//	<ПсевдонимТаблицы.Поле> КАК <ПсевдонимПоля>,
	//	ПРЕДСТАВЛЕНИЕ(<ПсевдонимТаблицы>.<Поле>),
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//{ВЫБРАТЬ
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//ИЗ
	//	<Таблица> КАК <ПсевдонимТаблицы>
	//	//СОЕДИНЕНИЯ
	//{ГДЕ
	//	<ПсевдонимТаблицы.Поле>.* КАК <ПсевдонимПоля>,
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>,
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//{УПОРЯДОЧИТЬ ПО
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//УПОРЯДОЧИТЬ_СВОЙСТВА
	//	//УПОРЯДОЧИТЬ_КАТЕГОРИИ
	//}
	//ИТОГИ
	//	АГРЕГАТНАЯ_ФУНКЦИЯ(<ПсевдонимПоказателя>)
	//	//ИТОГИ_СВОЙСТВА
	//	//ИТОГИ_КАТЕГОРИИ
	//ПО
	//	ОБЩИЕ
	//{ИТОГИ ПО
	//	<ПсевдонимПоля>.*,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДенежныеСредстваВРезервеОстатки.Организация,
		|	ДенежныеСредстваВРезервеОстатки.ВидДенежныхСредств,
		|	ДенежныеСредстваВРезервеОстатки.БанковскийСчетКасса,
		|	ДенежныеСредстваВРезервеОстатки.ДокументРезервирования,
		|	ДенежныеСредстваВРезервеОстатки.БанковскийСчетКасса.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	ДенежныеСредстваВРезервеОстатки.ДокументРезервирования.ЦФО КАК ЦФО,
		|	ДенежныеСредстваВРезервеОстатки.ДокументРезервирования.Контрагент КАК Контрагент,
		|	ДенежныеСредстваВРезервеОстатки.ДокументРезервирования.Ответственный КАК Ответственный,
		|	ПРЕДСТАВЛЕНИЕ(ДенежныеСредстваВРезервеОстатки.Организация),
		|	ПРЕДСТАВЛЕНИЕ(ДенежныеСредстваВРезервеОстатки.ВидДенежныхСредств),
		|	ПРЕДСТАВЛЕНИЕ(ДенежныеСредстваВРезервеОстатки.БанковскийСчетКасса),
		|	ПРЕДСТАВЛЕНИЕ(ДенежныеСредстваВРезервеОстатки.ДокументРезервирования),
		|	ПРЕДСТАВЛЕНИЕ(ДенежныеСредстваВРезервеОстатки.БанковскийСчетКасса.ВалютаДенежныхСредств) КАК ВалютаДенежныхСредствПредставление,
		|	ПРЕДСТАВЛЕНИЕ(ДенежныеСредстваВРезервеОстатки.ДокументРезервирования.ЦФО) КАК ЦФОПредставление,
		|	ПРЕДСТАВЛЕНИЕ(ДенежныеСредстваВРезервеОстатки.ДокументРезервирования.Контрагент) КАК КонтрагентПредставление,
		|	ПРЕДСТАВЛЕНИЕ(ДенежныеСредстваВРезервеОстатки.ДокументРезервирования.Ответственный) КАК ОтветственныйПредставление,
		|	ДенежныеСредстваВРезервеОстатки.СуммаОстаток КАК СуммаОстаток
		|	//ПОЛЯ_СВОЙСТВА
		|	//ПОЛЯ_КАТЕГОРИИ
		|{ВЫБРАТЬ
		|	Организация.*,
		|	ВидДенежныхСредств.*,
		|	БанковскийСчетКасса.*,
		|	ДокументРезервирования.*,
		|	СуммаОстаток,
		|	ВалютаДенежныхСредств.*,
		|	ЦФО.*,
		|	Контрагент.*,
		|	Ответственный.*
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}

		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваВРезерве.Остатки(&ДатаКон, {БанковскийСчетКасса.* КАК БанковскийСчетКасса, ВидДенежныхСредств.* КАК ВидДенежныхСредств, ДокументРезервирования.* КАК ДокументРезервирования, Организация.*}) КАК ДенежныеСредстваВРезервеОстатки
		|	//СОЕДИНЕНИЯ
		|{ГДЕ
		|	ДенежныеСредстваВРезервеОстатки.ВидДенежныхСредств.*,
		|	ДенежныеСредстваВРезервеОстатки.БанковскийСчетКасса.*,
		|	ДенежныеСредстваВРезервеОстатки.ДокументРезервирования.*,
		|	ДенежныеСредстваВРезервеОстатки.СуммаОстаток,
		|	ДенежныеСредстваВРезервеОстатки.БанковскийСчетКасса.ВалютаДенежныхСредств.* КАК ВалютаДенежныхСредств,
		|	ДенежныеСредстваВРезервеОстатки.ДокументРезервирования.ЦФО.* КАК ЦФО,
		|	ДенежныеСредстваВРезервеОстатки.ДокументРезервирования.Контрагент.* КАК Контрагент,
		|	ДенежныеСредстваВРезервеОстатки.ДокументРезервирования.Ответственный.* КАК Ответственный
		|	//УСЛОВИЯ_СВОЙСТВА
		|	//УСЛОВИЯ_КАТЕГОРИИ
		|}

		|{УПОРЯДОЧИТЬ ПО
		|	Организация.*,
		|	ВидДенежныхСредств.*,
		|	БанковскийСчетКасса.*,
		|	ДокументРезервирования.*,
		|	СуммаОстаток,
		|	ВалютаДенежныхСредств.*,
		|	ЦФО.*,
		|	Контрагент.*,
		|	Ответственный.*
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}

		|ИТОГИ
		|	СУММА(СуммаОстаток)
		|	//ИТОГИ_СВОЙСТВА
		|	//ИТОГИ_КАТЕГОРИИ
		|ПО
		|	ОБЩИЕ
		|{ИТОГИ ПО
		|	Организация.*,
		|	ВидДенежныхСредств.*,
		|	БанковскийСчетКасса.*,
		|	ДокументРезервирования.*,
		|	ВалютаДенежныхСредств.*,
		|	ЦФО.*,
		|	Контрагент.*,
		|	Ответственный.*
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}

		|";
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( "ДенежныеСредстваВРезервеОстатки.ДокументРезервирования",            "ДокументРезервирования", "Документ резервирования", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( "ДенежныеСредстваВРезервеОстатки.ДокументРезервирования.Контрагент", "Контрагент",             "Контрагент",              ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( "ДенежныеСредстваВРезервеОстатки.Организация" , "Организация", "Организация", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Организации);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВидДенежныхСредств",     "Вид денежных средств");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВалютаДенежныхСредств",  "Валюта Банка/кассы");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДокументРезервирования", "Документ резервирования");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("БанковскийСчетКасса",    "Банк/касса");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаОстаток",           "Сумма в валюте банковского счета/кассы");
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаОстаток", "Сумма в валюте банковского счета/кассы", Истина, "ЧЦ=15; ЧДЦ=2");
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("БанковскийСчетКасса");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ДокументРезервирования");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеКолонки("ВалютаДенежныхСредств");
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Организация");
	УниверсальныйОтчет.ДобавитьОтбор("БанковскийСчетКасса");
	УниверсальныйОтчет.ДобавитьОтбор("ЦФО");
	УниверсальныйОтчет.ДобавитьОтбор("Контрагент");
	
	// Добавление предопределенных полей порядка отчета.
	// Необходимо вызывать для каждого добавляемого поля порядка.
	// УниверсальныйОтчет.ДобавитьПорядок(<ПутьКДанным>);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДаннымРодитель>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>, <Размещение>, <Положение>);
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);

КонецПроцедуры // СформироватьОтчет()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = Неопределено;
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли
