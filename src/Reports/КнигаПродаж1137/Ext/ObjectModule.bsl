Перем ТаблицаДополнительнойИнформацииПоСФ, СоответствиеСтрокиДопИнформацииПоСчетуФактуре;
Перем ПрефиксыРИБиОрганизации;
Перем мСведенияОбОрганизации;
Перем мСтруктураОтбораПроведен, мСтруктураОтбораСчетФактуры;
Перем мСписокОрганизаций;

#Если КЛИЕНТ Тогда
	
// Формирует табличную часть отчета
Процедура СформироватьКнигуПродаж(ЭлементыФормы) Экспорт
	
	мСведенияОбОрганизации = Неопределено;
	ОшибкаПолученияУчетнойПолитики = Ложь;
		
	Если ОшибкаПолученияУчетнойПолитики Тогда
		Возврат;
	КонецЕсли;
		
	ПрефиксыРИБиОрганизации = ОбщегоНазначения.СформироватьМассивПрефиксовДляРИБИОрганизации(Организация);
	ЕстьЗаписиПоКолонке20 = Ложь;	
		
	ПанельРазделовКниги = ЭлементыФормы.ПанельРазделовКниги;
	ОсновнойРаздел = ПанельРазделовКниги.Страницы.ОсновнойРаздел;
	КоличествоОтображаемыхРазделов = ПанельРазделовКниги.Страницы.Количество();
	Для НомерСтраницы = 1 по КоличествоОтображаемыхРазделов Цикл
		Если ПанельРазделовКниги.Страницы[КоличествоОтображаемыхРазделов - НомерСтраницы] = ОсновнойРаздел Тогда
			Продолжить;
		КонецЕсли; 
		ПанельРазделовКниги.Страницы.Удалить(КоличествоОтображаемыхРазделов - НомерСтраницы);
	КонецЦикла; 
	
	мСписокОрганизаций = Новый СписокЗначений;
	мСписокОрганизаций.Добавить(Организация);
	
	Если Не (ВыводитьТолькоДопЛисты И ФормироватьДополнительныеЛисты) Тогда
		СформироватьОсновнойРаздел(ЭлементыФормы);
	КонецЕсли;
	
	СформироватьДополнительныеЛисты(НачалоПериода, КонецПериода, ЭлементыФормы);
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуКнигиПродаж(Секция, ЗаписьКниги, НомерСтроки = Неопределено)
	
	ЭтоДетальнаяЗапись = Ложь;
	Если ЗаписьКниги.Строки.Количество() > 0 Тогда 
		ПараметрыЗаполнения = ЗаписьКниги.Строки[0];
	Иначе
		ПараметрыЗаполнения = ЗаписьКниги;
		ЭтоДетальнаяЗапись = Истина;
	КонецЕсли;
	
	Если ТипЗнч(Секция) = Тип("ТабличныйДокумент") Тогда
		Секция.Заполнить(ПараметрыЗаполнения);
	Иначе
		ЗаполнитьЗначенияСвойств(Секция, ПараметрыЗаполнения);
	КонецЕсли;	

	Секция.ВсегоПродаж	 	  = ЗаписьКниги.ВсегоПродаж;
	Секция.СуммаБезНДС18 	  = ЗаписьКниги.СуммаБезНДС18;
	Секция.НДС18 			  = ЗаписьКниги.НДС18;
	Секция.СуммаБезНДС10 	  = ЗаписьКниги.СуммаБезНДС10;
	Секция.НДС10 			  = ЗаписьКниги.НДС10;
	Секция.НДС0 			  = ЗаписьКниги.НДС0;
	Секция.СуммаСовсемБезНДС  = ЗаписьКниги.СуммаСовсемБезНДС;

	Если ЗначениеЗаполнено(ЗаписьКниги.СчетФактураДокумент) Тогда
		Секция.СчетФактура = ЗаписьКниги.СчетФактураДокумент;
	ИначеЕсли ЗаписьКниги.Строки.Количество() <> 0 Тогда
		Секция.СчетФактура = ЗаписьКниги.Строки[0].СчетФактура;
	КонецЕсли;
	
	Если ЭтоДетальнаяЗапись И ЗаписьКниги.Строки.Количество() = 0 Тогда
		РасшифровкаДанныхПокупателя = ЗаписьКниги;
	Иначе
		РасшифровкаДанныхПокупателя = ПараметрыЗаполнения;
	КонецЕсли;
	
	ВариантыПредставленияСФ = ОпределитьДатуИНомерСФ(ПараметрыЗаполнения);
	
	Если ЭтоДетальнаяЗапись И ЗаписьКниги.Строки.Количество() = 0 Тогда
		РасшифровкаДанныхПокупателя = ЗаписьКниги;
	Иначе
		РасшифровкаДанныхПокупателя = ПараметрыЗаполнения;
	КонецЕсли;
	
	// Универсальная структура для заполнения книги по разным версиям
	СоставСтроки = Новый Структура;
	СоставСтроки.Вставить("Ном", 			 НомерСтроки);
	СоставСтроки.Вставить("КодОперации", 	 РасшифровкаДанныхПокупателя.КодВидаОперации);
	Если ЗначениеЗаполнено(РасшифровкаДанныхПокупателя.Покупатель) Тогда
		СоставСтроки.Вставить("Покупатель", 	 РасшифровкаДанныхПокупателя.Покупатель);
		СоставСтроки.Вставить("ПокупательИНН", 	 РасшифровкаДанныхПокупателя.ПокупательИНН);
		СоставСтроки.Вставить("ПокупательКПП", 	 РасшифровкаДанныхПокупателя.ПокупательКПП);
		СоставСтроки.Вставить("Графа8", 		 Строка(РасшифровкаДанныхПокупателя.ПокупательИНН) + 
			?(ЗначениеЗаполнено(РасшифровкаДанныхПокупателя.ПокупательКПП), "/" + Строка(РасшифровкаДанныхПокупателя.ПокупательКПП), ""));
		СоставСтроки.Вставить("ПокупательРазделитель", ?(ЗначениеЗаполнено(РасшифровкаДанныхПокупателя.ПокупательКПП), "/" , ""));
		СоставСтроки.Вставить("Посредник",		 РасшифровкаДанныхПокупателя.Посредник);
		СоставСтроки.Вставить("ПосредникИНН_КПП","" + РасшифровкаДанныхПокупателя.ПосредникИНН + 
			?(ЗначениеЗаполнено(РасшифровкаДанныхПокупателя.ПосредникКПП), "/" + РасшифровкаДанныхПокупателя.ПосредникКПП, ""));
	КонецЕсли;
	СоставСтроки.Вставить("Валюта", 			   ?(ЗначениеЗаполнено(РасшифровкаДанныхПокупателя.Валюта),
		"" + РасшифровкаДанныхПокупателя.Валюта + ", " + РасшифровкаДанныхПокупателя.ВалютаКод,  ""));
	СоставСтроки.Вставить("ВсегоПродажВВалюте",    ?(ЗначениеЗаполнено(РасшифровкаДанныхПокупателя.Валюта),
		РасшифровкаДанныхПокупателя.ВсегоПродажВВалюте, ""));
	СоставСтроки.Вставить("ДатаНомер", 	 	 ВариантыПредставленияСФ.ДатаНомер);
	СоставСтроки.Вставить("НомерДата", 	 	 ВариантыПредставленияСФ.НомерДата);
	
	Если ЗначениеЗаполнено(РасшифровкаДанныхПокупателя.СчетФактура) Тогда
		СтрокаДополнительнойИнформации = СоответствиеСтрокиДопИнформацииПоСчетуФактуре[Строка(РасшифровкаДанныхПокупателя.СчетФактура.УникальныйИдентификатор())];
		Если НЕ СтрокаДополнительнойИнформации = Неопределено 
			И НЕ СтрокаДополнительнойИнформации.Строки.Количество() = 0 Тогда
			СтрокаДополнительнойИнформации = СтрокаДополнительнойИнформации.Строки[0];
		Иначе
			СтрокаДополнительнойИнформации = Неопределено;
		КонецЕсли; 
	Иначе
		СтрокаДополнительнойИнформации = Неопределено;
	КонецЕсли;
	
	НомерДатаИсправления = ОпределитьНомерИДатуИсправленногоСФ(РасшифровкаДанныхПокупателя);	
	Секция.НомерДатаИсправления = НомерДатаИсправления;	

	НомерДатаКорректировки = ОпределитьНомерИДатуКорректировочногоСФ(РасшифровкаДанныхПокупателя);
	Секция.НомерДатаКорректировки = НомерДатаКорректировки;	
	
	НомерДатаИсправленияКорректировки = ОпределитьНомерИДатуИсправленияКорректировочногоСФ(РасшифровкаДанныхПокупателя);
	Секция.НомерДатаИсправленияКорректировки = НомерДатаИсправленияКорректировки;
		
	ТекстОплаты = "";
	СписокДатОплат = Новый СписокЗначений();
	ТекстОплатыСНомером = "";
	СписокНомеровИДатОплат = Новый СписокЗначений();
	Если ЭтоДетальнаяЗапись Тогда 
		Если ЗначениеЗаполнено(ЗаписьКниги.ДатаОплаты) Тогда
			Если СписокДатОплат.НайтиПоЗначению(Формат(ЗаписьКниги.ДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено тогда
				ТекстОплаты = ТекстОплаты + ?(НЕ ЗначениеЗаполнено(ТекстОплаты), "", ","+Символы.ПС) + Формат(ЗаписьКниги.ДатаОплаты, "ДФ=dd.MM.yyyy");
				СписокДатОплат.Добавить(Формат(ЗаписьКниги.ДатаОплаты, "ДФ=dd.MM.yyyy"));
			КонецЕсли;
		КонецЕсли;
		Если ЗначениеЗаполнено(ЗаписьКниги.НомерДокументаОплаты) Тогда
			НомерДатаОплаты = "" + ЗаписьКниги.НомерДокументаОплаты + ";" + Формат(ЗаписьКниги.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
			Если СписокНомеровИДатОплат.НайтиПоЗначению(НомерДатаОплаты) = Неопределено тогда
				ТекстОплатыСНомером = ТекстОплатыСНомером + ?(НЕ ЗначениеЗаполнено(ТекстОплатыСНомером), "", ","+Символы.ПС) + НомерДатаОплаты;
			КонецЕсли;			
		КонецЕсли;
	Иначе
		Для Каждого СтрокаЗаписи Из ЗаписьКниги.Строки Цикл
			Если ЗначениеЗаполнено(СтрокаЗаписи.ДатаОплаты) Тогда
				Если СписокДатОплат.НайтиПоЗначению(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено тогда
					ТекстОплаты = ТекстОплаты + ?(НЕ ЗначениеЗаполнено(ТекстОплаты), "", ","+Символы.ПС) + Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy");
					СписокДатОплат.Добавить(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy"));
				КонецЕсли;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаЗаписи.НомерДокументаОплаты) Тогда
				НомерДатаОплаты = "" + СтрокаЗаписи.НомерДокументаОплаты + ";" + Формат(СтрокаЗаписи.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
				Если СписокНомеровИДатОплат.НайтиПоЗначению(НомерДатаОплаты) = Неопределено тогда
					ТекстОплатыСНомером = ТекстОплатыСНомером + ?(НЕ ЗначениеЗаполнено(ТекстОплатыСНомером), "", ","+Символы.ПС) + НомерДатаОплаты;
				КонецЕсли;			
			КонецЕсли;

		КонецЦикла;
	КонецЕсли;
	
	СоставСтроки.Вставить("НомерДатаОплаты", ТекстОплатыСНомером);
	СоставСтроки.Вставить("ДатаОплаты", 	 ТекстОплаты);
	
	ЗаполнитьЗначенияСвойств(Секция, СоставСтроки);
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуКнигиПродажСводныйКомиссионный(Секция, ЗаписиКниги, НомерСтроки = Неопределено)
	
	КоличествоЗаписей = ЗаписиКниги.Количество();
	ТекущаяЗапись 		= 0;
	ВсегоПродаж	 	  	= 0;
	ВсегоПродажВВалюте 	= 0;
	СуммаБезНДС18 	 	= 0;
	НДС18 			  	= 0;
	СуммаБезНДС10 	  	= 0;
	НДС10 				= 0;
	НДС0 			  	= 0;
	СуммаСовсемБезНДС  	= 0;
	Покупатель 	= "";
	Графа8 		= "";
	ДатыНомераОплатыПоКонтрагентам = "";
	
	Для Каждого ЗаписьКниги Из ЗаписиКниги Цикл
		
		ЭтоДетальнаяЗапись = Ложь;
		Если ЗаписьКниги.Строки.Количество() > 0 Тогда 
			ЗаписьКнигиДетальная = ЗаписьКниги.Строки[0];
		Иначе
			ЗаписьКнигиДетальная = ЗаписьКниги;
			ЭтоДетальнаяЗапись = Истина;
		КонецЕсли;
		
		Если ТипЗнч(Секция) = Тип("ТабличныйДокумент") Тогда
			Секция.Заполнить(ЗаписьКнигиДетальная);
		Иначе
			ЗаполнитьЗначенияСвойств(Секция, ЗаписьКнигиДетальная);
		КонецЕсли;	

		ТекущаяЗапись = ТекущаяЗапись + 1;
		
		Если ЗначениеЗаполнено(ЗаписьКнигиДетальная.НомерДокументаОплаты) Тогда
			НомерДатаОплаты = "" + ЗаписьКнигиДетальная.НомерДокументаОплаты + ";" + Формат(ЗаписьКнигиДетальная.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
			ДатыНомераОплатыПоКонтрагентам = ДатыНомераОплатыПоКонтрагентам + ?(НЕ ЗначениеЗаполнено(ДатыНомераОплатыПоКонтрагентам), "", 
				?(Не ЗначениеЗаполнено(НомерДатаОплаты), "", "," + Символы.ПС)) + НомерДатаОплаты;
		Иначе
			ВсегоПродаж	 	  	= ВсегоПродаж + ЗаписьКнигиДетальная.ВсегоПродаж;
			ВсегоПродажВВалюте	= ВсегоПродажВВалюте + ?(ЗначениеЗаполнено(ЗаписьКнигиДетальная.Валюта), ЗаписьКнигиДетальная.ВсегоПродажВВалюте, 0);
			СуммаБезНДС18 	 	= СуммаБезНДС18 + ЗаписьКнигиДетальная.СуммаБезНДС18;
			НДС18 			  	= НДС18 +ЗаписьКнигиДетальная.НДС18;
			СуммаБезНДС10 	  	= СуммаБезНДС10 + ЗаписьКнигиДетальная.СуммаБезНДС10;
			НДС10 			  	= НДС10 + ЗаписьКнигиДетальная.НДС10;
			НДС0 			  	= НДС0 + ЗаписьКнигиДетальная.НДС0;
			СуммаСовсемБезНДС  	= СуммаСовсемБезНДС + ЗаписьКнигиДетальная.СуммаСовсемБезНДС;
			Покупатель 			= Покупатель + ?(Покупатель = "", "", ";" + Символы.ПС) + ЗаписьКнигиДетальная.Покупатель;
			Графа8 				= Графа8 + ?(Графа8 = "", "", ";" + Символы.ПС) + ЗаписьКнигиДетальная.ПокупательИНН + 
				?(ЗначениеЗаполнено(ЗаписьКнигиДетальная.ПокупательКПП), "/" + ЗаписьКнигиДетальная.ПокупательКПП, "");
		КонецЕсли;	
		
		Если ТекущаяЗапись = КоличествоЗаписей Тогда
			СоставСтроки = Новый Структура;
			СоставСтроки.Вставить("Ном", 			 НомерСтроки);
			СоставСтроки.Вставить("КодОперации", 	 ЗаписьКнигиДетальная.КодВидаОперации);
			СоставСтроки.Вставить("Покупатель", 	 Покупатель);
			СоставСтроки.Вставить("ПокупательИНН", 	 ЗаписьКнигиДетальная.ПокупательИНН);
			СоставСтроки.Вставить("ПокупательКПП", 	 ЗаписьКнигиДетальная.ПокупательКПП);
			СоставСтроки.Вставить("Графа8", 		 Графа8);
			СоставСтроки.Вставить("Посредник",		 ЗаписьКнигиДетальная.Посредник);
			СоставСтроки.Вставить("ПосредникИНН_КПП","" + ЗаписьКнигиДетальная.ПосредникИНН + 
				?(ЗначениеЗаполнено(ЗаписьКнигиДетальная.ПосредникКПП), "/" + ЗаписьКнигиДетальная.ПосредникКПП, ""));
			СоставСтроки.Вставить("Валюта", 			   ?(ЗначениеЗаполнено(ЗаписьКнигиДетальная.Валюта),
				"" + ЗаписьКнигиДетальная.Валюта + ", " + ЗаписьКнигиДетальная.ВалютаКод,  ""));
			СоставСтроки.Вставить("ВсегоПродажВВалюте",    ВсегоПродажВВалюте);
			ВариантыПредставленияСФ = ОпределитьДатуИНомерСФ(ЗаписьКнигиДетальная);
			СоставСтроки.Вставить("ДатаНомер", 	 	 ВариантыПредставленияСФ.ДатаНомер);
			СоставСтроки.Вставить("НомерДата", 	 	 ВариантыПредставленияСФ.НомерДата);
		КонецЕсли;	
		
	КонецЦикла;
	
	Секция.ВсегоПродаж 			= ВсегоПродаж;
	Секция.ВсегоПродажВВалюте	= ВсегоПродажВВалюте;
	Секция.СуммаБезНДС18 	 	= СуммаБезНДС18;
	Секция.НДС18 			  	= НДС18;
	Секция.СуммаБезНДС10 	  	= СуммаБезНДС10;
	Секция.НДС10 				= НДС10;
	Секция.НДС0 			  	= НДС0;
	Секция.СуммаСовсемБезНДС  	= СуммаСовсемБезНДС;
	Секция.Контрагент			= Покупатель;
	
	СоставСтроки.Вставить("НомерДатаОплаты", ДатыНомераОплатыПоКонтрагентам);
	
	ЗаполнитьЗначенияСвойств(Секция, СоставСтроки);
	
КонецПроцедуры

Процедура ПреобразоватьЗаписиКнигиПродаж(Результат, ТабличныйДокумент, СписокСчетовФактур, ИтогПоОрганизации, Макет)

	ДеревоЗаписей = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ИтогПоОрганизации = ДеревоЗаписей.Строки[0];
		
	ТаблицаДополнительнойИнформацииПоСФ = ПолучитьДополнительнуюИнформациюПоСФ(КонецПериода, СписокСчетовФактур);
		
	Секция = Макет.ПолучитьОбласть("Строка");
	Если ГруппироватьПоКонтрагентам Тогда
		СекцияКонтрагент = Макет.ПолучитьОбласть("Контрагент");
		СекцияВсегоКонтрагент = Макет.ПолучитьОбласть("ВсегоКонтрагент");
	КонецЕсли;
	
	Счетчик = 0; // Счетчик строк книги продаж
	
	Если ГруппироватьПоКонтрагентам И Не СформироватьОтчетПоСтандартнойФорме Тогда
		Для Каждого ИтогПоКонтрагенту Из ИтогПоОрганизации.Строки Цикл 
			СекцияКонтрагент.Параметры.Контрагент = ИтогПоКонтрагенту.Покупатель;
			ТабличныйДокумент.Вывести(СекцияКонтрагент);
			ТабличныйДокумент.НачатьГруппуСтрок();
			Для Каждого НалоговыеПериоды Из ИтогПоКонтрагенту.Строки Цикл
				//Для Каждого ПорядокОтражения Из НалоговыеПериоды.Строки Цикл
					Для Каждого СтрокаПоПорядокОтражения Из НалоговыеПериоды.Строки Цикл
						Для Каждого ИтогПоДокументу Из СтрокаПоПорядокОтражения.Строки Цикл
							Для Каждого ЗаписьКниги Из ИтогПоДокументу.Строки Цикл
								Если ЗаписьКниги.СводныйКорректировочный Тогда
									Для Каждого ЗаписьКнигиДетальная Из ЗаписьКниги.Строки Цикл
										Счетчик = Счетчик + 1;
										ЗаполнитьСтрокуКнигиПродаж(Секция.Параметры, ЗаписьКнигиДетальная, Счетчик);
										ТабличныйДокумент.Вывести(Секция);
									КонецЦикла;
								ИначеЕсли ЗаписьКниги.СводныйКомиссионный Тогда
									Счетчик = Счетчик + 1;
									ЗаполнитьСтрокуКнигиПродажСводныйКомиссионный(Секция.Параметры, ЗаписьКниги.Строки, Счетчик);
									ТабличныйДокумент.Вывести(Секция);
								Иначе
									Счетчик = Счетчик + 1;
									ЗаполнитьСтрокуКнигиПродаж(Секция.Параметры, ЗаписьКниги, Счетчик);
									ТабличныйДокумент.Вывести(Секция);
								КонецЕсли;
							КонецЦикла; 
						КонецЦикла; 
					КонецЦикла; 
				//КонецЦикла; 
			КонецЦикла;
			ТабличныйДокумент.ЗакончитьГруппуСтрок();
			СекцияВсегоКонтрагент.Параметры.Заполнить(ИтогПоКонтрагенту);
			ТабличныйДокумент.Вывести(СекцияВсегоКонтрагент);
		КонецЦикла;
	Иначе
		Для Каждого НалоговыеПериоды Из ИтогПоОрганизации.Строки Цикл
			//Для Каждого ПорядокОтражения Из НалоговыеПериоды.Строки Цикл
				Для Каждого СтрокаПоПорядокОтражения Из НалоговыеПериоды.Строки Цикл
					Для Каждого ИтогПоДокументу Из СтрокаПоПорядокОтражения.Строки Цикл
						Для Каждого ЗаписьКниги Из ИтогПоДокументу.Строки Цикл
							Если ЗаписьКниги.Строки.Количество() > 1 И ЗаписьКниги.Покупатель = "Розничная продажа"
								ИЛИ ЗаписьКниги.СводныйКорректировочный Тогда
								
								Для Каждого ЗаписьКнигиДетальная Из ЗаписьКниги.Строки Цикл
									Счетчик = Счетчик + 1;
									ЗаполнитьСтрокуКнигиПродаж(Секция.Параметры, ЗаписьКнигиДетальная, Счетчик);
									ТабличныйДокумент.Вывести(Секция);
								КонецЦикла;
								
							ИначеЕсли ЗаписьКниги.СводныйКомиссионный Тогда
								Счетчик = Счетчик + 1;
								ЗаполнитьСтрокуКнигиПродажСводныйКомиссионный(Секция.Параметры, ЗаписьКниги.Строки, Счетчик);
								ТабличныйДокумент.Вывести(Секция);
							Иначе
								Счетчик = Счетчик + 1;
								ЗаполнитьСтрокуКнигиПродаж(Секция.Параметры, ЗаписьКниги, Счетчик);
								ТабличныйДокумент.Вывести(Секция);
							КонецЕсли;
						КонецЦикла; 
					КонецЦикла; 
				КонецЦикла; 
			//КонецЦикла;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура СформироватьОсновнойРаздел(ЭлементыФормы) Экспорт
	
	ТабличныйДокумент = ЭлементыФормы.ТабличныйДокумент;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаПродаж";
	
	ВерсияПостановленияНДС1137 = УчетНДС.ВерсияПостановленияНДС1137(КонецПериода);
	Если ВерсияПостановленияНДС1137 = 3 Тогда
		Макет = ПолучитьМакет("КнигаПродаж735");
	Иначе
		Макет = ПолучитьМакет("КнигаПродаж");
	КонецЕсли;
			
	// Вывод шапки
	Если СформироватьОтчетПоСтандартнойФорме Тогда
		Секция = Макет.ПолучитьОбласть("ШапкаИнформация");
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;
	
	Секция = Макет.ПолучитьОбласть("Шапка");
	Секция.Параметры.УстановленныйОтбор = "";
	Секция.Параметры.НачалоПериода = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	Секция.Параметры.КонецПериода = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, КонецПериода);
	НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование");
	Секция.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	Секция.Параметры.ИННКППОрганизации = "" + Организация.ИНН + ?(НЕ ЗначениеЗаполнено(Организация.КПП), "", ("/" + Организация.КПП));
	Если Не СформироватьОтчетПоСтандартнойФорме И ОтбиратьПоКонтрагенту Тогда
		Секция.Параметры.УстановленныйОтбор = "Отбор: Контрагент " + ?(КонтрагентДляОтбора.ЭтоГруппа, "в группе ", "= ") + КонтрагентДляОтбора;
	КонецЕсли;
	ТабличныйДокумент.Вывести(Секция);
		
	ЕстьЗаписиПоКолонке20 = Ложь;	
	
	// Анализ ИБ для формирования книги продаж
	СписокСчетовФактур = Неопределено;
	Результат = ПолучитьЗаписиКнигиПродаж(УчетНДС.ПолучитьУПНДСНалоговыйПериод(Организация, НачалоПериода), СписокСчетовФактур);
		
	Если Результат.Пустой() Тогда
			
		Секция = Макет.ПолучитьОбласть("Всего");
			
		ТабличныйДокумент.Вывести(Секция);
			
		/////////////////////////////////////////////////////////////////////////
		// Вывод подвала
		ВывестиПодвал(ТабличныйДокумент, Макет);
		// Вывод подвала
		/////////////////////////////////////////////////////////////////////////
			
		Если ВерсияПостановленияНДС1137 < 3 И СкрытьКолонкиПоСтавке20 Тогда
					
			Область20Процентов = ТабличныйДокумент.Область("Заголовок20Процентов");
			ЛеваяКолонка = Область20Процентов.Лево;
			ПраваяКолонка = Область20Процентов.Право;
			ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область(,ЛеваяКолонка,,ПраваяКолонка),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			
			ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("Подпись20Процентов"));
			
		КонецЕсли; 
			
		УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));
		Возврат;
	КонецЕсли; 
	
	ИтогПоОрганизации = Неопределено;
	
	ПреобразоватьЗаписиКнигиПродаж(Результат, ТабличныйДокумент, СписокСчетовФактур, ИтогПоОрганизации, Макет);
	
	// Вывод всего
	Секция = Макет.ПолучитьОбласть("Всего");
	Секция.Параметры.Заполнить(ИтогПоОрганизации);
		
	ТабличныйДокумент.Вывести(Секция);
		
	/////////////////////////////////////////////////////////////////////////
	// Вывод подвала
	ВывестиПодвал(ТабличныйДокумент, Макет);
	// Вывод подвала
	/////////////////////////////////////////////////////////////////////////

	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область("СтрокиДляПовтора");
		
	Если ВерсияПостановленияНДС1137 <> 3 И СкрытьКолонкиПоСтавке20 Тогда
		Если ЕстьЗаписиПоКолонке20 Тогда
			
			ОбщегоНазначения.СообщитьОбОшибке("В книге продаж организации <"+Организация+"> за период "+ПредставлениеПериода(НачалоПериода, ?(КонецПериода='00010101',КонецПериода,КонецДня(КонецПериода)))+" есть записи по ставке НДС 20%!
			|Отображение соотвествующих колонок не может быть отключено.");
			
		Иначе
			
			Область20Процентов = ТабличныйДокумент.Область("Заголовок20Процентов");
			ЛеваяКолонка = Область20Процентов.Лево;
			ПраваяКолонка = Область20Процентов.Право;
			ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область(,ЛеваяКолонка,,ПраваяКолонка),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("Подпись20Процентов"));
			
		КонецЕсли;
	КонецЕсли; 
		
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));
		
КонецПроцедуры // СформироватьКнигуПродаж()

Процедура ЗаполнитьСтрокуДополнительногоЛиста(ПараметрыСтроки, ЗаписьКниги, ЕстьЗаписиПоКолонке20, СоответствиеСтрокиДопИнформацииПоСчетуФактуре, НомерСтроки = Неопределено)
	
	СтрокаДополнительнойИнформации = Неопределено;
	ПараметрыЗаполнения = ЗаписьКниги.Строки[0];	
	
	ВариантыПредставленияСФ = ОпределитьДатуИНомерСФ(ПараметрыЗаполнения);
	
	НомерДатаИсправления = ОпределитьНомерИДатуИсправленногоСФ(ПараметрыЗаполнения);
	ПараметрыСтроки.НомерДатаИсправления = НомерДатаИсправления;	

	НомерДатаКорректировки = ОпределитьНомерИДатуКорректировочногоСФ(ПараметрыЗаполнения);
	ПараметрыСтроки.НомерДатаКорректировки = НомерДатаКорректировки;
	
	НомерДатаИсправленияКорректировки = ОпределитьНомерИДатуИсправленияКорректировочногоСФ(ПараметрыЗаполнения);
	ПараметрыСтроки.НомерДатаИсправленияКорректировки = НомерДатаИсправленияКорректировки;	

	Если ТипЗнч(ПараметрыСтроки) = Тип("ТабличныйДокумент") Тогда
		ПараметрыСтроки.Заполнить(ПараметрыЗаполнения);
	Иначе
		ЗаполнитьЗначенияСвойств(ПараметрыСтроки, ПараметрыЗаполнения);
	КонецЕсли;	
	
	ПараметрыСтроки.ВсегоПродаж 	   = ЗаписьКниги.ВсегоПродаж;
	ПараметрыСтроки.СуммаБезНДС18 	   = ЗаписьКниги.СуммаБезНДС18;
	ПараметрыСтроки.НДС18 			   = ЗаписьКниги.НДС18;
	ПараметрыСтроки.СуммаБезНДС10 	   = ЗаписьКниги.СуммаБезНДС10;
	ПараметрыСтроки.НДС10 			   = ЗаписьКниги.НДС10;
	ПараметрыСтроки.НДС0 			   = ЗаписьКниги.НДС0;
	Если ЕстьЗаписиПоКолонке20 Тогда
		ПараметрыСтроки.СуммаБезНДС20 	   = ЗаписьКниги.СуммаБезНДС20;
		ПараметрыСтроки.НДС20 			   = ЗаписьКниги.НДС20;
	КонецЕсли;
	ПараметрыСтроки.СуммаСовсемБезНДС = ЗаписьКниги.СуммаСовсемБезНДС;
	
	// универсальная структутра для заполнения книги по разным версиям
	СоставСтроки = Новый Структура;
	СоставСтроки.Вставить("Ном", 			 НомерСтроки);
	СоставСтроки.Вставить("КодОперации", 	 ПараметрыЗаполнения.КодВидаОперации);
	СоставСтроки.Вставить("Покупатель", 	 ПараметрыЗаполнения.Покупатель);
	СоставСтроки.Вставить("ПокупательИНН", 	 ПараметрыЗаполнения.ПокупательИНН);
	СоставСтроки.Вставить("ПокупательКПП", 	 ПараметрыЗаполнения.ПокупательКПП);
	СоставСтроки.Вставить("ПокупательРазделитель", ?(ЗначениеЗаполнено(ПараметрыЗаполнения.ПокупательКПП), "/" , ""));
	СоставСтроки.Вставить("Валюта", 			   ?(ЗначениеЗаполнено(ПараметрыЗаполнения.Валюта),
		"" + ПараметрыЗаполнения.Валюта + ", " + ПараметрыЗаполнения.ВалютаКод,  ""));
	СоставСтроки.Вставить("ВсегоПродажВВалюте",    ?(ЗначениеЗаполнено(ПараметрыЗаполнения.Валюта),
		ПараметрыЗаполнения.ВсегоПродажВВалюте, ""));
	СоставСтроки.Вставить("ДатаНомер",		 ВариантыПредставленияСФ.ДатаНомер);
	СоставСтроки.Вставить("НомерДата",		 ВариантыПредставленияСФ.НомерДата);
	
	Если ЗначениеЗаполнено(ПараметрыЗаполнения.СчетФактураДокумент) Тогда
		ПараметрыСтроки.СчетФактура = ПараметрыЗаполнения.СчетФактураДокумент;
	КонецЕсли;

	Если НЕ ЕстьЗаписиПоКолонке20 И НЕ (ЗаписьКниги.СуммаБезНДС20 = 0 И ЗаписьКниги.НДС20 = 0) Тогда
		ЕстьЗаписиПоКолонке20 = Истина;
	КонецЕсли; 

	ТекстОплаты = "";
	ТекстДатаОприходования = "";
	СписокДатОплат = Новый СписокЗначений();
	ТекстОплатыСНомером = "";
	СписокНомеровИДатОплат = Новый СписокЗначений();	
	СписокДатОприходования = Новый СписокЗначений();
	ТекстНомерГТД = "";
	
	Для Каждого СтрокаЗаписи Из ЗаписьКниги.Строки Цикл
		Если ЗначениеЗаполнено(СтрокаЗаписи.ДатаОплаты) Тогда
			Если СписокДатОплат.НайтиПоЗначению(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено тогда
				ТекстОплаты = ТекстОплаты + ?(НЕ ЗначениеЗаполнено(ТекстОплаты), "", ","+ Символы.ПС) + Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy");
				СписокДатОплат.Добавить(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy"));
			КонецЕсли;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаЗаписи.НомерДокументаОплаты) Тогда
			НомерДатаОплаты = "" + СтрокаЗаписи.НомерДокументаОплаты + ";" + Формат(СтрокаЗаписи.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
			Если СписокНомеровИДатОплат.НайтиПоЗначению(НомерДатаОплаты) = Неопределено тогда
				ТекстОплатыСНомером = ТекстОплатыСНомером + ?(НЕ ЗначениеЗаполнено(ТекстОплатыСНомером), "", ","+Символы.ПС) + НомерДатаОплаты;
			КонецЕсли;			
		КонецЕсли;		
	КонецЦикла;

	// ГТД и страна происхождения, дополнительные оплаты
	СчетаФактуры = ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ЗаписьКниги.Строки.ВыгрузитьКолонку("СчетФактура"));
	
	Для Каждого СчетФактура Из СчетаФактуры Цикл
		
		Если ЗначениеЗаполнено(СчетФактура) Тогда
			
			СтрокаДополнительнойИнформации = СоответствиеСтрокиДопИнформацииПоСчетуФактуре[Строка(СчетФактура.УникальныйИдентификатор())];
			Если НЕ СтрокаДополнительнойИнформации = Неопределено 
				И НЕ СтрокаДополнительнойИнформации.Строки.Количество() = 0 Тогда
				СтрокаДополнительнойИнформации = СтрокаДополнительнойИнформации.Строки[0];
			Иначе
				СтрокаДополнительнойИнформации = Неопределено;
			КонецЕсли; 
			
		Иначе
			СтрокаДополнительнойИнформации = Неопределено;
		КонецЕсли;
		
		Если НЕ СтрокаДополнительнойИнформации = Неопределено Тогда
			// Проверим наличие дополнительных дат оплат
			Если ТипЗнч(СтрокаДополнительнойИнформации.ДатыОплаты) = Тип("Массив") Тогда
				Для Каждого ТекущаяДатаОплаты Из СтрокаДополнительнойИнформации.ДатыОплаты Цикл
					Если СписокДатОплат.НайтиПоЗначению(Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено тогда
						ТекстОплаты = ТекстОплаты + ?(ПустаяСтрока(ТекстОплаты), "", ","+Символы.ПС) + Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy");
						СписокДатОплат.Добавить(Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy"));
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;		

	СоставСтроки.Вставить("НомерДатаОплаты", ТекстОплатыСНомером);
	СоставСтроки.Вставить("ДатаОплаты", 	 ТекстОплаты);
	
	ЗаполнитьЗначенияСвойств(ПараметрыСтроки, СоставСтроки);
						
КонецПроцедуры

Процедура ПреобразоватьЗаписиДополнительногоЛистаКнигиПродаж(ИтогПоПериодамКорректировки, ИтогЗаПериод, ТабличныйДокумент, СписокСчетовФактур, ЕстьЗаписиПоКолонке20, СтруктураСекций)
	
	СекцияВсегоКонтрагент = СтруктураСекций.СекцияВсегоКонтрагент;
	СекцияКонтрагент      = СтруктураСекций.СекцияКонтрагент;
	Секция                = СтруктураСекций.Секция;
	СтрокаВсего           = СтруктураСекций.СтрокаВсего;

	Счетчик = 0; // Счетчик строк книги продаж
	
	Если ГруппироватьПоКонтрагентам И Не СформироватьОтчетПоСтандартнойФорме Тогда
		Для Каждого ИтогПоКонтрагенту Из ИтогПоПериодамКорректировки.Строки Цикл
			СекцияКонтрагент.Параметры.Контрагент = ИтогПоКонтрагенту.Покупатель;
			ТабличныйДокумент.Вывести(СекцияКонтрагент);
			ТабличныйДокумент.НачатьГруппуСтрок();
			Для каждого ЗаписьПоСФ Из ИтогПоКонтрагенту.Строки Цикл
				Для Каждого РазделениеПоДоговоруДляАвансов Из ЗаписьПоСФ.Строки Цикл
					Для Каждого ЗаписьКниги Из РазделениеПоДоговоруДляАвансов.Строки Цикл
						
						Счетчик = Счетчик + 1;
						
						ЗаполнитьСтрокуДополнительногоЛиста(Секция.Параметры, ЗаписьКниги, ЕстьЗаписиПоКолонке20, СоответствиеСтрокиДопИнформацииПоСчетуФактуре, Счетчик);
						
						ТабличныйДокумент.Вывести(Секция);
						
						ИтогЗаПериод.ВсегоПродаж = ИтогЗаПериод.ВсегоПродаж + ЗаписьКниги.ВсегоПродаж;
						ИтогЗаПериод.СуммаБезНДС10 = ИтогЗаПериод.СуммаБезНДС10 + ЗаписьКниги.СуммаБезНДС10;
						ИтогЗаПериод.НДС10 = ИтогЗаПериод.НДС10 + ЗаписьКниги.НДС10;
						ИтогЗаПериод.СуммаБезНДС18 = ИтогЗаПериод.СуммаБезНДС18 + ЗаписьКниги.СуммаБезНДС18;
						ИтогЗаПериод.НДС18 = ИтогЗаПериод.НДС18 + ЗаписьКниги.НДС18;
						ИтогЗаПериод.НДС0 = ИтогЗаПериод.НДС0 + ЗаписьКниги.НДС0;
						ИтогЗаПериод.СуммаБезНДС20 = ИтогЗаПериод.СуммаБезНДС20 + ЗаписьКниги.СуммаБезНДС20;
						ИтогЗаПериод.НДС20 = ИтогЗаПериод.НДС20 + ЗаписьКниги.НДС20;
						ИтогЗаПериод.СуммаСовсемБезНДС = ИтогЗаПериод.СуммаСовсемБезНДС + ЗаписьКниги.СуммаСовсемБезНДС;
						
					КонецЦикла; 
				КонецЦикла; 
			КонецЦикла;  
			ТабличныйДокумент.ЗакончитьГруппуСтрок();
			СекцияВсегоКонтрагент.Параметры.Заполнить(ИтогПоКонтрагенту);
			ТабличныйДокумент.Вывести(СекцияВсегоКонтрагент);
		КонецЦикла;
	Иначе	
		Для Каждого ЗаписьПоСФ Из ИтогПоПериодамКорректировки.Строки Цикл
			Для Каждого РазделениеПоДоговоруДляАвансов Из ЗаписьПоСФ.Строки Цикл
				Для Каждого ЗаписьКниги Из РазделениеПоДоговоруДляАвансов.Строки Цикл
					
					Счетчик = Счетчик + 1;
					
					ЗаполнитьСтрокуДополнительногоЛиста(Секция.Параметры, ЗаписьКниги, ЕстьЗаписиПоКолонке20, СоответствиеСтрокиДопИнформацииПоСчетуФактуре, Счетчик);
					
					ТабличныйДокумент.Вывести(Секция);
					
					ИтогЗаПериод.ВсегоПродаж = ИтогЗаПериод.ВсегоПродаж + ЗаписьКниги.ВсегоПродаж;
					ИтогЗаПериод.СуммаБезНДС10 = ИтогЗаПериод.СуммаБезНДС10 + ЗаписьКниги.СуммаБезНДС10;
					ИтогЗаПериод.НДС10 = ИтогЗаПериод.НДС10 + ЗаписьКниги.НДС10;
					ИтогЗаПериод.СуммаБезНДС18 = ИтогЗаПериод.СуммаБезНДС18 + ЗаписьКниги.СуммаБезНДС18;
					ИтогЗаПериод.НДС18 = ИтогЗаПериод.НДС18 + ЗаписьКниги.НДС18;
					ИтогЗаПериод.НДС0 = ИтогЗаПериод.НДС0 + ЗаписьКниги.НДС0;
					ИтогЗаПериод.СуммаБезНДС20 = ИтогЗаПериод.СуммаБезНДС20 + ЗаписьКниги.СуммаБезНДС20;
					ИтогЗаПериод.НДС20 = ИтогЗаПериод.НДС20 + ЗаписьКниги.НДС20;
					ИтогЗаПериод.СуммаСовсемБезНДС = ИтогЗаПериод.СуммаСовсемБезНДС + ЗаписьКниги.СуммаСовсемБезНДС;
					
				КонецЦикла; 
			КонецЦикла; 
		КонецЦикла; 
	КонецЕсли;
	СтрокаВсего.Параметры.Заполнить(ИтогЗаПериод);
	ТабличныйДокумент.Вывести(СтрокаВсего);

КонецПроцедуры

Процедура СформироватьДополнительныеЛисты(НачалоПериода, КонецПериода, ЭлементыФормы)
	Перем Первый_элемент, Граница_первого_элемента, Второй_элемент, Граница_второго_элемента;
	Перем ТабличныйДокумент;
		
	НДСНалоговыйПериод = Перечисления.Периодичность.Квартал;
		
	СтруктураПараметров = ПроверитьНаличиеДопЛистовКнигиПродаж(НачалоПериода, КонецПериода);
		
	Если ДополнительныеЛистыЗаТекущийПериод Или Не ФормироватьДополнительныеЛисты Тогда
		Если СтруктураПараметров.КорректируемыйПериод Тогда
			Сообщить("В указанном периоде отчета были внесены изменения в предшествующие налоговые периоды. 
			|Дополнительные листы по корректируемым налоговым периодам, в которые внесены изменения, можно построить в текущем отчете. 
			|Для этого необходимо взвести флажок ""Формировать дополнительные листы"" и выбрать значение ""за корректируемый период""", СтатусСообщения.Информация);
		КонецЕсли;
		Если ФормироватьДополнительныеЛисты И Не СтруктураПараметров.ТекущийПериод Тогда
			Сообщить("В указанном периоде отчета не вносились изменения в последующих налоговых периодах. 
			|Построение дополнительных листов за текущий налоговый период не требуется", СтатусСообщения.Информация);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если Не ДополнительныеЛистыЗаТекущийПериод Или Не ФормироватьДополнительныеЛисты Тогда
		Если СтруктураПараметров.ТекущийПериод Тогда
			Сообщить("В указанном периоде отчета есть изменения, внесенные в последующих налоговых периодах. 
			|Дополнительные листы по текущему налоговому периоду можно построить в текущем отчете.
			|Для этого необходимо взвести флажок ""Формировать дополнительные листы"" и выбрать значение ""за текущий период""!", СтатусСообщения.Информация);
		КонецЕсли;
		Если ФормироватьДополнительныеЛисты И Не СтруктураПараметров.КорректируемыйПериод Тогда
			Сообщить("В указанном периоде отчета не вносились изменения в предыдущие налоговые периоды. 
			|Построение дополнительных листов за корректируемый налоговый период не требуется", СтатусСообщения.Информация);
			Возврат;
		КонецЕсли;
	КонецЕсли;
		
	Если Не ФормироватьДополнительныеЛисты Тогда
		Возврат;
	КонецЕсли;
		
	СписокСчетовФактур = Неопределено;
	Результат = ПолучитьЗаписиДополнительныхЛистовКнигиПродаж(НачалоПериода, КонецПериода, СписокСчетовФактур);
		
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли; 
		
	СписокПоказателей = Новый СписокЗначений;
	СписокПоказателей.Добавить("","ФИОБух");
	СведенияОбОрганизации = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, ТекущаяДата(), СписокПоказателей);
		
	НомерОтображаемогоПериода = 0;
	
	Если СкрытьКолонкиПоСтавке20 Тогда
	    ТаблицаОбластейДляКорректировки = Новый ТаблицаЗначений();
		ТаблицаОбластейДляКорректировки.Колонки.Добавить("Подпись20Процентов");
		ТаблицаОбластейДляКорректировки.Колонки.Добавить("КонецЛистаБезПодписи20Процентов");
	КонецЕсли; 
	
	ДеревоЗаписей = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	/////////////////////////////////////////////////////////////////////////
	// Получение дополнительной информации по счетам-фактурам
	СписокСчетовФактур = Неопределено;
	ТаблицаДополнительнойИнформацииПоСФ = ПолучитьДополнительнуюИнформациюПоСФ(КонецПериода, СписокСчетовФактур, Истина);	
	// Получение дополнительной информации по счетам-фактурам
	/////////////////////////////////////////////////////////////////////////
	
	Для Каждого ИтогПоПериодам ИЗ ДеревоЗаписей.Строки Цикл;
		
		НомерЛиста = 0;
   //------------------------
		НомерОтображаемогоПериода = НомерОтображаемогоПериода + 1;
		НалоговыйПериод = ПредставлениеПериода(ИтогПоПериодам.НалоговыйПериод, КонецДня(ИтогПоПериодам.КонецНалоговогоПериода), "ФП = Истина");
				
		ПанельРазделовКниги = ЭлементыФормы.ПанельРазделовКниги;
		НоваяСтраница = ПанельРазделовКниги.Страницы.Добавить("ДопЛист"+НомерОтображаемогоПериода,"Доп.листы за "+НалоговыйПериод);
		ПанельРазделовКниги.ТекущаяСтраница = НоваяСтраница;
		ТабличныйДокумент = ЭлементыФормы.Добавить(Тип("ПолеТабличногоДокумента"),"ТД_ДопЛист"+НомерОтображаемогоПериода, Истина,ПанельРазделовКниги);
		ТабличныйДокумент.Лево = ЭлементыФормы.ТабличныйДокумент.Лево;
		ТабличныйДокумент.Верх = ЭлементыФормы.ТабличныйДокумент.Верх;
		ТабличныйДокумент.Высота = ЭлементыФормы.ТабличныйДокумент.Высота;
		ТабличныйДокумент.Ширина = ЭлементыФормы.ТабличныйДокумент.Ширина;
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаПродажДопЛист";
				
		ЭлементыФормы.ТабличныйДокумент.ПолучитьПривязку(ГраницаЭлементаУправления.Низ,Первый_элемент, Граница_первого_элемента, Второй_элемент, Граница_второго_элемента);
		ТабличныйДокумент.УстановитьПривязку(ГраницаЭлементаУправления.Низ,Первый_элемент, Граница_первого_элемента, Второй_элемент, Граница_второго_элемента);
		ЭлементыФормы.ТабличныйДокумент.ПолучитьПривязку(ГраницаЭлементаУправления.Право,Первый_элемент, Граница_первого_элемента, Второй_элемент, Граница_второго_элемента);
		ТабличныйДокумент.УстановитьПривязку(ГраницаЭлементаУправления.Право,Первый_элемент, Граница_первого_элемента, Второй_элемент, Граница_второго_элемента);
		ТабличныйДокумент.ТолькоПросмотр = Истина;
//------------------------
		Если СкрытьКолонкиПоСтавке20 Тогда
		    ТаблицаОбластейДляКорректировки.Очистить();
		КонецЕсли;
		МожноСкрытьКолонкиПоСтавке20 = СкрытьКолонкиПоСтавке20;

		Для Каждого ИтогПоПериодамКорректировки ИЗ ИтогПоПериодам.Строки Цикл;
			
			ВерсияПостановленияНДС1137 = УчетНДС.ВерсияПостановленияНДС1137(ИтогПоПериодамКорректировки.ДатаОформления);
			Если ВерсияПостановленияНДС1137 = 1 Тогда
				Макет = ПолучитьМакет("ДополнительныйЛист");
			ИначеЕсли ВерсияПостановленияНДС1137 = 2 Тогда
				Макет = ПолучитьМакет("ДополнительныйЛист952");
			Иначе
				Макет = ПолучитьМакет("ДополнительныйЛист735");
			КонецЕсли;
			
			Секция = Макет.ПолучитьОбласть("Строка");
			СтрокаИтого = Макет.ПолучитьОбласть("Итого");
			СтрокаВсего = Макет.ПолучитьОбласть("Всего");
			
			Если ГруппироватьПоКонтрагентам Тогда
				СекцияКонтрагент = Макет.ПолучитьОбласть("Контрагент");
				СекцияВсегоКонтрагент = Макет.ПолучитьОбласть("ВсегоКонтрагент");
			КонецЕсли;
			
			// Формирование шапки доп. листа
			НомерЛиста = НомерЛиста + 1;
				
			ВывестиШапкуДопЛиста(ТабличныйДокумент, Макет, ИтогПоПериодамКорректировки, НомерЛиста); //НачалоПериода, КонецПериода, НДСНалоговыйПериод,

			ИтогЗаПериод = ПолучитьИтогиЗаПериодКнигаПродаж(ИтогПоПериодамКорректировки.НалоговыйПериод, КонецДня(ИтогПоПериодамКорректировки.КонецНалоговогоПериода),ИтогПоПериодамКорректировки.ДатаОформления);
			Если Не ИтогЗаПериод.Пустой() Тогда
				ИтогЗаПериод = ИтогЗаПериод.Выгрузить()[0];
			Иначе
				ИтогЗаПериод = Новый Структура;
				ИтогЗаПериод.Вставить("ВсегоПродаж", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("СуммаБезНДС10", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("НДС10", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("СуммаБезНДС18", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("НДС18", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("НДС0", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("СуммаБезНДС20", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("НДС20", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("СуммаСовсемБезНДС", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
			КонецЕсли;
			СтрокаИтого.Параметры.Заполнить(ИтогЗаПериод);
			
			ЕстьЗаписиПоКолонке20 = не (ИтогЗаПериод.СуммаБезНДС20 = 0 и ИтогЗаПериод.НДС20 = 0);
			ТабличныйДокумент.Вывести(СтрокаИтого);

			СтруктураСекций = Новый Структура("СекцияВсегоКонтрагент,СекцияКонтрагент,Секция,СтрокаВсего",СекцияВсегоКонтрагент,СекцияКонтрагент,Секция,СтрокаВсего);
			ПреобразоватьЗаписиДополнительногоЛистаКнигиПродаж(ИтогПоПериодамКорректировки, ИтогЗаПериод, ТабличныйДокумент, СписокСчетовФактур, ЕстьЗаписиПоКолонке20, СтруктураСекций);
			
			/////////////////////////////////////////////////////////////////////////
			// Вывод подвала
			ВывестиПодвал(ТабличныйДокумент, Макет);
			// Вывод подвала
			/////////////////////////////////////////////////////////////////////////
			
			МожноСкрытьКолонкиПоСтавке20 = МожноСкрытьКолонкиПоСтавке20 и не ЕстьЗаписиПоКолонке20;
			
			Если ВерсияПостановленияНДС1137 < 3 И МожноСкрытьКолонкиПоСтавке20 тогда
				МакетТекущегоЛиста = ТаблицаОбластейДляКорректировки.Добавить();
				МакетТекущегоЛиста.Подпись20Процентов = ТабличныйДокумент.Область("Подпись20Процентов");
				МакетТекущегоЛиста.КонецЛистаБезПодписи20Процентов = ТабличныйДокумент.Область(МакетТекущегоЛиста.Подпись20Процентов.Верх,,МакетТекущегоЛиста.Подпись20Процентов.Верх); 
			КонецЕсли; 
			
		КонецЦикла;
		
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		
		Если ВерсияПостановленияНДС1137 < 3 И СкрытьКолонкиПоСтавке20 Тогда
			Если не МожноСкрытьКолонкиПоСтавке20 Тогда
				ОбщегоНазначения.СообщитьОбОшибке("В дополнительном листе книге продаж организации <"+Организация+"> за период "+ПредставлениеПериода(ИтогПоПериодамКорректировки.НалоговыйПериод, КонецДня(ИтогПоПериодамКорректировки.КонецНалоговогоПериода))+" есть записи по ставке НДС 20%!
				|Отображение соотвествующих колонок не может быть отключено.");
			Иначе
				Для каждого ОбластиДляКорректировки Из ТаблицаОбластейДляКорректировки Цикл
					ТабличныйДокумент.УдалитьОбласть(ОбластиДляКорректировки.Подпись20Процентов);
					
					ОбластиДляКорректировки.КонецЛистаБезПодписи20Процентов.КонецСтраницы = Истина;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЦикла; 	
				
				Область20Процентов = ТабличныйДокумент.Область("Заголовок20Процентов");
				ЛеваяКолонка = Область20Процентов.Лево;
				ПраваяКолонка = Область20Процентов.Право;
				ОбластьКУдалению = ТабличныйДокумент.Область(,ЛеваяКолонка,,ПраваяКолонка);
				ТабличныйДокумент.УдалитьОбласть(ОбластьКУдалению,ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			КонецЕсли;
		КонецЕсли; 
		
	КонецЦикла;
		
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));
	
КонецПроцедуры // СформироватьКнигуПродаж()

// Процедура вызывается из тела процедуры "СформироватьКнигуПродаж". 
// Возвращает дату и номер счета-фактуры
//
Функция ОпределитьДатуИНомерСФ(ЗаписьКниги, Секция = Неопределено)
	
	ВариантыПредставленияСчетаФактуры = Новый Структура("ДатаНомер, НомерДата", "", "");
	
	Если НЕ ЗначениеЗаполнено(ЗаписьКниги.СчетФактура) Тогда
		Возврат ВариантыПредставленияСчетаФактуры;
	КонецЕсли;
	
	ДатаСФ 	= "";
	НомерСФ = "";	
	
	Если ЗначениеЗаполнено(ЗаписьКниги.ДатаСчетаФактуры) И ЗначениеЗаполнено(ЗаписьКниги.НомерСчетаФактуры) Тогда
		
		Если ЗаписьКниги.ОбрабатыватьНомерДокумента Тогда
			
			ДатаСФ = "" + Формат(ЗаписьКниги.ДатаСчетаФактуры, "ДФ=dd.MM.yyyy");
			НомерСФ = ОбщегоНазначения.ПолучитьНомерНаПечать(
					Новый Структура("Дата, Номер, Организация", ЗаписьКниги.ДатаСчетаФактуры, ЗаписьКниги.НомерСчетаФактуры, Организация), 
					ПрефиксыРИБиОрганизации);			
		Иначе
			
			ДатаСФ = "" + Формат(ЗаписьКниги.ДатаСчетаФактуры, "ДФ=dd.MM.yyyy");
			НомерСФ = СокрЛП(ЗаписьКниги.НомерСчетаФактуры);
			
		КонецЕсли;
		
	Иначе

		Если ТипЗнч(ЗаписьКниги.СчетФактура) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
			
			ДатаСФ = "" + Формат(ЗаписьКниги.СчетФактура.Дата, "ДФ=dd.MM.yyyy");
			НомерСФ = ОбщегоНазначения.ПолучитьНомерНаПечать(ЗаписьКниги.СчетФактура, ПрефиксыРИБиОрганизации);

		ИначеЕсли ТипЗнч(ЗаписьКниги.СчетФактураДокумент) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
			
			ДатаСФ = "" + Формат(ЗаписьКниги.СчетФактураДокумент.Дата, "ДФ=dd.MM.yyyy");
			НомерСФ = ОбщегоНазначения.ПолучитьНомерНаПечать(ЗаписьКниги.СчетФактураДокумент, ПрефиксыРИБиОрганизации); 
			
		КонецЕсли;
		
	КонецЕсли;
	
	ВариантыПредставленияСчетаФактуры.ДатаНомер = "" + ДатаСФ + ?(ЗначениеЗаполнено(ДатаСФ), ";", "") + НомерСФ;
	ВариантыПредставленияСчетаФактуры.НомерДата = "" + НомерСФ + ?(ЗначениеЗаполнено(НомерСФ), ";", "") + ДатаСФ;
		
	Возврат ВариантыПредставленияСчетаФактуры;
		
КонецФункции

// Процедура вызывается из тела процедуры "СформироватьКнигуПокупок". 
// Возвращает номер и дату счета-фактуры корректировочного
Функция ОпределитьНомерИДатуКорректировочногоСФ(ЗаписьКниги, Секция = Неопределено)
	
	Если ЗначениеЗаполнено(ЗаписьКниги.НомерКорректировки) И ЗначениеЗаполнено(ЗаписьКниги.ДатаКорректировки) Тогда
		НомерДата = "" + ЗаписьКниги.НомерКорректировки + ";" + Формат(ЗаписьКниги.ДатаКорректировки, "ДФ=dd.MM.yyyy");
	Иначе
		НомерДата = "";
	КонецЕсли;
	
	Возврат НомерДата;
	
КонецФункции

// Процедура вызывается из тела процедуры "СформироватьКнигуПродаж". 
// Возвращает номер и дату счета-фактуры исправленного
Функция ОпределитьНомерИДатуИсправленногоСФ(ЗаписьКниги, Секция = Неопределено)

	Если ЗначениеЗаполнено(ЗаписьКниги.НомерИсправления) И ЗначениеЗаполнено(ЗаписьКниги.ДатаИсправления) Тогда
		НомерДата = "" + СокрЛП(ЗаписьКниги.НомерИсправления) + ";" + Формат(ЗаписьКниги.ДатаИсправления, "ДФ=dd.MM.yyyy") ;
	Иначе
		Возврат "";
	КонецЕсли;
	
	Возврат НомерДата;
	
КонецФункции

// Процедура вызывается из тела процедуры "СформироватьКнигуПродаж". 
// Возвращает номер и дату счета-фактуры корректировочного исправленного
Функция ОпределитьНомерИДатуИсправленияКорректировочногоСФ(ЗаписьКниги, Секция = Неопределено)
	
	Если ЗначениеЗаполнено(ЗаписьКниги.НомерИсправленияКорректировки) И ЗначениеЗаполнено(ЗаписьКниги.ДатаИсправленияКорректировки) Тогда
		НомерДата = "" + ЗаписьКниги.НомерИсправленияКорректировки  + ";" + Формат(ЗаписьКниги.ДатаИсправленияКорректировки, "ДФ=dd.MM.yyyy");
	Иначе
		Возврат "";
	КонецЕсли;
	
	Возврат НомерДата;
	
КонецФункции
	
Процедура ВывестиШапкуДопЛиста(ТабличныйДокумент, Макет, ЗаписьКниги, НомерЛиста)
		
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	Если СформироватьОтчетПоСтандартнойФорме Тогда
		Секция = Макет.ПолучитьОбласть("ШапкаИнформация");
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;
	
	Секция = Макет.ПолучитьОбласть("Шапка");
	Если ДополнительныеЛистыЗаТекущийПериод Тогда
		Секция.Параметры.НомерЛиста = НомерЛиста;
	КонецЕсли;

	Секция.Параметры.Период = ПредставлениеПериода(ЗаписьКниги.НалоговыйПериод, КонецДня(ЗаписьКниги.КонецНалоговогоПериода), "ФП = Истина");
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, КонецДня(ЗаписьКниги.КонецНалоговогоПериода));
	НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование");
	Секция.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	Секция.Параметры.ИННКППОрганизации = "" + Организация.ИНН + ?(НЕ ЗначениеЗаполнено(Организация.КПП), "", ("/" + Организация.КПП));
	Секция.Параметры.ДатаСоставления = Формат(ЗаписьКниги.ДатаОформления, "ДФ=dd.MM.yyyy");
	Если Не СформироватьОтчетПоСтандартнойФорме И ОтбиратьПоКонтрагенту Тогда
		Секция.Параметры.УстановленныйОтбор = "Отбор: Контрагент " + ?(КонтрагентДляОтбора.ЭтоГруппа, "в группе ", "= ") + КонтрагентДляОтбора;
	КонецЕсли;
	ТабличныйДокумент.Вывести(Секция);
		
КонецПроцедуры
	
Процедура ВывестиПодвал(ТабличныйДокумент, Макет)
	
	Если мСведенияОбОрганизации = Неопределено Тогда
		
		мСведенияОбОрганизации = Новый Структура;
		Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизации(Организация, ТекущаяДата(),);
		мСведенияОбОрганизации.Вставить("Руководитель", Руководители.Руководитель);
		СведенияОЮрФизЛице  = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ТекущаяДата());
		мСведенияОбОрганизации.Вставить("Свидетельство", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОЮрФизЛице, "Свидетельство,"));
		
	КонецЕсли;
	
	Секция = Макет.ПолучитьОбласть("Подвал");	
	Секция.Параметры.ИмяРук = ?(Организация.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо, "", мСведенияОбОрганизации.Руководитель);
	Секция.Параметры.ИмяОрг = ?(Организация.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо, мСведенияОбОрганизации.Руководитель, "");
	Секция.Параметры.Свидетельство = мСведенияОбОрганизации.Свидетельство;
	
	ТабличныйДокумент.Вывести(Секция);
	
КонецПроцедуры //ВывестиПодвал()

#КонецЕсли 

Процедура УстановитьПараметрыЗапросаКнигиПродаж(Запрос)
	
	Запрос.УстановитьПараметр("НачалоПериода"	, НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода"	, КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация"		, мСписокОрганизаций);
	Запрос.УстановитьПараметр("ОтбиратьПоКонтрагенту", Не СформироватьОтчетПоСтандартнойФорме И ОтбиратьПоКонтрагенту);
	Запрос.УстановитьПараметр("КонтрагентДляОтбора", КонтрагентДляОтбора);
	Запрос.УстановитьПараметр("ВыводитьПродавцовПоАвансам", ВыводитьПродавцовПоАвансам);
	Запрос.УстановитьПараметр("ВалютаРегУчета",		Константы.ВалютаРегламентированногоУчета.Получить());
	Отказ = Ложь;
	УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиНалоговыйУчет(КонецПериода, Отказ, Организация);
	ПрименяетсяОсвобождениеОтУплатыНДС = ?(Отказ, Ложь, УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС);
	Запрос.УстановитьПараметр("ПравилаПостановления735", УчетНДС.ВерсияПостановленияНДС1137(КонецПериода) = 3);
	ОтражатьРеализацииБезНДС = КонецПериода < '20141001' ИЛИ ПрименяетсяОсвобождениеОтУплатыНДС;
	Запрос.УстановитьПараметр("ОтражатьРеализацииБезНДС", ОтражатьРеализацииБезНДС);	
	
	СтавкиНДС20 = Новый Массив();
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20);
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20_120);
	
	СтавкиНДС18 = Новый Массив();
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);
	
	СтавкиНДС10 = Новый Массив();
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);
	
	СтавкаНДС0 = Перечисления.СтавкиНДС.НДС0;
	СтавкаБезНДС = Перечисления.СтавкиНДС.БезНДС;
	
	Запрос.УстановитьПараметр("СтавкиНДС20"	, СтавкиНДС20);
	Запрос.УстановитьПараметр("СтавкиНДС18"	, СтавкиНДС18);
	Запрос.УстановитьПараметр("СтавкиНДС10"	, СтавкиНДС10);
	Запрос.УстановитьПараметр("СтавкаНДС0"	, СтавкаНДС0);
	Запрос.УстановитьПараметр("СтавкаБезНДС", СтавкаБезНДС);
	
	ВидыЦенностей_СобственныеСФ = Новый Массив;	
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);

	Запрос.УстановитьПараметр("ВидыЦенностей_СобственныеСФ"	, ВидыЦенностей_СобственныеСФ);
	
	ВидыЦенностей_Аванс = Новый Массив;
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_Аванс"	, ВидыЦенностей_Аванс);
	
	ВидыЦенностей_АвансСобственные = Новый Массив;
	ВидыЦенностей_АвансСобственные.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_АвансСобственные.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_АвансСобственные"	, ВидыЦенностей_АвансСобственные);
	
	МассивДокументовИсправлений = Новый Массив;
	МассивДокументовИсправлений.Добавить(Документы.КорректировкаПоступления.ПустаяСсылка());
	МассивДокументовИсправлений.Добавить(Документы.КорректировкаРеализации.ПустаяСсылка());	
	МассивДокументовИсправлений.Добавить(Документы.СчетФактураПолученный.ПустаяСсылка());
	МассивДокументовИсправлений.Добавить(Документы.СчетФактураВыданный.ПустаяСсылка());	
	МассивДокументовИсправлений.Добавить(Неопределено);	
	Запрос.УстановитьПараметр("ПустыеДокументыИсправления", МассивДокументовИсправлений);
	
	Запрос.УстановитьПараметр("ПКО_РозничнаяВыручка", Перечисления.ВидыОперацийПКО.ПриходДенежныхСредствРозничнаяВыручка);
	
КонецПроцедуры	

// Функция вызывается из тела процедуры "СформироватьКнигуПродаж".
// Функция осуществляет первичную обработку результатов запроса к движениям регистра НДСПродажи,
// и по данным запроса заполняет таблицу значений, на основании которой, будет напечатана книга продаж
// Параметры:
// 	Результат - ссылка на результаты выполнения запроса к данным регистра "НДСПродажи"
Функция ПолучитьЗаписиКнигиПродаж(Периодичность = Неопределено, СписокСчетовФактур)
	
	// Создаем запрос по счетам-фактурам
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	УстановитьПараметрыЗапросаКнигиПродаж(Запрос);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|				ИЛИ НДСЗаписиКнигиПродаж.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|					И НЕ &ВыводитьПродавцовПоАвансам
	|			ТОГДА НДСЗаписиКнигиПродаж.Организация
	|		КОГДА НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.КорректировкаПоступления
	|			ТОГДА НДСЗаписиКнигиПродаж.Организация
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.Покупатель
	|	КОНЕЦ КАК Контрагент,
	|	НДСЗаписиКнигиПродаж.Покупатель КАК КонтрагентПоСчетуФактуре,
	|	НДСЗаписиКнигиПродаж.Период КАК Период,
	|	ВЫБОР
	|		КОГДА НЕ НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	|			ТОГДА НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.СчетФактура
	|	КОНЕЦ КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие КАК Событие,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НДСЗаписиКнигиПродаж.СчетФактура.Дата
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.ДатаСобытия
	|	КОНЕЦ КАК ДатаСобытия,
	|	СУММА(НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС) КАК ВсегоПродаж,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС В (&СтавкиНДС20)
	|				ТОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезНДС20,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС В (&СтавкиНДС20)
	|				ТОГДА НДСЗаписиКнигиПродаж.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС20,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезНДС18,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА НДСЗаписиКнигиПродаж.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС18,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезНДС10,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА НДСЗаписиКнигиПродаж.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС10,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС = &СтавкаНДС0
	|				ТОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС0,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС = &СтавкаБезНДС
	|				ТОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаСовсемБезНДС,
	|	НДСЗаписиКнигиПродаж.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|			ТОГДА ВЫРАЗИТЬ(НДСЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ДокументОснование.Дата
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.СчетФактура.Дата
	|	КОНЕЦ КАК ДатаОприходования,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НаАванс,
	|	ЛОЖЬ КАК НаСуммовуюРазницу,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА НДСЗаписиКнигиПродаж.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтавкаНДС_Аванс,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ДоговорАванса = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.ДоговорАванса
	|	КОНЕЦ КАК ДоговорАванса,
	|	НДСЗаписиКнигиПродаж.СчетФактура.Дата,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ВЫБОР
	|		КОГДА (НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.КорректировкаРеализации
	|				ИЛИ НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.КорректировкаПоступления)
	|				И НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС < 0
	|			ТОГДА ИСТИНА
	|		КОГДА НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.СчетФактураВыданный
	|				И НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Исправление,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации
	|ПОМЕСТИТЬ ЗаписиКнигиПродаж
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НДСЗаписиКнигиПродаж.Организация В(&Организация)
	|	И НЕ НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|	И НДСЗаписиКнигиПродаж.Активность
	|	И (НДСЗаписиКнигиПродаж.СтавкаНДС <> &СтавкаБезНДС
	|			ИЛИ &ОтражатьРеализацииБезНДС)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.Период,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.СчетФактура.Дата,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НДСЗаписиКнигиПродаж.СчетФактура.Дата
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.ДатаСобытия
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|			ТОГДА ВЫРАЗИТЬ(НДСЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ДокументОснование.Дата
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.СчетФактура.Дата
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ДоговорАванса = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.ДоговорАванса
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	|			ТОГДА НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.СчетФактура
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|				ИЛИ НДСЗаписиКнигиПродаж.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|					И НЕ &ВыводитьПродавцовПоАвансам
	|			ТОГДА НДСЗаписиКнигиПродаж.Организация
	|		КОГДА НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.КорректировкаПоступления
	|			ТОГДА НДСЗаписиКнигиПродаж.Организация
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.Покупатель
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА НДСЗаписиКнигиПродаж.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.КорректировкаРеализации
	|				ИЛИ НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.КорректировкаПоступления)
	|				И НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС < 0
	|			ТОГДА ИСТИНА
	|		КОГДА НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.СчетФактураВыданный
	|				И НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации";
	
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиКнигиПродаж.СчетФактура КАК СчетФактура
	|ИЗ
	|	ЗаписиКнигиПродаж КАК ЗаписиКнигиПродаж";
	СписокСчетовФактур = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("СчетФактура");
	
	ПолучитьСчетаФактурыДокументыКнигаПродаж(Запрос);

	// Создаем общий запрос                                    
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаписиКнигиПродаж.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(ЗаписиКнигиПродаж.Период, КВАРТАЛ) КАК НалоговыйПериод,
	|	ЗаписиКнигиПродаж.НаАванс КАК НаАванс,
	|	ЗаписиКнигиПродаж.НаСуммовуюРазницу КАК НаСуммовуюРазницу,
	|	ЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	НАЧАЛОПЕРИОДА(ЗаписиКнигиПродаж.СчетФактураДата, ДЕНЬ) КАК СчетФактураДата,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|				ТОГДА ЗаписиКнигиПродаж.СчетФактура
	|			КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|				ТОГДА ЗаписиКнигиПродаж.СчетФактура
	|			ИНАЧЕ ТаблицаСчетаФактурыДокументы.СчетФактураДокумент
	|		КОНЕЦ, ЗаписиКнигиПродаж.СчетФактура) КАК СчетФактураДокумент,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА НЕ ТаблицаСчетаФактурыДокументы.НомерСчетаФактурыСортировка ЕСТЬ NULL 
	|				ТОГДА ТаблицаСчетаФактурыДокументы.НомерСчетаФактурыСортировка
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|						ТОГДА ВЫБОР
	|								КОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Исправление
	|										ИЛИ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|									ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).НомерИсходногоДокумента
	|								ИНАЧЕ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Номер
	|							КОНЕЦ
	|					КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|						ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураПолученный).НомерВходящегоДокумента
	|					ИНАЧЕ ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры
	|				КОНЕЦ
	|		КОНЕЦ, НЕОПРЕДЕЛЕНО) КАК НомерСчетаФактурыСортировка,
	|	ЕСТЬNULL(НАЧАЛОПЕРИОДА(ВЫБОР
	|				КОГДА НЕ ТаблицаСчетаФактурыДокументы.ДатаСчетаФактурыСортировка ЕСТЬ NULL 
	|					ТОГДА ТаблицаСчетаФактурыДокументы.ДатаСчетаФактурыСортировка
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|							ТОГДА ВЫБОР
	|									КОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Исправление
	|											ИЛИ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|										ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ДатаИсходногоДокумента
	|									ИНАЧЕ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Дата
	|								КОНЕЦ
	|						КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|							ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураПолученный).ДатаВходящегоДокумента
	|						ИНАЧЕ ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры
	|					КОНЕЦ
	|			КОНЕЦ, ДЕНЬ), НЕОПРЕДЕЛЕНО) КАК ДатаСчетаФактурыСортировка,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА НЕ ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры ЕСТЬ NULL 
	|				ТОГДА ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|						ТОГДА ВЫБОР
	|								КОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Исправление
	|										ИЛИ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|									ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).НомерИсходногоДокумента
	|								ИНАЧЕ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Номер
	|							КОНЕЦ
	|					КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|						ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураПолученный).НомерВходящегоДокумента
	|					ИНАЧЕ ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры
	|				КОНЕЦ
	|		КОНЕЦ, НЕОПРЕДЕЛЕНО) КАК НомерСчетаФактуры,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА НЕ ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры ЕСТЬ NULL 
	|				ТОГДА ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|						ТОГДА ВЫБОР
	|								КОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Исправление
	|										ИЛИ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|									ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ДатаИсходногоДокумента
	|								ИНАЧЕ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Дата
	|							КОНЕЦ
	|					КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|						ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураПолученный).ДатаВходящегоДокумента
	|					ИНАЧЕ ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры
	|				КОНЕЦ
	|		КОНЕЦ, НЕОПРЕДЕЛЕНО) КАК ДатаСчетаФактуры,
	|	ЗаписиКнигиПродаж.СтавкаНДС_Аванс КАК СтавкаНДС_Аванс,
	|	ЗаписиКнигиПродаж.ДоговорАванса КАК ДоговорАванса,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.Контрагент ССЫЛКА Справочник.Организации
	|			ТОГДА ЗаписиКнигиПродаж.Контрагент
	|		КОГДА НЕ ТаблицаСчетаФактурыДокументы.ПродавецДляПечати ЕСТЬ NULL 
	|				И ТаблицаСчетаФактурыДокументы.ПродавецДляПечати.ОбособленноеПодразделение
	|			ТОГДА ТаблицаСчетаФактурыДокументы.ПродавецДляПечати.ГоловнойКонтрагент
	|		КОГДА НЕ ТаблицаСчетаФактурыДокументы.ПродавецДляПечати ЕСТЬ NULL 
	|			ТОГДА ТаблицаСчетаФактурыДокументы.ПродавецДляПечати
	|		КОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ОбособленноеПодразделение
	|			ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент
	|		ИНАЧЕ ЗаписиКнигиПродаж.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.Контрагент ССЫЛКА Справочник.Организации
	|			ТОГДА ЗаписиКнигиПродаж.Контрагент.ИНН
	|		КОГДА НЕ ТаблицаСчетаФактурыДокументы.ИННПродавцаДляПечати ЕСТЬ NULL 
	|			ТОГДА ТаблицаСчетаФактурыДокументы.ИННПродавцаДляПечати
	|		ИНАЧЕ ЗаписиКнигиПродаж.Контрагент.ИНН
	|	КОНЕЦ КАК ПокупательИНН,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.Контрагент ССЫЛКА Справочник.Организации
	|			ТОГДА ЗаписиКнигиПродаж.Контрагент.КПП
	|		КОГДА НЕ ТаблицаСчетаФактурыДокументы.КПППродавцаДляПечати ЕСТЬ NULL 
	|			ТОГДА ТаблицаСчетаФактурыДокументы.КПППродавцаДляПечати
	|		ИНАЧЕ ЗаписиКнигиПродаж.Контрагент.КПП
	|	КОНЕЦ КАК ПокупательКПП,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|					И ЗаписиКнигиПродаж.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ИЛИ ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|					И ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.ПриходныйКассовыйОрдер).ВидОперации = &ПКО_РозничнаяВыручка
	|			ТОГДА ""Розничная продажа""
	|		КОГДА ЗаписиКнигиПродаж.Контрагент ССЫЛКА Справочник.Организации
	|				И ПОДСТРОКА(ЗаписиКнигиПродаж.Контрагент.НаименованиеПолное, 1, 250) = """"
	|			ТОГДА ПОДСТРОКА(ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Организации).Наименование, 1, 250)
	|		КОГДА ЗаписиКнигиПродаж.Контрагент ССЫЛКА Справочник.Организации
	|			ТОГДА ПОДСТРОКА(ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Организации).НаименованиеПолное, 1, 250)
	|		КОГДА НЕ ТаблицаСчетаФактурыДокументы.ПродавецДляПечати ЕСТЬ NULL 
	|				И ТаблицаСчетаФактурыДокументы.ПродавецДляПечати.ОбособленноеПодразделение
	|			ТОГДА ВЫБОР
	|					КОГДА ПОДСТРОКА(ТаблицаСчетаФактурыДокументы.ПродавецДляПечати.ГоловнойКонтрагент.НаименованиеПолное, 1, 250) = """"
	|						ТОГДА ТаблицаСчетаФактурыДокументы.ПродавецДляПечати.ГоловнойКонтрагент.Наименование
	|					ИНАЧЕ ПОДСТРОКА(ТаблицаСчетаФактурыДокументы.ПродавецДляПечати.ГоловнойКонтрагент.НаименованиеПолное, 1, 250)
	|				КОНЕЦ
	|		КОГДА НЕ ТаблицаСчетаФактурыДокументы.ПродавецДляПечати ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ПОДСТРОКА(ТаблицаСчетаФактурыДокументы.ПродавецДляПечати.НаименованиеПолное, 1, 250) = """"
	|						ТОГДА ТаблицаСчетаФактурыДокументы.ПродавецДляПечати.Наименование
	|					ИНАЧЕ ПОДСТРОКА(ТаблицаСчетаФактурыДокументы.ПродавецДляПечати.НаименованиеПолное, 1, 250)
	|				КОНЕЦ
	|		КОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ОбособленноеПодразделение
	|			ТОГДА ВЫБОР
	|					КОГДА ПОДСТРОКА(ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент.НаименованиеПолное, 1, 250) = """"
	|						ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент.Наименование
	|					ИНАЧЕ ПОДСТРОКА(ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент.НаименованиеПолное, 1, 250)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПОДСТРОКА(ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).НаименованиеПолное, 1, 250) = """"
	|					ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).Наименование
	|				ИНАЧЕ ПОДСТРОКА(ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).НаименованиеПолное, 1, 250)
	|			КОНЕЦ
	|	КОНЕЦ КАК Покупатель,
	|	ЗаписиКнигиПродаж.ДатаОплаты КАК ДатаОплаты,
	|	ЗаписиКнигиПродаж.ДокументОплаты КАК ДокументОплаты,
	|	ЗаписиКнигиПродаж.Событие КАК Событие,
	|	ВЫБОР
	|		КОГДА &ПравилаПостановления735
	|				И ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.Валюта, &ВалютаРегУчета) = &ВалютаРегУчета
	|			ТОГДА ВЫБОР
	|					КОГДА ЗаписиКнигиПродаж.ВсегоПродаж < 0
	|						ТОГДА -ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ВсегоПродажВВалюте, -ЗаписиКнигиПродаж.ВсегоПродаж)
	|					ИНАЧЕ ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ВсегоПродажВВалюте, ЗаписиКнигиПродаж.ВсегоПродаж)
	|				КОНЕЦ
	|		ИНАЧЕ ЗаписиКнигиПродаж.ВсегоПродаж
	|	КОНЕЦ КАК ВсегоПродаж,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.НаАванс
	|				ИЛИ ЗаписиКнигиПродаж.НаСуммовуюРазницу
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПродаж.СуммаБезНДС20
	|	КОНЕЦ КАК СуммаБезНДС20,
	|	ЗаписиКнигиПродаж.НДС20 КАК НДС20,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.НаАванс
	|				ИЛИ ЗаписиКнигиПродаж.НаСуммовуюРазницу
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПродаж.СуммаБезНДС18
	|	КОНЕЦ КАК СуммаБезНДС18,
	|	ЗаписиКнигиПродаж.НДС18 КАК НДС18,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.НаАванс
	|				ИЛИ ЗаписиКнигиПродаж.НаСуммовуюРазницу
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПродаж.СуммаБезНДС10
	|	КОНЕЦ КАК СуммаБезНДС10,
	|	ЗаписиКнигиПродаж.НДС10 КАК НДС10,
	|	ЗаписиКнигиПродаж.НДС0 КАК НДС0,
	|	ЗаписиКнигиПродаж.СуммаСовсемБезНДС КАК СуммаСовсемБезНДС,
	|	ЗаписиКнигиПродаж.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЗаписиКнигиПродаж.Исправление КАК Исправление,
	|	ТаблицаСчетаФактурыДокументы.ДатаИсправления КАК ДатаИсправления,
	|	ТаблицаСчетаФактурыДокументы.НомерИсправления КАК НомерИсправления,
	|	ТаблицаСчетаФактурыДокументы.ДатаКорректировки КАК ДатаКорректировки,
	|	ТаблицаСчетаФактурыДокументы.НомерКорректировки КАК НомерКорректировки,
	|	ТаблицаСчетаФактурыДокументы.ДатаИсправленияКорректировки КАК ДатаИсправленияКорректировки,
	|	ТаблицаСчетаФактурыДокументы.НомерИсправленияКорректировки КАК НомерИсправленияКорректировки,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|					И ЗаписиКнигиПродаж.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ИЛИ ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|					И ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.ПриходныйКассовыйОрдер).ВидОперации = &ПКО_РозничнаяВыручка
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ОбрабатыватьНомерДокумента, ЛОЖЬ)
	|	КОНЕЦ КАК ОбрабатыватьНомерДокумента,
	|	ЗаписиКнигиПродаж.ДатаСобытия КАК ДатаСобытия,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.СводныйКорректировочный, ЛОЖЬ) КАК СводныйКорректировочный,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.КодВидаОперации <> """"
	|			ТОГДА ЗаписиКнигиПродаж.КодВидаОперации
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.КодВидаОперации, ""01"")
	|	КОНЕЦ КАК КодВидаОперации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.Валюта, &ВалютаРегУчета) <> &ВалютаРегУчета
	|			ТОГДА ТаблицаСчетаФактурыДокументы.ВалютаНаименование
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Валюта,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.Валюта, &ВалютаРегУчета) <> &ВалютаРегУчета
	|			ТОГДА ТаблицаСчетаФактурыДокументы.ВалютаКод
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВалютаКод,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.Валюта, &ВалютаРегУчета) <> &ВалютаРегУчета
	|			ТОГДА ВЫБОР
	|					КОГДА ЗаписиКнигиПродаж.ВсегоПродаж < 0
	|						ТОГДА -ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ВсегоПродажВВалюте, -ЗаписиКнигиПродаж.ВсегоПродаж)
	|					ИНАЧЕ ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ВсегоПродажВВалюте, ЗаписиКнигиПродаж.ВсегоПродаж)
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВсегоПродажВВалюте,
	|	ЗаписиКнигиПродаж.НомерДокументаОплаты КАК НомерДокументаОплаты,
	|	ЗаписиКнигиПродаж.ДатаДокументаОплаты КАК ДатаДокументаОплаты,
	|	ТаблицаСчетаФактурыДокументы.Посредник,
	|	ТаблицаСчетаФактурыДокументы.ПосредникИНН,
	|	ТаблицаСчетаФактурыДокументы.ПосредникКПП,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.СводныйКомиссионный, ЛОЖЬ) КАК СводныйКомиссионный
	|ИЗ
	|	ЗаписиКнигиПродаж КАК ЗаписиКнигиПродаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТаблицаСчетаФактурыДокументы.СчетФактура КАК СчетФактура,
	|			ТаблицаСчетаФактурыДокументы.ДоговорАванса КАК ДоговорАванса,
	|			ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса КАК СтавкаНДСАванса,
	|			МИНИМУМ(ТаблицаСчетаФактурыДокументы.Приоритет) КАК МинимумПриоритет,
	|			ТаблицаСчетаФактурыДокументы.КонтрагентПоСчетуФактуре КАК КонтрагентПоСчетуФактуре
	|		ИЗ
	|			ТаблицаСчетаФактурыДокументы КАК ТаблицаСчетаФактурыДокументы
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаСчетаФактурыДокументы.СчетФактура,
	|			ТаблицаСчетаФактурыДокументы.ДоговорАванса,
	|			ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса,
	|			ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры,
	|			ТаблицаСчетаФактурыДокументы.КонтрагентПоСчетуФактуре) КАК Приоритеты
	|		ПО ЗаписиКнигиПродаж.СчетФактура = Приоритеты.СчетФактура
	|			И ЗаписиКнигиПродаж.ДоговорАванса = Приоритеты.ДоговорАванса
	|			И ЗаписиКнигиПродаж.СтавкаНДС_Аванс = Приоритеты.СтавкаНДСАванса
	|			И ЗаписиКнигиПродаж.КонтрагентПоСчетуФактуре = Приоритеты.КонтрагентПоСчетуФактуре
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетаФактурыДокументы КАК ТаблицаСчетаФактурыДокументы
	|		ПО (Приоритеты.СчетФактура = ТаблицаСчетаФактурыДокументы.СчетФактура)
	|			И (Приоритеты.МинимумПриоритет = ТаблицаСчетаФактурыДокументы.Приоритет)
	|			И (Приоритеты.ДоговорАванса = ТаблицаСчетаФактурыДокументы.ДоговорАванса)
	|			И (Приоритеты.СтавкаНДСАванса = ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса)
	|			И (Приоритеты.КонтрагентПоСчетуФактуре = ТаблицаСчетаФактурыДокументы.КонтрагентПоСчетуФактуре)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаОрганизаций
	|		ПО (УчетнаяПолитикаОрганизаций.Организация = ЗаписиКнигиПродаж.Организация)
	|			И (УчетнаяПолитикаОрганизаций.Период В
	|				(ВЫБРАТЬ
	|					МАКСИМУМ(УчетнаяПолитикаОрганизаций.Период) КАК Период
	|				ИЗ
	|					РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаОрганизаций
	|				ГДЕ
	|					ЕСТЬNULL(ЗаписиКнигиПродаж.СчетФактура.Дата, &КонецПериода) >= УчетнаяПолитикаОрганизаций.Период
	|					И УчетнаяПолитикаОрганизаций.Организация = ЗаписиКнигиПродаж.Организация))
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ОтбиратьПоКонтрагенту = ИСТИНА
	|				ТОГДА ВЫБОР
	|						КОГДА НЕ ТаблицаСчетаФактурыДокументы.ПродавецДляПечати ЕСТЬ NULL 
	|								И ТаблицаСчетаФактурыДокументы.ПродавецДляПечати.ОбособленноеПодразделение
	|							ТОГДА ТаблицаСчетаФактурыДокументы.ПродавецДляПечати.ГоловнойКонтрагент = &КонтрагентДляОтбора
	|						КОГДА НЕ ТаблицаСчетаФактурыДокументы.ПродавецДляПечати ЕСТЬ NULL 
	|							ТОГДА ТаблицаСчетаФактурыДокументы.ПродавецДляПечати = &КонтрагентДляОтбора
	|						КОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ОбособленноеПодразделение
	|							ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент = &КонтрагентДляОтбора
	|						ИНАЧЕ ЗаписиКнигиПродаж.Контрагент = &КонтрагентДляОтбора
	|					КОНЕЦ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НалоговыйПериод,
	|	ДатаСчетаФактурыСортировка,
	|	НомерСчетаФактурыСортировка,
	|	Исправление
	|ИТОГИ
	|	МИНИМУМ(НомерСчетаФактурыСортировка),
	|	МИНИМУМ(ДатаСчетаФактурыСортировка),
	|	МАКСИМУМ(Контрагент),
	|	МАКСИМУМ(Покупатель),
	|	МАКСИМУМ(ДатаОплаты),
	|	ВЫБОР
	|		КОГДА &ПравилаПостановления735
	|			ТОГДА МАКСИМУМ(ВсегоПродаж)
	|		ИНАЧЕ СУММА(ВсегоПродаж)
	|	КОНЕЦ КАК ВсегоПродаж,
	|	СУММА(СуммаБезНДС20),
	|	СУММА(НДС20),
	|	СУММА(СуммаБезНДС18),
	|	СУММА(НДС18),
	|	СУММА(СуммаБезНДС10),
	|	СУММА(НДС10),
	|	СУММА(НДС0),
	|	СУММА(СуммаСовсемБезНДС),
	|	МАКСИМУМ(СводныйКорректировочный),
	|	МАКСИМУМ(НомерДокументаОплаты),
	|	МАКСИМУМ(ДатаДокументаОплаты),
	|	МАКСИМУМ(СводныйКомиссионный)
	|ПО
	|	ОБЩИЕ,
	|	НалоговыйПериод,
	|	СчетФактураДокумент,
	|	ДоговорАванса,
	|	Исправление";
	
	Если ГруппироватьПоКонтрагентам И Не СформироватьОтчетПоСтандартнойФорме Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПО
	               |	ОБЩИЕ,", "ПО
	               |	ОБЩИЕ, Контрагент, ");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УПОРЯДОЧИТЬ ПО", "УПОРЯДОЧИТЬ ПО Покупатель, ");
	КонецЕсли;		
	
	Если Не СформироватьОтчетПоСтандартнойФорме И ОтбиратьПоКонтрагенту И КонтрагентДляОтбора.ЭтоГруппа Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, " = &КонтрагентДляОтбора", " В ИЕРАРХИИ(&КонтрагентДляОтбора)");
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Возврат Результат;
	
КонецФункции

Функция ПолучитьЗаписиДополнительныхЛистовКнигиПродаж(НачалоПериода, КонецПериода, СписокСчетовФактур)
	
	// Создаем общий запрос                                       
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	УстановитьПараметрыЗапросаКнигиПродаж(Запрос);
    	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.КорректировкаПоступления
	|			ТОГДА НДСЗаписиКнигиПродаж.Организация
	|		КОГДА НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|				ИЛИ НДСЗаписиКнигиПродаж.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|					И НЕ &ВыводитьПродавцовПоАвансам
	|			ТОГДА НДСЗаписиКнигиПродаж.Организация
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.Покупатель
	|	КОНЕЦ КАК Контрагент,
	|	НДСЗаписиКнигиПродаж.Покупатель КАК КонтрагентПоСчетуФактуре,
	|	ВЫБОР
	|		КОГДА НЕ НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	|			ТОГДА НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.СчетФактура
	|	КОНЕЦ КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие КАК Событие,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НДСЗаписиКнигиПродаж.СчетФактура.Дата
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.ДатаСобытия
	|	КОНЕЦ КАК ДатаСобытия,
	|	СУММА(НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС) КАК ВсегоПродаж,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС В (&СтавкиНДС20)
	|				ТОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезНДС20,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС В (&СтавкиНДС20)
	|				ТОГДА НДСЗаписиКнигиПродаж.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС20,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезНДС18,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА НДСЗаписиКнигиПродаж.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС18,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезНДС10,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА НДСЗаписиКнигиПродаж.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС10,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС = &СтавкаНДС0
	|				ТОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС0,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС = &СтавкаБезНДС
	|				ТОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаСовсемБезНДС,
	|	НДСЗаписиКнигиПродаж.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|			ТОГДА ВЫРАЗИТЬ(НДСЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ДокументОснование.Дата
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.СчетФактура.Дата
	|	КОНЕЦ КАК ДатаОприходования,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НаАванс,
	|	ЛОЖЬ КАК НаСуммовуюРазницу,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА НДСЗаписиКнигиПродаж.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтавкаНДС_Аванс,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ДоговорАванса = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.ДоговорАванса
	|	КОНЕЦ КАК ДоговорАванса,
	|	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, ДЕНЬ) КАК Период,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод КАК КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ВЫБОР
	|		КОГДА (НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.КорректировкаРеализации
	|				ИЛИ НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.КорректировкаПоступления)
	|				И НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС < 0
	|			ТОГДА ИСТИНА
	|		КОГДА НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.СчетФактураВыданный
	|				И НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Исправление,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации
	|ПОМЕСТИТЬ ЗаписиКнигиПродаж
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НДСЗаписиКнигиПродаж.Организация В(&Организация)
	|	И НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста = ИСТИНА
	|	И НДСЗаписиКнигиПродаж.Активность
	|	И (НДСЗаписиКнигиПродаж.СтавкаНДС <> &СтавкаБезНДС
	|			ИЛИ &ОтражатьРеализацииБезНДС)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НДСЗаписиКнигиПродаж.СчетФактура.Дата
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.ДатаСобытия
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|			ТОГДА ВЫРАЗИТЬ(НДСЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ДокументОснование.Дата
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.СчетФактура.Дата
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ДоговорАванса = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.ДоговорАванса
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	|			ТОГДА НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.СчетФактура
	|	КОНЕЦ,
	|	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, ДЕНЬ),
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.КорректировкаПоступления
	|			ТОГДА НДСЗаписиКнигиПродаж.Организация
	|		КОГДА НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|				ИЛИ НДСЗаписиКнигиПродаж.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|					И НЕ &ВыводитьПродавцовПоАвансам
	|			ТОГДА НДСЗаписиКнигиПродаж.Организация
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.Покупатель
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА НДСЗаписиКнигиПродаж.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.КорректировкаРеализации
	|				ИЛИ НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.КорректировкаПоступления)
	|				И НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС < 0
	|			ТОГДА ИСТИНА
	|		КОГДА НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.СчетФактураВыданный
	|				И НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации";
	
	Если ДополнительныеЛистыЗаТекущийПериод Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Период МЕЖДУ &НачалоПериода И &КонецПериода", "Период >= &НачалоПериода");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЗаписьДополнительногоЛиста = ИСТИНА", 
								"ЗаписьДополнительногоЛиста = ИСТИНА 
								|И НДСЗаписиКнигиПродаж.КорректируемыйПериод >= &НачалоПериода 
								|И НДСЗаписиКнигиПродаж.КорректируемыйПериод <= &КонецПериода");
	КонецЕсли;
	
	
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиКнигиПродаж.СчетФактура КАК СчетФактура
	|ИЗ
	|	ЗаписиКнигиПродаж КАК ЗаписиКнигиПродаж";
	СписокСчетовФактур = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("СчетФактура");
	
	ПолучитьСчетаФактурыДокументыКнигаПродаж(Запрос);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаписиКнигиПродаж.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(ЗаписиКнигиПродаж.КорректируемыйПериод, КВАРТАЛ) КАК НалоговыйПериод,
	|	КОНЕЦПЕРИОДА(ЗаписиКнигиПродаж.КорректируемыйПериод, КВАРТАЛ) КАК КонецНалоговогоПериода,
	|	ЗаписиКнигиПродаж.НаАванс КАК НаАванс,
	|	ЗаписиКнигиПродаж.НаСуммовуюРазницу КАК НаСуммовуюРазницу,
	|	ЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	ЗаписиКнигиПродаж.СчетФактура.Дата КАК СчетФактураДата,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|				ТОГДА ЗаписиКнигиПродаж.СчетФактура
	|			КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|				ТОГДА ЗаписиКнигиПродаж.СчетФактура
	|			ИНАЧЕ ТаблицаСчетаФактурыДокументы.СчетФактураДокумент
	|		КОНЕЦ, ЗаписиКнигиПродаж.СчетФактура) КАК СчетФактураДокумент,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА НЕ ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры ЕСТЬ NULL 
	|				ТОГДА ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|						ТОГДА ВЫБОР
	|								КОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Исправление
	|										ИЛИ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|									ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).НомерИсходногоДокумента
	|								ИНАЧЕ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Номер
	|							КОНЕЦ
	|					КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|						ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураПолученный).НомерВходящегоДокумента
	|					ИНАЧЕ ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры
	|				КОНЕЦ
	|		КОНЕЦ, НЕОПРЕДЕЛЕНО) КАК НомерСчетаФактуры,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА НЕ ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры ЕСТЬ NULL 
	|				ТОГДА ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|						ТОГДА ВЫБОР
	|								КОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Исправление
	|										ИЛИ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|									ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ДатаИсходногоДокумента
	|								ИНАЧЕ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Дата
	|							КОНЕЦ
	|					КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|						ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураПолученный).ДатаВходящегоДокумента
	|					ИНАЧЕ ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры
	|				КОНЕЦ
	|		КОНЕЦ, НЕОПРЕДЕЛЕНО) КАК ДатаСчетаФактуры,
	|	ЗаписиКнигиПродаж.СтавкаНДС_Аванс КАК СтавкаНДС_Аванс,
	|	ЗаписиКнигиПродаж.ДоговорАванса КАК ДоговорАванса,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.Контрагент ССЫЛКА Справочник.Организации
	|			ТОГДА ЗаписиКнигиПродаж.Контрагент
	|		КОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ОбособленноеПодразделение
	|			ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент
	|		ИНАЧЕ ЗаписиКнигиПродаж.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.Контрагент ССЫЛКА Справочник.Организации
	|			ТОГДА ЗаписиКнигиПродаж.Контрагент.ИНН
	|		КОГДА НЕ ТаблицаСчетаФактурыДокументы.ИННПродавцаДляПечати ЕСТЬ NULL 
	|			ТОГДА ТаблицаСчетаФактурыДокументы.ИННПродавцаДляПечати
	|		ИНАЧЕ ЗаписиКнигиПродаж.Контрагент.ИНН
	|	КОНЕЦ КАК ПокупательИНН,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.Контрагент ССЫЛКА Справочник.Организации
	|			ТОГДА ЗаписиКнигиПродаж.Контрагент.КПП
	|		КОГДА НЕ ТаблицаСчетаФактурыДокументы.КПППродавцаДляПечати ЕСТЬ NULL 
	|			ТОГДА ТаблицаСчетаФактурыДокументы.КПППродавцаДляПечати
	|		ИНАЧЕ ЗаписиКнигиПродаж.Контрагент.КПП
	|	КОНЕЦ КАК ПокупательКПП,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|				ИЛИ ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|					И ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.ПриходныйКассовыйОрдер).ВидОперации = &ПКО_РозничнаяВыручка
	|			ТОГДА ""Розничная продажа""
	|		КОГДА ЗаписиКнигиПродаж.Контрагент ССЫЛКА Справочник.Организации
	|			ТОГДА ВЫБОР
	|					КОГДА ПОДСТРОКА(ЗаписиКнигиПродаж.Организация.НаименованиеПолное, 1, 250) = """"
	|						ТОГДА ЗаписиКнигиПродаж.Организация.Наименование
	|					ИНАЧЕ ПОДСТРОКА(ЗаписиКнигиПродаж.Организация.НаименованиеПолное, 1, 250)
	|				КОНЕЦ
	|		КОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ОбособленноеПодразделение
	|			ТОГДА ВЫБОР
	|					КОГДА ПОДСТРОКА(ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент.НаименованиеПолное, 1, 250) = """"
	|						ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент.Наименование
	|					ИНАЧЕ ПОДСТРОКА(ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент.НаименованиеПолное, 1, 250)
	|				КОНЕЦ
	|		КОГДА ПОДСТРОКА(ЗаписиКнигиПродаж.Контрагент.НаименованиеПолное, 1, 250) = """"
	|			ТОГДА ЗаписиКнигиПродаж.Контрагент.Наименование
	|		ИНАЧЕ ПОДСТРОКА(ЗаписиКнигиПродаж.Контрагент.НаименованиеПолное, 1, 250)
	|	КОНЕЦ КАК Покупатель,
	|	ЗаписиКнигиПродаж.ДатаОплаты КАК ДатаОплаты,
	|	ЗаписиКнигиПродаж.ДокументОплаты КАК ДокументОплаты,
	|	ЗаписиКнигиПродаж.Событие КАК Событие,
	|	ВЫБОР
	|		КОГДА &ПравилаПостановления735
	|				И ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.Валюта, &ВалютаРегУчета) = &ВалютаРегУчета
	|			ТОГДА ВЫБОР
	|					КОГДА ЗаписиКнигиПродаж.ВсегоПродаж < 0
	|						ТОГДА -ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ВсегоПродажВВалюте, -ЗаписиКнигиПродаж.ВсегоПродаж)
	|					ИНАЧЕ ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ВсегоПродажВВалюте, ЗаписиКнигиПродаж.ВсегоПродаж)
	|				КОНЕЦ
	|		ИНАЧЕ ЗаписиКнигиПродаж.ВсегоПродаж
	|	КОНЕЦ КАК ВсегоПродаж,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.НаАванс
	|				ИЛИ ЗаписиКнигиПродаж.НаСуммовуюРазницу
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПродаж.СуммаБезНДС20
	|	КОНЕЦ КАК СуммаБезНДС20,
	|	ЗаписиКнигиПродаж.НДС20 КАК НДС20,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.НаАванс
	|				ИЛИ ЗаписиКнигиПродаж.НаСуммовуюРазницу
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПродаж.СуммаБезНДС18
	|	КОНЕЦ КАК СуммаБезНДС18,
	|	ЗаписиКнигиПродаж.НДС18 КАК НДС18,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.НаАванс
	|				ИЛИ ЗаписиКнигиПродаж.НаСуммовуюРазницу
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПродаж.СуммаБезНДС10
	|	КОНЕЦ КАК СуммаБезНДС10,
	|	ЗаписиКнигиПродаж.НДС10 КАК НДС10,
	|	ЗаписиКнигиПродаж.НДС0 КАК НДС0,
	|	ЗаписиКнигиПродаж.СуммаСовсемБезНДС КАК СуммаСовсемБезНДС,
	|	ЗаписиКнигиПродаж.Период КАК ДатаОформления,
	|	ЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста КАК СторнирующаяЗаписьДопЛиста,
	|	ЗаписиКнигиПродаж.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ТаблицаСчетаФактурыДокументы.НомерИсправления КАК НомерИсправления,
	|	ТаблицаСчетаФактурыДокументы.ДатаИсправления КАК ДатаИсправления,
	|	ТаблицаСчетаФактурыДокументы.НомерКорректировки КАК НомерКорректировки,
	|	ТаблицаСчетаФактурыДокументы.ДатаКорректировки КАК ДатаКорректировки,
	|	ТаблицаСчетаФактурыДокументы.НомерИсправленияКорректировки КАК НомерИсправленияКорректировки,
	|	ТаблицаСчетаФактурыДокументы.ДатаИсправленияКорректировки КАК ДатаИсправленияКорректировки,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ОбрабатыватьНомерДокумента, ЛОЖЬ) КАК ОбрабатыватьНомерДокумента,
	|	ЗаписиКнигиПродаж.ДатаСобытия КАК ДатаСобытия,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.СводныйКорректировочный, ЛОЖЬ) КАК СводныйКорректировочный,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.КодВидаОперации <> """"
	|			ТОГДА ЗаписиКнигиПродаж.КодВидаОперации
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.КодВидаОперации, ""01"")
	|	КОНЕЦ КАК КодВидаОперации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.Валюта, &ВалютаРегУчета) <> &ВалютаРегУчета
	|			ТОГДА ТаблицаСчетаФактурыДокументы.ВалютаНаименование
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Валюта,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.Валюта, &ВалютаРегУчета) <> &ВалютаРегУчета
	|			ТОГДА ТаблицаСчетаФактурыДокументы.ВалютаКод
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВалютаКод,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.Валюта, &ВалютаРегУчета) <> &ВалютаРегУчета
	|			ТОГДА ВЫБОР
	|					КОГДА ЗаписиКнигиПродаж.ВсегоПродаж < 0
	|						ТОГДА -ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ВсегоПродажВВалюте, -ЗаписиКнигиПродаж.ВсегоПродаж)
	|					ИНАЧЕ ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ВсегоПродажВВалюте, ЗаписиКнигиПродаж.ВсегоПродаж)
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВсегоПродажВВалюте,
	|	ЗаписиКнигиПродаж.НомерДокументаОплаты КАК НомерДокументаОплаты,
	|	ЗаписиКнигиПродаж.ДатаДокументаОплаты КАК ДатаДокументаОплаты,
	|	ТаблицаСчетаФактурыДокументы.Посредник,
	|	ТаблицаСчетаФактурыДокументы.ПосредникИНН,
	|	ТаблицаСчетаФактурыДокументы.ПосредникКПП,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.СводныйКомиссионный, ЛОЖЬ) КАК СводныйКомиссионный
	|ИЗ
	|	ЗаписиКнигиПродаж КАК ЗаписиКнигиПродаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТаблицаСчетаФактурыДокументы.СчетФактура КАК СчетФактура,
	|			ТаблицаСчетаФактурыДокументы.СчетФактураДокумент КАК СчетФактураДокумент,
	|			ТаблицаСчетаФактурыДокументы.ДоговорАванса КАК ДоговорАванса,
	|			ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса КАК СтавкаНДСАванса,
	|			МИНИМУМ(ТаблицаСчетаФактурыДокументы.Приоритет) КАК МинимумПриоритет
	|		ИЗ
	|			ТаблицаСчетаФактурыДокументы КАК ТаблицаСчетаФактурыДокументы
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаСчетаФактурыДокументы.СчетФактура,
	|			ТаблицаСчетаФактурыДокументы.СчетФактураДокумент,
	|			ТаблицаСчетаФактурыДокументы.ДоговорАванса,
	|			ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса) КАК Приоритеты
	|		ПО (ВЫБОР
	|				КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|					ТОГДА ЗаписиКнигиПродаж.СчетФактура = Приоритеты.СчетФактураДокумент
	|				ИНАЧЕ ЗаписиКнигиПродаж.СчетФактура = Приоритеты.СчетФактура
	|			КОНЕЦ)
	|			И ЗаписиКнигиПродаж.ДоговорАванса = Приоритеты.ДоговорАванса
	|			И ЗаписиКнигиПродаж.СтавкаНДС_Аванс = Приоритеты.СтавкаНДСАванса
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетаФактурыДокументы КАК ТаблицаСчетаФактурыДокументы
	|		ПО (ВЫБОР
	|				КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|					ТОГДА Приоритеты.СчетФактураДокумент = ТаблицаСчетаФактурыДокументы.СчетФактураДокумент
	|				ИНАЧЕ Приоритеты.СчетФактура = ТаблицаСчетаФактурыДокументы.СчетФактура
	|			КОНЕЦ)
	|			И (Приоритеты.МинимумПриоритет = ТаблицаСчетаФактурыДокументы.Приоритет)
	|			И (Приоритеты.ДоговорАванса = ТаблицаСчетаФактурыДокументы.ДоговорАванса)
	|			И (Приоритеты.СтавкаНДСАванса = ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаОрганизаций
	|		ПО (УчетнаяПолитикаОрганизаций.Организация = ЗаписиКнигиПродаж.Организация)
	|			И (УчетнаяПолитикаОрганизаций.Период В
	|				(ВЫБРАТЬ
	|					МАКСИМУМ(УчетнаяПолитикаОрганизаций.Период) КАК Период
	|				ИЗ
	|					РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаОрганизаций
	|				ГДЕ
	|					ЕСТЬNULL(ЗаписиКнигиПродаж.СчетФактура.Дата, &КонецПериода) >= УчетнаяПолитикаОрганизаций.Период
	|					И УчетнаяПолитикаОрганизаций.Организация = ЗаписиКнигиПродаж.Организация))
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ОтбиратьПоКонтрагенту = ИСТИНА
	|				ТОГДА ВЫБОР
	|						КОГДА ЗаписиКнигиПродаж.Контрагент ССЫЛКА Справочник.Организации
	|							ТОГДА ЗаписиКнигиПродаж.Контрагент = &КонтрагентДляОтбора
	|						КОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ОбособленноеПодразделение
	|							ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент = &КонтрагентДляОтбора
	|						ИНАЧЕ ЗаписиКнигиПродаж.Контрагент = &КонтрагентДляОтбора
	|					КОНЕЦ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НалоговыйПериод,
	|	ДатаСобытия,
	|	СчетФактураДата,
	|	СторнирующаяЗаписьДопЛиста УБЫВ,
	|	ДатаОплаты
	|ИТОГИ
	|	МАКСИМУМ(КонецНалоговогоПериода),
	|	МИНИМУМ(СчетФактураДата),
	|	МАКСИМУМ(Покупатель),
	|	МАКСИМУМ(ДатаОплаты),
	|	ВЫБОР
	|		КОГДА &ПравилаПостановления735
	|			ТОГДА МАКСИМУМ(ВсегоПродаж)
	|		ИНАЧЕ СУММА(ВсегоПродаж)
	|	КОНЕЦ КАК ВсегоПродаж,
	|	СУММА(СуммаБезНДС20),
	|	СУММА(НДС20),
	|	СУММА(СуммаБезНДС18),
	|	СУММА(НДС18),
	|	СУММА(СуммаБезНДС10),
	|	СУММА(НДС10),
	|	СУММА(НДС0),
	|	СУММА(СуммаСовсемБезНДС),
	|	МАКСИМУМ(СводныйКорректировочный),
	|	МАКСИМУМ(НомерДокументаОплаты),
	|	МАКСИМУМ(ДатаДокументаОплаты),
	|	МАКСИМУМ(СводныйКомиссионный)
	|ПО
	|	НалоговыйПериод,
	|	ДатаОформления,
	|	СчетФактура,
	|	ДоговорАванса,
	|	СторнирующаяЗаписьДопЛиста";
	
	Если ГруппироватьПоКонтрагентам И Не СформироватьОтчетПоСтандартнойФорме Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПО
	              	|	НалоговыйПериод,
	              	|	ДатаОформления,", "ПО
	              	|	НалоговыйПериод,
	              	|	ДатаОформления, Контрагент, ");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УПОРЯДОЧИТЬ ПО", "УПОРЯДОЧИТЬ ПО Покупатель, ");
	КонецЕсли;	
	
	Если Не СформироватьОтчетПоСтандартнойФорме И ОтбиратьПоКонтрагенту И КонтрагентДляОтбора.ЭтоГруппа Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, " = &КонтрагентДляОтбора", " В ИЕРАРХИИ(&КонтрагентДляОтбора)");
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Получает страну происхождения и номер ГТД по списку счетов-фактур в виде, отражаемом в книге покупок
//
Функция ПолучитьДополнительнуюИнформациюПоСФ(КонецПериода, СписокСчетовФактур, ЗаписьДополнительногоЛиста = Ложь)
	
	// Определить частичные оплаты
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НДСНачисленныйОбороты.СчетФактура КАК СчетФактура,
	|	СУММА(НДСНачисленныйОбороты.СуммаБезНДСПриход + НДСНачисленныйОбороты.НДСПриход) КАК СуммаСНДС
	|ИЗ
	|	РегистрНакопления.НДСНачисленный.Обороты(
	|			,
	|			&КонецПериода,
	|			Период,
	|			Организация В (&Организация)
	|				И СчетФактура В (&СписокСчетовФактур)
	|				И (НЕ(ВидЦенности В (&ВидыЦенностей_ОплатаПоНДС)
	|						ИЛИ ВидЦенности В (&ВидыЦенностей_БезОплаты)))) КАК НДСНачисленныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСНачисленныйОбороты.СчетФактура
	|ИТОГИ ПО
	|	СчетФактура";
	
	Запрос.УстановитьПараметр("Организация",  мСписокОрганизаций);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("СписокСчетовФактур",  СписокСчетовФактур);
	
	// Виды ценностей с особым порядком распределения оплат - по НДС выплаченному в бюджет
	ВидыЦенностей_ОплатаПоНДС = Новый СписокЗначений;
	
	// Виды ценностей с особым порядком распределения оплат - оплата не определяется
	ВидыЦенностей_БезОплаты = Новый СписокЗначений;
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.ТаможенныеПлатежи);
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_ОплатаПоНДС", ВидыЦенностей_ОплатаПоНДС);
	Запрос.УстановитьПараметр("ВидыЦенностей_БезОплаты", ВидыЦенностей_БезОплаты);
	
	ДополнительнаяИнформацияПоСФ = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	СоответствиеСтрокиДопИнформацииПоСчетуФактуре = Новый Соответствие;
	
	ДополнительнаяИнформацияПоСФ.Колонки.Добавить("IDСчетФактура", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(0));
	Для Каждого СтрокаИнформации Из ДополнительнаяИнформацияПоСФ.Строки Цикл
		Если ЗначениеЗаполнено(СтрокаИнформации.СчетФактура) Тогда
			СоответствиеСтрокиДопИнформацииПоСчетуФактуре.Вставить(Строка(СтрокаИнформации.СчетФактура.УникальныйИдентификатор()), СтрокаИнформации);
		КонецЕсли; 
	КонецЦикла; 
	
	// дополняем информацию датами оплаты,
	// отраженными в регистре записей книг отдельно от сумм

	ДополнительнаяИнформацияПоСФ.Колонки.Добавить("ДатыОплаты");

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НДСЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
		|	НДСЗаписиКнигиПродаж.ДатаОплаты
		|ИЗ
		|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
		|ГДЕ
		|	НДСЗаписиКнигиПродаж.Организация В(&Организация)
		|	И ВЫБОР
		|			КОГДА &ЗаписьДополнительногоЛиста
		|					И &ДополнительныеЛистыЗаТекущийПериод
		|				ТОГДА НДСЗаписиКнигиПродаж.Период >= &НачалоПериода
		|						И (НДСЗаписиКнигиПродаж.КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода)
		|			ИНАЧЕ НДСЗаписиКнигиПродаж.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|		КОНЕЦ
		|	И НДСЗаписиКнигиПродаж.СчетФактура В(&СписокСчетовФактур)
		|	И НДСЗаписиКнигиПродаж.СуммаБезНДС = 0
		|	И НДСЗаписиКнигиПродаж.НДС = 0
		|	И (НЕ ЕСТЬNULL(НДСЗаписиКнигиПродаж.ДатаОплаты, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1))
		|	И НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста = &ЗаписьДополнительногоЛиста
		|ИТОГИ ПО
		|	СчетФактура";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация", мСписокОрганизаций);
	Запрос.УстановитьПараметр("ЗаписьДополнительногоЛиста", ЗаписьДополнительногоЛиста);
	Запрос.УстановитьПараметр("ДополнительныеЛистыЗаТекущийПериод", ДополнительныеЛистыЗаТекущийПериод);
	Запрос.УстановитьПараметр("СписокСчетовФактур", СписокСчетовФактур);
	
	ДатыОплатСФ = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого СтрокаСФ Из ДатыОплатСФ.Строки Цикл
		Если Не ЗначениеЗаполнено(СтрокаСФ.СчетФактура) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиИнформацииСФ = СоответствиеСтрокиДопИнформацииПоСчетуФактуре[Строка(СтрокаСФ.СчетФактура.УникальныйИдентификатор())];
		Если СтрокиИнформацииСФ = Неопределено Тогда
			НоваяСтрокаИнформацииСФ  = ДополнительнаяИнформацияПоСФ.Строки.Добавить();
			НоваяРазвернутаяСтрокаИнформацииСФ = НоваяСтрокаИнформацииСФ.Строки.Добавить();
			НоваяСтрокаИнформацииСФ.СчетФактура = СтрокаСФ.СчетФактура;
			НоваяРазвернутаяСтрокаИнформацииСФ.СчетФактура = СтрокаСФ.СчетФактура;
			СоответствиеСтрокиДопИнформацииПоСчетуФактуре.Вставить(Строка(СтрокаСФ.СчетФактура.УникальныйИдентификатор()), НоваяСтрокаИнформацииСФ);
			СтрокиИнформацииСФ = НоваяСтрокаИнформацииСФ.Строки;
		Иначе
			СтрокиИнформацииСФ = СтрокиИнформацииСФ.Строки;
		КонецЕсли; 
		
		Для Каждого СтрокаИнформацииСФ Из СтрокиИнформацииСФ Цикл
			СтрокаИнформацииСФ.ДатыОплаты = СтрокаСФ.Строки.ВыгрузитьКолонку("ДатаОплаты");;
		КонецЦикла; 
	КонецЦикла; 

	Возврат ДополнительнаяИнформацияПоСФ;
	
КонецФункции // ПолучитьДополнительнуюИнформациюПоСФ()

Процедура ПолучитьСчетаФактурыДокументыКнигаПродаж(Запрос)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтчетОРозничныхПродажах.Ссылка КАК СчетФактура,
	|	ОтчетОРозничныхПродажах.Номер КАК НомерСчетаФактуры,
	|	ОтчетОРозничныхПродажах.Дата КАК ДатаСчетаФактуры,
	|	ОтчетОРозничныхПродажах.Ссылка КАК СчетФактураДокумент,
	|	ЛОЖЬ КАК НаАванс,
	|	ЛОЖЬ КАК НаСуммовуюРазницу,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДСАванса,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорАванса,
	|	1 КАК Приоритет,
	|	NULL КАК Ссылка,
	|	NULL КАК Контрагент,
	|	0 КАК НомерСтроки,
	|	ЛОЖЬ КАК СводныйКорректировочный,
	|	ЛОЖЬ КАК СводныйКомиссионный
	|ПОМЕСТИТЬ ВТ_СчетаФактурыДокументыПромежуточная
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Проведен
	|	И НЕ ОтчетОРозничныхПродажах.ПометкаУдаления
	|	И ОтчетОРозничныхПродажах.Организация В(&Организация)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПриходныйКассовыйОрдер.Ссылка,
	|	ПриходныйКассовыйОрдер.Номер,
	|	ПриходныйКассовыйОрдер.Дата,
	|	ПриходныйКассовыйОрдер.Ссылка,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	2,
	|	NULL,
	|	NULL,
	|	0,
	|	ЛОЖЬ,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
	|ГДЕ
	|	ПриходныйКассовыйОрдер.Проведен
	|	И НЕ ПриходныйКассовыйОрдер.ПометкаУдаления
	|	И ПриходныйКассовыйОрдер.ВидОперации = &ПКО_РозничнаяВыручка
	|	И ПриходныйКассовыйОрдер.Организация В(&Организация)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|				И (СчетФактураВыданный.Ссылка.Исправление
	|					ИЛИ СчетФактураВыданный.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах)
	|			ТОГДА СчетФактураВыданный.Ссылка
	|		КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаРеализацию)
	|				И СчетФактураВыданный.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|			ТОГДА ВЫБОР
	|					КОГДА СчетФактураВыданный.Ссылка.Контрагент = СчетФактураВыданный.ДокументОснование.Контрагент
	|						ТОГДА СчетФактураВыданный.ДокументОснование
	|					ИНАЧЕ СчетФактураВыданный.Ссылка
	|				КОНЕЦ
	|		ИНАЧЕ СчетФактураВыданный.ДокументОснование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|				ИЛИ СчетФактураВыданный.Ссылка.Исправление
	|			ТОГДА СчетФактураВыданный.НомерИсходногоДокумента
	|		ИНАЧЕ СчетФактураВыданный.Ссылка.Номер
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|				ИЛИ СчетФактураВыданный.Ссылка.Исправление
	|			ТОГДА СчетФактураВыданный.ДатаИсходногоДокумента
	|		ИНАЧЕ СчетФактураВыданный.Ссылка.Дата
	|	КОНЕЦ,
	|	СчетФактураВыданный.Ссылка,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|			ТОГДА ЕСТЬNULL(Авансы.СтавкаНДС, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|				И СчетФактураВыданный.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА НЕ(СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаРеализацию)
	|					ИЛИ СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный))
	|			ТОГДА СчетФактураВыданный.Ссылка.ДоговорКонтрагента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	3,
	|	СчетФактураВыданный.Ссылка,
	|	СчетФактураВыданный.Ссылка.Контрагент,
	|	СчетФактураВыданный.НомерСтроки,
	|	СчетФактураВыданный.Ссылка.СводныйКорректировочный,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданный
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Авансы КАК Авансы
	|		ПО СчетФактураВыданный.Ссылка = Авансы.Ссылка
	|ГДЕ
	|	СчетФактураВыданный.Ссылка.Проведен
	|	И НЕ СчетФактураВыданный.Ссылка.ПометкаУдаления
	|	И СчетФактураВыданный.Ссылка.Организация В(&Организация)
	|	И НЕ СчетФактураВыданный.Ссылка.СводныйКомиссионный
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетФактураВыданный.Ссылка,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|				ИЛИ СчетФактураВыданный.Ссылка.Исправление
	|			ТОГДА СчетФактураВыданный.НомерИсходногоДокумента
	|		ИНАЧЕ СчетФактураВыданный.Ссылка.Номер
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|				ИЛИ СчетФактураВыданный.Ссылка.Исправление
	|			ТОГДА СчетФактураВыданный.ДатаИсходногоДокумента
	|		ИНАЧЕ СчетФактураВыданный.Ссылка.Дата
	|	КОНЕЦ,
	|	СчетФактураВыданный.Ссылка,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	НЕОПРЕДЕЛЕНО,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|				И СчетФактураВыданный.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА НЕ(СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаРеализацию)
	|					ИЛИ СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный))
	|			ТОГДА СчетФактураВыданный.Ссылка.ДоговорКонтрагента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	3,
	|	СчетФактураВыданный.Ссылка,
	|	ЕСТЬNULL(ОтчетКомиссионераОПродажахПокупатели.Покупатель, СчетФактураВыданный.Ссылка.Контрагент),
	|	ЕСТЬNULL(ОтчетКомиссионераОПродажахПокупатели.НомерСтроки, СчетФактураВыданный.НомерСтроки),
	|	СчетФактураВыданный.Ссылка.СводныйКорректировочный,
	|	ИСТИНА
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданный
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ОтчетКомиссионераОПродажахПокупатели
	|		ПО СчетФактураВыданный.Ссылка = ОтчетКомиссионераОПродажахПокупатели.СчетФактура
	|			И СчетФактураВыданный.ДокументОснование = ОтчетКомиссионераОПродажахПокупатели.Ссылка
	|ГДЕ
	|	СчетФактураВыданный.Ссылка.Проведен
	|	И НЕ СчетФактураВыданный.Ссылка.ПометкаУдаления
	|	И СчетФактураВыданный.Ссылка.Организация В(&Организация)
	|	И СчетФактураВыданный.Ссылка.СводныйКомиссионный
	|	И НЕ СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Авансы.Ссылка,
	|	Авансы.Ссылка.Номер,
	|	Авансы.Ссылка.Дата,
	|	Авансы.Ссылка,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	Авансы.СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО,
	|	3,
	|	Авансы.Ссылка,
	|	Авансы.Контрагент,
	|	Авансы.НомерСтроки,
	|	Авансы.Ссылка.СводныйКорректировочный,
	|	ИСТИНА
	|ИЗ
	|	Документ.СчетФактураВыданный.Авансы КАК Авансы
	|ГДЕ
	|	Авансы.Ссылка.Проведен
	|	И НЕ Авансы.Ссылка.ПометкаУдаления
	|	И Авансы.Ссылка.Организация В(&Организация)
	|	И Авансы.Ссылка.СводныйКомиссионный
	|	И Авансы.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|				И СчетФактураПолученный.Ссылка.Исправление
	|			ТОГДА СчетФактураПолученный.Ссылка
	|		ИНАЧЕ СчетФактураПолученный.ДокументОснование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА СчетФактураПолученный.НомерИсходногоДокумента
	|		ИНАЧЕ СчетФактураПолученный.Ссылка.НомерВходящегоДокумента
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА СчетФактураПолученный.ДатаИсходногоДокумента
	|		ИНАЧЕ СчетФактураПолученный.Ссылка.ДатаВходящегоДокумента
	|	КОНЕЦ,
	|	СчетФактураПолученный.Ссылка,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|			ТОГДА ЕСТЬNULL(Авансы.СтавкаНДС, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|			ТОГДА СчетФактураПолученный.Ссылка.ДоговорКонтрагента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	5,
	|	СчетФактураПолученный.Ссылка,
	|	СчетФактураПолученный.Ссылка.Контрагент,
	|	СчетФактураПолученный.НомерСтроки,
	|	СчетФактураПолученный.Ссылка.СводныйКорректировочный,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученный
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.Авансы КАК Авансы
	|		ПО СчетФактураПолученный.Ссылка = Авансы.Ссылка
	|ГДЕ
	|	СчетФактураПолученный.Ссылка.Проведен
	|	И НЕ СчетФактураПолученный.Ссылка.ПометкаУдаления
	|	И СчетФактураПолученный.Ссылка.Организация В(&Организация)
	|	И НЕ СчетФактураПолученный.ДокументОснование ССЫЛКА Документ.ОтчетКомитентуОПродажах
	|	И НЕ СчетФактураПолученный.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ГТДИмпорт.Ссылка,
	|	ГТДИмпорт.НомерГТД,
	|	ГТДИмпорт.Дата,
	|	ГТДИмпорт.Ссылка,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	6,
	|	NULL,
	|	ГТДИмпорт.Контрагент,
	|	0,
	|	ЛОЖЬ,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.ГТДИмпорт КАК ГТДИмпорт
	|ГДЕ
	|	ГТДИмпорт.Проведен
	|	И НЕ ГТДИмпорт.ПометкаУдаления
	|	И ГТДИмпорт.Организация В(&Организация)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	ВозвратТоваровОтПокупателя.НомерРасходногоКассовогоОрдера,
	|	ВозвратТоваровОтПокупателя.ДатаРасходногоКассовогоОрдера,
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	7,
	|	NULL,
	|	ВозвратТоваровОтПокупателя.Контрагент,
	|	0,
	|	ЛОЖЬ,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|ГДЕ
	|	ВозвратТоваровОтПокупателя.Проведен
	|	И НЕ ВозвратТоваровОтПокупателя.ПометкаУдаления
	|	И ВозвратТоваровОтПокупателя.Организация В(&Организация)
	|	И ВозвратТоваровОтПокупателя.НомерРасходногоКассовогоОрдера <> """"
	|	И ВозвратТоваровОтПокупателя.ДатаРасходногоКассовогоОрдера <> ДАТАВРЕМЯ(1, 1, 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиКнигиПродаж.СчетФактура,
	|	ЕСТЬNULL(СчетаФактурыДокументы.ДатаСчетаФактуры, ЗаписиКнигиПродаж.СчетФактура.Дата) КАК ДатаСчетаФактуры,
	|	ЕСТЬNULL(СчетаФактурыДокументы.НомерСчетаФактуры, ЗаписиКнигиПродаж.СчетФактура.Номер) КАК НомерСчетаФактуры,
	|	СчетаФактурыДокументы.СчетФактураДокумент,
	|	ЕСТЬNULL(СчетаФактурыДокументы.ДоговорАванса, НЕОПРЕДЕЛЕНО) КАК ДоговорАванса,
	|	ЕСТЬNULL(СчетаФактурыДокументы.СтавкаНДСАванса, НЕОПРЕДЕЛЕНО) КАК СтавкаНДСАванса,
	|	ЕСТЬNULL(СчетаФактурыДокументы.Приоритет, 8) КАК Приоритет,
	|	СчетаФактурыДокументы.Ссылка КАК Ссылка,
	|	СчетаФактурыДокументы.НомерСтроки,
	|	СчетаФактурыДокументы.СводныйКорректировочный,
	|	ЗаписиКнигиПродаж.КонтрагентПоСчетуФактуре,
	|	СчетаФактурыДокументы.СводныйКомиссионный,
	|	ВЫБОР
	|		КОГДА СчетаФактурыДокументы.СчетФактура ЕСТЬ NULL 
	|			ТОГДА ""26""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КодВидаОперации
	|ПОМЕСТИТЬ ВТ_ТаблицаСчетаФактурыДокументы
	|ИЗ
	|	ЗаписиКнигиПродаж КАК ЗаписиКнигиПродаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыДокументыПромежуточная КАК СчетаФактурыДокументы
	|		ПО ЗаписиКнигиПродаж.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|			И ЗаписиКнигиПродаж.СтавкаНДС_Аванс = СчетаФактурыДокументы.СтавкаНДСАванса
	|			И ЗаписиКнигиПродаж.ДоговорАванса = СчетаФактурыДокументы.ДоговорАванса
	|			И (ЗаписиКнигиПродаж.КонтрагентПоСчетуФактуре = ЕСТЬNULL(СчетаФактурыДокументы.Контрагент, ЗаписиКнигиПродаж.КонтрагентПоСчетуФактуре))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЖурналУчетаСчетовФактур.Регистратор,
	|	ЖурналУчетаСчетовФактур.СчетФактура,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировки,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировки,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.Контрагент <> ЖурналУчетаСчетовФактур.Организация
	|			ТОГДА ЖурналУчетаСчетовФактур.Контрагент
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ПродавецДляПечати,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.Контрагент <> ЖурналУчетаСчетовФактур.Организация
	|			ТОГДА ЖурналУчетаСчетовФактур.Контрагент.ИНН
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ИННПродавцаДляПечати,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.Контрагент <> ЖурналУчетаСчетовФактур.Организация
	|			ТОГДА ЖурналУчетаСчетовФактур.КППКонтрагента
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК КПППродавцаДляПечати,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|				И ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураВыданный).СводныйКомиссионный
	|				И НЕ ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|			ТОГДА ЖурналУчетаСчетовФактур.ИндексСтроки
	|		ИНАЧЕ ЖурналУчетаСчетовФактур.НомерСтроки
	|	КОНЕЦ КАК НомерСтроки,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.Валюта <> &ВалютаРегУчета
	|			ТОГДА ЖурналУчетаСчетовФактур.Валюта.НаименованиеПолное
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВалютаНаименование,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.Валюта <> &ВалютаРегУчета
	|			ТОГДА ЖурналУчетаСчетовФактур.Валюта.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВалютаКод,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|			ТОГДА ВЫБОР
	|					КОГДА ЖурналУчетаСчетовФактур.СчетФактура.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|						ТОГДА ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение
	|					ИНАЧЕ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре
	|				КОНЕЦ
	|		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|			ТОГДА ВЫБОР
	|					КОГДА ЖурналУчетаСчетовФактур.СчетФактура.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|						ТОГДА ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение
	|					ИНАЧЕ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре
	|				КОНЕЦ
	|		ИНАЧЕ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре
	|	КОНЕЦ КАК ВсегоПродажВВалюте,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(ЖурналУчетаСчетовФактур.Посредник.НаименованиеПолное, 1, 250) = """"
	|			ТОГДА ЖурналУчетаСчетовФактур.Посредник.Наименование
	|		ИНАЧЕ ПОДСТРОКА(ЖурналУчетаСчетовФактур.Посредник.НаименованиеПолное, 1, 250)
	|	КОНЕЦ КАК Посредник,
	|	ЖурналУчетаСчетовФактур.Посредник.ИНН КАК ПосредникИНН,
	|	ЖурналУчетаСчетовФактур.Посредник.КПП КАК ПосредникКПП,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта
	|ПОМЕСТИТЬ ВТ_РегистрацияСчетовФактур
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	|ГДЕ
	|	ЖурналУчетаСчетовФактур.СчетФактура В
	|			(ВЫБРАТЬ
	|				ВТ_ТаблицаСчетаФактурыДокументы.Ссылка
	|			ИЗ
	|				ВТ_ТаблицаСчетаФактурыДокументы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаСчетаФактурыДокументы.СчетФактура КАК СчетФактура,
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры) КАК ДатаСчетаФактуры,
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.НомерСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры) КАК НомерСчетаФактуры,
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.СчетФактура, ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент) КАК СчетФактураДокумент,
	|	ВТ_ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры КАК НомерСчетаФактурыСортировка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаИсправления, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаИсправления
	|		ИНАЧЕ ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры)
	|	КОНЕЦ КАК ДатаСчетаФактурыСортировка,
	|	ВТ_ТаблицаСчетаФактурыДокументы.ДоговорАванса КАК ДоговорАванса,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса КАК СтавкаНДСАванса,
	|	ВТ_ТаблицаСчетаФактурыДокументы.Приоритет КАК Приоритет,
	|	ВТ_РегистрацияСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировки,
	|	ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировки,
	|	ВТ_РегистрацияСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ВТ_РегистрацияСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ВТ_РегистрацияСчетовФактур.НомерИсправленияКорректировки КАК НомерИсправленияКорректировки,
	|	ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки КАК ДатаИсправленияКорректировки,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.КодВидаОперации = ""26""
	|			ТОГДА ИСТИНА
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.Ссылка ССЫЛКА Документ.СчетФактураВыданный
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_РегистрацияСчетовФактур.СчетФактура ЕСТЬ NULL 
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОбрабатыватьНомерДокумента,
	|	ВТ_РегистрацияСчетовФактур.ПродавецДляПечати,
	|	ВТ_РегистрацияСчетовФактур.ИННПродавцаДляПечати КАК ИННПродавцаДляПечати,
	|	ВТ_РегистрацияСчетовФактур.КПППродавцаДляПечати КАК КПППродавцаДляПечати,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный,
	|	ВТ_ТаблицаСчетаФактурыДокументы.КонтрагентПоСчетуФактуре,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.КодВидаОперации = """"
	|			ТОГДА ВТ_РегистрацияСчетовФактур.КодВидаОперации
	|		ИНАЧЕ ВТ_ТаблицаСчетаФактурыДокументы.КодВидаОперации
	|	КОНЕЦ КАК КодВидаОперации,
	|	ВТ_РегистрацияСчетовФактур.ВалютаКод,
	|	ВТ_РегистрацияСчетовФактур.ВсегоПродажВВалюте,
	|	ВТ_РегистрацияСчетовФактур.Посредник,
	|	ВТ_РегистрацияСчетовФактур.ПосредникИНН,
	|	ВТ_РегистрацияСчетовФактур.ПосредникКПП,
	|	ВТ_РегистрацияСчетовФактур.Валюта,
	|	ВТ_РегистрацияСчетовФактур.ВалютаНаименование,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СводныйКомиссионный
	|ПОМЕСТИТЬ ТаблицаСчетаФактурыДокументы
	|ИЗ
	|	ВТ_ТаблицаСчетаФактурыДокументы КАК ВТ_ТаблицаСчетаФактурыДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегистрацияСчетовФактур КАК ВТ_РегистрацияСчетовФактур
	|		ПО ВТ_ТаблицаСчетаФактурыДокументы.Ссылка = ВТ_РегистрацияСчетовФактур.СчетФактура
	|			И ВТ_ТаблицаСчетаФактурыДокументы.НомерСтроки = ВТ_РегистрацияСчетовФактур.НомерСтроки";
	
	Запрос.Выполнить();
			
КонецПроцедуры

Функция ПолучитьИтогиЗаПериодКнигаПродаж(НачалоПериода, КонецПериода, ДатаФормированияДопЛиста)
	
	// Создаем общий запрос                                       
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.ВсегоПродаж), 0) КАК ВсегоПродаж,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.СуммаБезНДС20), 0) КАК СуммаБезНДС20,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.НДС20), 0) КАК НДС20,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.СуммаБезНДС18), 0) КАК СуммаБезНДС18,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.НДС18), 0) КАК НДС18,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.СуммаБезНДС10), 0) КАК СуммаБезНДС10,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.НДС10), 0) КАК НДС10,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.НДС0), 0) КАК НДС0,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.СуммаСовсемБезНДС), 0) КАК СуммаСовсемБезНДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот КАК ВсегоПродаж,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	|					И (НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс))
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаБезНДС20,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НДС20,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	|					И (НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс))
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаБезНДС18,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НДС18,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	|					И (НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс))
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаБезНДС10,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НДС10,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаНДС0
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НДС0,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаБезНДС
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаСовсемБезНДС
	|	ИЗ
	|		РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				Период,
	|				Организация В (&Организация)
	|					И (СтавкаНДС <> &СтавкаБезНДС
	|						ИЛИ &ОтражатьРеализацииБезНДС)
	|					И (НЕ ЗаписьДополнительногоЛиста = ИСТИНА)) КАК НДСЗаписиКнигиПродажОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	|					И (НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс))
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	|					И (НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс))
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	|					И (НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс))
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаНДС0
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаБезНДС
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|				&НачалоПериода,
	|				&МоментФормированияДопЛиста,
	|				Период,
	|				Организация В (&Организация)
	|					И (СтавкаНДС <> &СтавкаБезНДС
	|						ИЛИ &ОтражатьРеализацииБезНДС)
	|					И (ЗаписьДополнительногоЛиста = ИСТИНА
	|						И КорректируемыйПериод >= &НачалоПериода
	|						И КорректируемыйПериод <= &КонецПериода)) КАК НДСЗаписиКнигиПродажОбороты) КАК ЗаписиКнигиПродаж";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация", мСписокОрганизаций);
	Запрос.УстановитьПараметр("МоментФормированияДопЛиста", Новый Граница(НачалоДня(ДатаФормированияДопЛиста),ВидГраницы.Исключая));
	
	ДатаПроверкиПараметровУчета = КонецДня(КонецПериода);
	ПрименяетсяОсвобождениеОтУплатыНДС = УчетНДС.ПрименяетсяОсвобождениеОтУплатыНДС(
		Организация, ДатаПроверкиПараметровУчета);
	ОтражатьРеализацииБезНДС = ДатаПроверкиПараметровУчета < '20141001' ИЛИ ПрименяетсяОсвобождениеОтУплатыНДС;
	Запрос.УстановитьПараметр("ОтражатьРеализацииБезНДС", ОтражатьРеализацииБезНДС);

	СтавкиНДС20 = новый массив();
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20);
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20_120);
	
	СтавкиНДС18 = новый массив();
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);
	
	СтавкиНДС10 = новый массив();
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);
	
	СтавкаНДС0 = Перечисления.СтавкиНДС.НДС0;
	СтавкаБезНДС = Перечисления.СтавкиНДС.БезНДС;
	
	Запрос.УстановитьПараметр("СтавкиНДС20"	, СтавкиНДС20);
	Запрос.УстановитьПараметр("СтавкиНДС18"	, СтавкиНДС18);
	Запрос.УстановитьПараметр("СтавкиНДС10"	, СтавкиНДС10);
	Запрос.УстановитьПараметр("СтавкаНДС0"		, СтавкаНДС0);
	Запрос.УстановитьПараметр("СтавкаБезНДС"	, СтавкаБезНДС);
	
	ВидыЦенностей_Аванс = новый массив;
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_Аванс"	, ВидыЦенностей_Аванс);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Возвращает структуру с полями "ТекущийПериод" и "КорректируемыйПериод",
// принимающие значение булевого типа - требуется ли формировать доп. листы
Функция ПроверитьНаличиеДопЛистовКнигиПродаж(НачалоПериода, КонецПериода)
	
	СтруктураПараметров = Новый Структура("ТекущийПериод, КорректируемыйПериод");
	СтруктураПараметров.ТекущийПериод = Ложь;
	СтруктураПараметров.КорректируемыйПериод = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	1 КАК Порядок,
		|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
		|	НДСЗаписиКнигиПродажОбороты.Покупатель,
		|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот), 0) <> 0
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьДопЛисты,
		|	НДСЗаписиКнигиПродажОбороты.КорректируемыйПериод,
		|	НДСЗаписиКнигиПродажОбороты.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура
		|ИЗ
		|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			День,
		|			Организация В (&Организация)
		|				И (СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|					ИЛИ &ОтражатьРеализацииБезНДС)
		|				И ЗаписьДополнительногоЛиста = ИСТИНА) КАК НДСЗаписиКнигиПродажОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
		|	НДСЗаписиКнигиПродажОбороты.Покупатель,
		|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС,
		|	НДСЗаписиКнигиПродажОбороты.КорректируемыйПериод,
		|	НДСЗаписиКнигиПродажОбороты.ИсправленныйСчетФактура
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	2,
		|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
		|	НДСЗаписиКнигиПродажОбороты.Покупатель,
		|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот), 0) <> 0
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	&НачалоПериода,
		|	НДСЗаписиКнигиПродажОбороты.ИсправленныйСчетФактура
		|ИЗ
		|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
		|			&НачалоПериода,
		|			,
		|			День,
		|			Организация В (&Организация)
		|				И (СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|					ИЛИ &ОтражатьРеализацииБезНДС)
		|				И ЗаписьДополнительногоЛиста = ИСТИНА
		|				И КорректируемыйПериод >= &НачалоПериода
		|				И КорректируемыйПериод <= &КонецПериода) КАК НДСЗаписиКнигиПродажОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
		|	НДСЗаписиКнигиПродажОбороты.Покупатель,
		|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС,
		|	НДСЗаписиКнигиПродажОбороты.ИсправленныйСчетФактура";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация"	, мСписокОрганизаций);
	
	ДатаПроверкиПараметровУчета = КонецДня(КонецПериода);
	ПрименяетсяОсвобождениеОтУплатыНДС = УчетНДС.ПрименяетсяОсвобождениеОтУплатыНДС(
		Организация, ДатаПроверкиПараметровУчета);
	ОтражатьРеализацииБезНДС = ДатаПроверкиПараметровУчета < '20141001' ИЛИ ПрименяетсяОсвобождениеОтУплатыНДС;
	Запрос.УстановитьПараметр("ОтражатьРеализацииБезНДС", ОтражатьРеализацииБезНДС);

	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат СтруктураПараметров;
	КонецЕсли;
	
	Результат = Результат.Выгрузить();
	
	Для Каждого СтрокаРезультата Из Результат Цикл
		Если СтрокаРезультата.Порядок = 1 И СтрокаРезультата.ЕстьДопЛисты Тогда 
			СтруктураПараметров.КорректируемыйПериод = Истина;
		ИначеЕсли СтрокаРезультата.ЕстьДопЛисты Тогда
			СтруктураПараметров.ТекущийПериод = Истина;
		КонецЕсли;
		Если СтруктураПараметров.КорректируемыйПериод И СтруктураПараметров.ТекущийПериод Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураПараметров;
	
КонецФункции

мСтруктураОтбораПроведен = Новый Структура("Проведен", Истина);
мСтруктураОтбораСчетФактуры = Новый Структура("Проведен, ВидСчетаФактуры", Истина);