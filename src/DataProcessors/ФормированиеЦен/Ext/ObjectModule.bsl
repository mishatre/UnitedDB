#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мКоманда Экспорт;

Перем мСписокНоменклатуры Экспорт;
Перем мКонтрагент Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Заполняет параметры построителя отчета.
//
Процедура ЗаполнитьОбщиеПараметрыПостроителяОтчета()

	ДопКолонка   = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	//ВыводитьКоды = Истина;
	Если ДопКолонка <> Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить Тогда
		ИмяКолонкиКодов = Строка(ДопКолонка);
	//Иначе
	//	ВыводитьКоды = Ложь;
	КонецЕсли;

	ПостроительОтчета.Параметры.Вставить("ДатаЦенСкидок", ДатаЦенСкидок);
	ПостроительОтчета.Параметры.Вставить("ПустаяСтрока", "");
	ПостроительОтчета.Параметры.Вставить("ДопКолонка", ДопКолонка);
	ПостроительОтчета.Параметры.Вставить("Артикул", Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул);
	ПостроительОтчета.Параметры.Вставить("Код", Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код);

КонецПроцедуры // ЗаполнитьОбщиеПараметрыПостроителяОтчета()

// Формирует и заполняет построитель отчета по регистру "ЦеныНоменклатуры"
//
Процедура ЗаполнитьПостроительОтчетаПоЦенамНоменклатуры(ВключатьНезаполненные, ЗаполнятьТолькоТекстЗапроса) Экспорт

	ТекстЗапроса = "
	|ВЫБРАТЬ //РАЗЛИЧНЫЕ
	|Тип.Ссылка                                                 КАК ТипЦен,
	|Ном.Ссылка                                                 КАК Номенклатура,
	|Ном.НоменклатурнаяГруппа                                   КАК НоменклатурнаяГруппа,
	|Ном.ЦеноваяГруппа                                          КАК ЦеноваяГруппа,
	|Ном.ЭтоГруппа                                              КАК ЭтоГруппа,
	|ХарактеристикиНоменклатуры.Ссылка                          КАК ХарактеристикаНоменклатуры,
	|Ном.Родитель                                               КАК Группа,
	|ВЫБОР
	|	КОГДА Ном.НаименованиеПолное ПОДОБНО &ПустаяСтрока 
	|	ТОГДА Ном.Наименование 
	|	ИНАЧЕ Ном.НаименованиеПолное КОНЕЦ                      КАК ПолноеНаименование,
	|ВЫБОР
	|	КОГДА &ДопКолонка = &Артикул
	|		ТОГДА Ном.Артикул
	|	КОГДА &ДопКолонка = &Код
	|		ТОГДА Ном.Код
	|	ИНАЧЕ
	|		NULL
	|	КОНЕЦ                                                   КАК Артикул,
	|Рег.ЕдиницаИзмерения                                       КАК ЕдиницаИзмерения,
	|Рег.Валюта,
	|Рег.ПроцентСкидкиНаценки                                   КАК ПроцентСкидкиНаценки,
	|Рег.СпособРасчетаЦены                                      КАК СпособРасчетаЦены,
	|Тип.ВалютаЦены,
	|КурсыВалют.Курс                                            КАК КурсВалюты,
	|КурсыВалют.Кратность                                       КАК КратностьВалюты,
	|КурсыВалютЦены.Курс                                        КАК КурсВалютыЦены,
	|КурсыВалютЦены.Кратность                                   КАК КратностьВалютыЦены,
	|ВЫБОР 
	|	КОГДА Тип.Рассчитывается ТОГДА
	|		Рег.Цена * (100 + Тип.ПроцентСкидкиНаценки)/100
	|	ИНАЧЕ
	|		Рег.Цена
	|	КОНЕЦ                                                   КАК Цена
	|
	|{ВЫБРАТЬ
	|	Тип.Ссылка.*                                            КАК ТипЦен,
	|	Ном.Ссылка.*                                            КАК Номенклатура,
	|	Ном.Родитель.*                                          КАК Группа
	|	//СВОЙСТВА
	|}
	|
	|ИЗ
	|	Справочник.Номенклатура КАК Ном
	|	//СОЕДИНЕНИЯ
	|
	|СОЕДИНЕНИЕ
	|	(ВЫБРАТЬ
	|		Характеристики.Ссылка   КАК Ссылка,
	|		Характеристики.Владелец КАК Владелец
	|	ИЗ
	|		Справочник.ХарактеристикиНоменклатуры КАК Характеристики
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Ссылка,
	|		Номенклатура.Ссылка               КАК Владелец
	|	ИЗ
	|		Справочник.Номенклатура КАК Номенклатура
	|
	|	) КАК ХарактеристикиНоменклатуры
	|ПО 
	|	ХарактеристикиНоменклатуры.Владелец = Ном.Ссылка
	|
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТипыЦенНоменклатуры КАК Тип
	|ПО 
	|	ИСТИНА
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаЦенСкидок, ) КАК Рег  
	|ПО
	|	(Тип.Ссылка = Рег.ТипЦен)
	|	И
	|	Ном.Ссылка = Рег.Номенклатура 
	|	И
	|	Рег.ХарактеристикаНоменклатуры = ХарактеристикиНоменклатуры.Ссылка
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаЦенСкидок) КАК КурсыВалют
	|ПО
	|	КурсыВалют.Валюта = Рег.Валюта
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаЦенСкидок) КАК КурсыВалютЦены
	|ПО
	|	КурсыВалютЦены.Валюта = Тип.ВалютаЦены
	|
	|ГДЕ
	|	НЕ Ном.Набор
	|";

	Если Не ВключатьНезаполненные Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	И
		|	Ном.Ссылка В (Выбрать Номенклатура ИЗ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаЦенСкидок,))
		|	И
		|	ХарактеристикиНоменклатуры.Ссылка В (Выбрать ХарактеристикаНоменклатуры ИЗ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаЦенСкидок,))
		|";
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса + "
	|{ГДЕ
	|	Тип.Ссылка.*                                            КАК ТипЦен,
	|	Ном.Ссылка.*                                            КАК Номенклатура,
	|	НоменклатурнаяГруппа.Ссылка.*                           КАК НоменклатурнаяГруппа,
	|	ЦеноваяГруппа.Ссылка.*                                  КАК ЦеноваяГруппа,
	|	Ном.Родитель.*                                          КАК Группа
	|	//СВОЙСТВА
	|	//КАТЕГОРИИ
	|}
	|
	|УПОРЯДОЧИТЬ ПО 
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры,
	|	ТипЦен
	|	//СВОЙСТВА
	|
	|ИТОГИ ПО 
	|	Номенклатура ТОЛЬКО ИЕРАРХИЯ
	|АВТОУПОРЯДОЧИВАНИЕ
	|";

	ПостроительОтчета.Текст = ТекстЗапроса;

	Если Не ЗаполнятьТолькоТекстЗапроса Тогда

		// Соответствие имен полей в запросе и их представлений в отчете
		СтруктураПредставлениеПолей = Новый Структура(
		"	ТипЦен, 
		|	Номенклатура,
		|	НоменклатурнаяГруппа,
		|	ЦеноваяГруппа",
		"Тип цен",
		"Номенклатура",
		"Номенклатурная группа",
		"Ценовая группа");

		УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);

		// отборы по умолчанию
		Пока ПостроительОтчета.Отбор.Количество() > 0 Цикл
			ПостроительОтчета.Отбор.Удалить(0);
		КонецЦикла;

		МассивОтбора = Новый Массив;

		Если ТипыЦенСкидок.Количество() = 0 Тогда
			МассивОтбора.Добавить("ТипЦен");
		Иначе
			ЭлементОтбора = ПостроительОтчета.Отбор.Добавить("ТипЦен",, "Тип цен");
			ЭлементОтбора.ВидСравнения  = ВидСравнения.ВСписке;
			ЭлементОтбора.Значение.ЗагрузитьЗначения(ТипыЦенСкидок.ВыгрузитьКолонку("ТипЦенСкидок"));
			ЭлементОтбора.Использование = Истина;
		КонецЕсли;
		
		Если мСписокНоменклатуры = Неопределено Тогда
			МассивОтбора.Добавить("Номенклатура");
		Иначе
			ЭлементОтбора = ПостроительОтчета.Отбор.Добавить("Номенклатура",, "Номенклатура");
			ЭлементОтбора.ВидСравнения  = ВидСравнения.ВСписке;
			ЭлементОтбора.Значение      = мСписокНоменклатуры;
			ЭлементОтбора.Использование = Истина;
		КонецЕсли;
		
		МассивОтбора.Добавить("НоменклатурнаяГруппа");
		МассивОтбора.Добавить("ЦеноваяГруппа");
		
		УправлениеОтчетами.ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);

		ЗаполнитьОбщиеПараметрыПостроителяОтчета();

	КонецЕсли;

КонецПроцедуры // ЗаполнитьПостроительОтчетаПоЦенамНоменклатуры()

// Формирует и заполняет построитель отчета по регистру "ЦеныНоменклатурыКонтрагентов"
//
// Возвращаемое значение:
//   Текст запроса
//
Процедура ЗаполнитьПостроительОтчетаПоЦенамНоменклатурыКонтрагентов(ВключатьНезаполненные, ЗаполнятьТолькоТекстЗапроса) Экспорт

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|
	|ТаблицаТоваров.ТипЦен КАК ТипЦен,
	|ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|ТаблицаТоваров.Номенклатура.ЭтоГруппа КАК ЭтоГруппа,
	|ТаблицаТоваров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|ТаблицаТоваров.Номенклатура.Родитель КАК Родитель,
	|ВЫБОР
	|	КОГДА ТаблицаТоваров.Номенклатура.НаименованиеПолное ПОДОБНО &ПустаяСтрока
	|	ТОГДА ТаблицаТоваров.Номенклатура.Наименование 
	|	ИНАЧЕ ТаблицаТоваров.Номенклатура.НаименованиеПолное КОНЕЦ КАК ПолноеНаименование,
	|ВЫБОР
	|	КОГДА &ДопКолонка = &Артикул
	|		ТОГДА ТаблицаТоваров.Номенклатура.Артикул
	|	КОГДА &ДопКолонка = &Код
	|		ТОГДА ТаблицаТоваров.Номенклатура.Код
	|	ИНАЧЕ
	|		NULL
	|	КОНЕЦ КАК Артикул,
	|ЦеныНоменклатурыКонтрагентов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|ЦеныНоменклатурыКонтрагентов.Валюта КАК Валюта,
	|NULL                                                       КАК ПроцентСкидкиНаценки,
	|ЦеныНоменклатурыКонтрагентов.Цена                          КАК Цена,
	|NULL                                                       КАК СпособРасчетаЦены
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатурыКонтрагентов.СрезПоследних({&ДатаЦенСкидок},
	|																				{ТипЦен.Владелец.* КАК Контрагент,
	|																				 ТипЦен.* КАК ТипЦен,
	|																				 Номенклатура.* КАК Номенклатура,
	|																				 Номенклатура.Родитель.* КАК Группа}
	|															   ) КАК ЦеныНоменклатурыКонтрагентов	
	|";

	Если ВключатьНезаполненные Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ПРАВОЕ СОЕДИНЕНИЕ
		|
		|(
		|	ВЫБРАТЬ Товары.*, Цены.Ссылка КАК ТипЦен
		|	ИЗ
		|		(
		|			ВЫБРАТЬ Владелец КАК Номенклатура, Ссылка КАК ХарактеристикаНоменклатуры ИЗ Справочник.ХарактеристикиНоменклатуры
		|			{ГДЕ ХарактеристикиНоменклатуры.Владелец.* КАК Номенклатура}
		|			ОБЪЕДИНИТЬ ВСЕ
		|			ВЫБРАТЬ Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) ИЗ Справочник.Номенклатура
		|			{ГДЕ Номенклатура.Ссылка.* КАК Номенклатура}
		|		) КАК Товары
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|	(
		|		ВЫБРАТЬ Ссылка ИЗ Справочник.ТипыЦенНоменклатурыКонтрагентов
		|		{ГДЕ Владелец.* КАК Контрагент, Ссылка.* КАК ТипЦен}
		|	) КАК Цены
		|	ПО ИСТИНА
		|
		|
		|) КАК ТаблицаТоваров
		|
		|ПО ТаблицаТоваров.Номенклатура = ЦеныНоменклатурыКонтрагентов.Номенклатура 
		|И ТаблицаТоваров.ХарактеристикаНоменклатуры = ЦеныНоменклатурыКонтрагентов.ХарактеристикаНоменклатуры";
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса + "
	|ГДЕ
	|	НЕ ТаблицаТоваров.Номенклатура.Набор
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.ХарактеристикаНоменклатуры,
	|	ЦеныНоменклатурыКонтрагентов.ТипЦен
	|
	|АВТОУПОРЯДОЧИВАНИЕ";

	Если НЕ ВключатьНезаполненные Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТоваров", "ЦеныНоменклатурыКонтрагентов");
	КонецЕсли;

	ПостроительОтчета.Текст = ТекстЗапроса;
	ПостроительОтчета.Параметры.Вставить("ПустойТипЦен", Справочники.ТипыЦенНоменклатуры.ПустаяСсылка());

	Если Не ЗаполнятьТолькоТекстЗапроса Тогда

		// Соответствие имен полей в запросе и их представлений в отчете
		СтруктураПредставлениеПолей = Новый Структура(
		"	ТипЦен, 
		|	Номенклатура",
		"Тип цен",
		"Номенклатура");

		УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);

		// отборы по умолчанию
		Пока ПостроительОтчета.Отбор.Количество() > 0 Цикл
			ПостроительОтчета.Отбор.Удалить(0);
		КонецЦикла;

		МассивОтбора = Новый Массив;
		Если мКонтрагент = Неопределено Тогда
			МассивОтбора.Добавить("Контрагент");
		Иначе
			ЭлементОтбора = ПостроительОтчета.Отбор.Добавить("Контрагент",, "Контрагент");
			ЭлементОтбора.ВидСравнения  = ВидСравнения.Равно;
			ЭлементОтбора.Значение      = мКонтрагент;
			ЭлементОтбора.Использование = Истина;
		КонецЕсли;
		Если ТипыЦенСкидок.Количество() = 0 Тогда
			МассивОтбора.Добавить("ТипЦен");
		Иначе
			ЭлементОтбора = ПостроительОтчета.Отбор.Добавить("ТипЦен",, "Тип цен");
			ЭлементОтбора.ВидСравнения  = ВидСравнения.ВСписке;
			ЭлементОтбора.Значение.ЗагрузитьЗначения(ТипыЦенСкидок.ВыгрузитьКолонку("ТипЦенСкидок"));
			ЭлементОтбора.Использование = Истина;
		КонецЕсли;
		Если мСписокНоменклатуры = Неопределено Тогда
			МассивОтбора.Добавить("Номенклатура");
		Иначе
			ЭлементОтбора = ПостроительОтчета.Отбор.Добавить("Номенклатура",, "Номенклатура");
			ЭлементОтбора.ВидСравнения  = ВидСравнения.ВСписке;
			ЭлементОтбора.Значение      = мСписокНоменклатуры;
			ЭлементОтбора.Использование = Истина;
		КонецЕсли;
		УправлениеОтчетами.ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);

		ЗаполнитьОбщиеПараметрыПостроителяОтчета();

	КонецЕсли;

КонецПроцедуры // ЗаполнитьПостроительОтчетаПоЦенамНоменклатурыКонтрагентов()

мСписокНоменклатуры = Неопределено;
мКонтрагент         = Неопределено;

#КонецЕсли