
Процедура ДобавитьСтрокиТовараКРаботеВДеревоТэгов(СтрокиДерева, Отказ, Сообщение);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КаталогТоваров.НомерСтроки КАК НомерСтроки,
	|	КаталогТоваров.Номенклатура КАК Номенклатура,
	|	ИдентификаторыЭлектронногоОбмена.Идентификатор КАК ИдТовараКлиента,
	|	НоменклатураКонтрагентов.КодНоменклатурыКонтрагента КАК ИдТовараПоставщика,
	|	КаталогТоваров.Номенклатура.НаименованиеПолное КАК Наименование
	|ИЗ
	|	Документ.ИсходящийТоварКРаботе.Товары КАК КаталогТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	|		ПО КаталогТоваров.Номенклатура = НоменклатураКонтрагентов.Номенклатура
	|			И КаталогТоваров.Ссылка.Контрагент = НоменклатураКонтрагентов.Контрагент
	|			И КаталогТоваров.ХарактеристикаНоменклатуры = НоменклатураКонтрагентов.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИдентификаторыЭлектронногоОбмена КАК ИдентификаторыЭлектронногоОбмена
	|		ПО (ВЫБОР
	|				КОГДА КаталогТоваров.ХарактеристикаНоменклатуры = &ПустаяХарактеристикаНоменклатуры
	|					ТОГДА КаталогТоваров.Номенклатура
	|				ИНАЧЕ КаталогТоваров.ХарактеристикаНоменклатуры
	|			КОНЕЦ = ИдентификаторыЭлектронногоОбмена.Объект)
	|ГДЕ
	|	КаталогТоваров.Ссылка = &ЭлектронныйДокумент";
	
	Запрос.УстановитьПараметр("ЭлектронныйДокумент", Ссылка);
	Запрос.УстановитьПараметр("ПустаяХарактеристикаНоменклатуры", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	Результат = Запрос.Выполнить();
	
	ДанныеТаблицыТовары = Новый Массив;
	ШапкаОшибки = Неопределено;
	БылаГруппировка = Неопределено;
	ДанныеСтроки    = Неопределено;
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ШапкаОшибки = "Строка № " + Выборка.НомерСтроки + "; Номенклатура: """ + Выборка.Номенклатура + """ содержит ошибки:";
		
		СообщениеСтроки = "";

		Если Не ЗначениеЗаполнено(Выборка.ИдТовараКлиента) Тогда
			СообщениеСтроки = СообщениеСтроки + Символы.ПС + " - Не заполнен ИД товара организации"
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Выборка.ИдТовараПоставщика) Тогда
			СообщениеСтроки = СообщениеСтроки + Символы.ПС + " - Не заполнен ИД товара контрагента"
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Выборка.Наименование) Тогда
			СообщениеСтроки = СообщениеСтроки + Символы.ПС + " - Не заполнено наименование товара"
		КонецЕсли;
		
		Если Не ПустаяСтрока(СообщениеСтроки) Тогда
			Сообщение = Сообщение + Символы.ПС + "Строка № " + Выборка.НомерСтроки + "; Номенклатура: """ + Выборка.Номенклатура + """ содержит ошибки:" + СообщениеСтроки;
			Отказ = Истина;
		КонецЕсли;
		
		СтрокиТовара = ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиДерева, "Товар").Строки;
		ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиТовара, "ИдТовараКлиента" ,Выборка.ИдТовараКлиента, "ТоварИД");
		ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиТовара, "ИдТовараПоставщика" ,Выборка.ИдТовараПоставщика, "ТоварИД");
		ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиТовара, "Наименование" ,Выборка.Наименование);
		
	КонецЦикла;
	
	
КонецПроцедуры // () 

Процедура ЗаполнитьXML(ОбъектXML, Отказ, Сообщение, ДобавлятьАтрибутПроверки = Ложь, ДополнятьИсходящееСообщениеПриложеннымиФайлами = Ложь) Экспорт
	
	ПрефиксИмен = "";
	ПространствоИменСОДИ    = "urn:moo-sodi.ru:commerceml_sodi";
	
	ОбъектXML.ЗаписатьНачалоЭлемента("ТоварКРаботе", ПространствоИменСОДИ);
	ОбъектXML.ЗаписатьСоответствиеПространстваИмен(ПрефиксИмен, ПространствоИменСОДИ);
	ОбъектXML.ЗаписатьСоответствиеПространстваИмен("xsi", "http://www.w3.org/2001/XMLSchema-instance");
	
	Если ДобавлятьАтрибутПроверки Тогда
		ОбъектXML.ЗаписатьАтрибут("xsi:schemaLocation","urn:moo-sodi.ru:commerceml_sodi cml-catalogs-3.0sodi.xsd");
	КонецЕсли;
	
	ДеревоТэгов  = ЭлектронныеДокументы.ИнициализироватьДеревоТэгов(ЭтотОбъект, Отказ, Сообщение);
	СтрокиДерева = ДеревоТэгов.Строки;
		
	ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиДерева, "НомерИсходногоДокумента", ИсходныйДокумент.НомерВходящегоДокумента, "ДокументИД");
			
	ДобавитьСтрокиТовараКРаботеВДеревоТэгов(СтрокиДерева, Отказ, Сообщение);
	ЭлектронныеДокументы.ЗаписатьТэгиВXMLДокумент(ОбъектXML, ДеревоТэгов.Строки, ПрефиксИмен);
	ОбъектXML.ЗаписатьКонецЭлемента();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ЭлектронныеДокументы.ПередЗаписьюДокументаВведенногоНаОсновании(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(Основание)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ВходящийКаталогТоваров") Тогда
		
		ЭлектронныеДокументы.ЗаполнитьШапкуИсходящегоДокументаПоОснованию(ЭтотОбъект, Основание);
		
		Для Каждого ТекСтрокаТовары Из Основание.Товары.НайтиСтроки(Новый Структура("Пометка", Истина)) Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовары.ЕдиницаИзмерения;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.ХарактеристикаНоменклатуры = ТекСтрокаТовары.ХарактеристикаНоменклатуры;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция SOAPAction() Экспорт
	
	Возврат "accept_catalog";
	
КонецФункции // () 