
Перем мРегламентноеЗадание Экспорт;

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТипОчередиДляОбработкиСообщений) Тогда
		ТипОчередиДляОбработкиСообщений = Перечисления.ТипОчередиДляОбработкиЭлектронныхСообщений.ОсновнаяОчередь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Владелец) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана организация, от имени которой выполняется обмен данными", Отказ);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Идентификатор) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан идентификатор организации от имени которой выполняется обмен данными", Отказ);
	КонецЕсли;
	
	Если СпособОтправки = Перечисления.СпособОтправкиЭлектронногоДокумента.ОтправлятьНаСервер Тогда
		
		Если НЕ ЗначениеЗаполнено(СоединениеССервером) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указаны параметры соединения с сервером, через который планируется организовать обмен данными", Отказ);
		КонецЕсли;		
				
	ИначеЕсли СпособОтправки = Перечисления.СпособОтправкиЭлектронногоДокумента.ВыгружатьВФайл Тогда
		
		Если НЕ ЗначениеЗаполнено(КаталогДляВыгрузки) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан каталог для выгрузки данных", Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(КаталогДляЗагрузки) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан каталог для загрузки данных", Отказ);
		КонецЕсли;		
		
	КонецЕсли;
	
	// работа с регламентными заданиями
	УстановитьЗначенияПеременныхРегламентныхНастроек();
	
	Если ПометкаУдаления
		ИЛИ НЕ ИспользоватьРегламентныеЗадания Тогда
		
		Если мРегламентноеЗадание <> Неопределено Тогда
			мРегламентноеЗадание.Использование = Ложь;			
		КонецЕсли;		
					
	Иначе
		
		// если оба выключены регл задания - то включаем основное регл задание
		Если мРегламентноеЗадание = Неопределено Тогда
			
			ОбщегоНазначения.СообщитьОбОшибке("Не выбрано регламентное задание для настройки обмена.", Отказ);				
						
		КонецЕсли;
		
		Если мРегламентноеЗадание <> Неопределено Тогда
			
			мРегламентноеЗадание.Использование = Истина;
			
		КонецЕсли;
			
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если мРегламентноеЗадание <> Неопределено 
		И Не ПустаяСтрока(мРегламентноеЗадание.Ключ) Тогда
		
		КлючРегламентногоЗадания = мРегламентноеЗадание.Ключ;
		
	Иначе
		
		КлючРегламентногоЗадания = Строка(Новый УникальныйИдентификатор);
		
	КонецЕсли;
	
	УстановитьПараметрыРегламентногоЗадания(РегламентноеЗадание, мРегламентноеЗадание, КлючРегламентногоЗадания);
		
КонецПроцедуры

Процедура УстановитьПараметрыРегламентногоЗадания(РеквизитЗадания, ПараметрЗадания, КлючРегламентногоЗадания, Постфикс = "")
	
	Если ПараметрЗадания = Неопределено Тогда
		
		РеквизитЗадания = "";
		
	Иначе	
		
		РеквизитЗадания = Строка(ПараметрЗадания.УникальныйИдентификатор);
		
		ПараметрЗадания.Наименование = Наименование + Постфикс;
		// генерируем уникальный ключ, что бы в один момент времени 2 регламентных задания не выполнялись
		Если ПустаяСтрока(ПараметрЗадания.Ключ) Тогда
			ПараметрЗадания.Ключ = КлючРегламентногоЗадания;
		КонецЕсли;
		
		Массив = Новый Массив();
		Массив.Добавить(Код);
		
		ПараметрЗадания.Параметры = Массив;
		ПараметрЗадания.Записать();	
					
	КонецЕсли;	
	
КонецПроцедуры

Процедура УстановитьЗначенияПеременныхРегламентныхНастроек() Экспорт
	
	Если мРегламентноеЗадание = Неопределено Тогда
		
		мРегламентноеЗадание = ПолучитьОбъектРегламентногоЗадания();
			
	КонецЕсли;	
		
КонецПроцедуры

Функция ПолучитьОбъектРегламентногоЗадания() Экспорт
	
	Задание = НайтиРегламентноеЗаданиеПоНастройке();
		
	Возврат Задание;	
	
КонецФункции

Функция НайтиРеглЗаданиеПоПараметру(УникальныйНомерЗадания)
	
	Попытка
		
		Если НЕ ПустаяСтрока(УникальныйНомерЗадания) Тогда
			
			УникальныйИдентификаторЗадания = Новый УникальныйИдентификатор(УникальныйНомерЗадания);
			ТекущееРегламентноеЗадание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(УникальныйИдентификаторЗадания);
			
		Иначе
			
			ТекущееРегламентноеЗадание = Неопределено;
			
		КонецЕсли;
		
	Исключение
		
		ТекущееРегламентноеЗадание = Неопределено;
		
    КонецПопытки;
	
	Возврат ТекущееРегламентноеЗадание;
	
КонецФункции

Функция НайтиРегламентноеЗаданиеПоНастройке() Экспорт
	
	ТекущееРегламентноеЗадание = НайтиРеглЗаданиеПоПараметру(РегламентноеЗадание);
	
	Возврат ТекущееРегламентноеЗадание;
	
КонецФункции

Процедура ПриКопировании(ОбъектКопирования)
	
	РегламентноеЗадание = "";
	мРегламентноеЗадание = Неопределено;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	УстановитьЗначенияПеременныхРегламентныхНастроек();
	
	Если мРегламентноеЗадание <> Неопределено Тогда
		мРегламентноеЗадание.Удалить();
	КонецЕсли;	
	
КонецПроцедуры
