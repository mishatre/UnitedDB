///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МЕХАНИЗМА АНКЕТИРОВАНИЕ
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

// Функция возвращает выборку по вопросам анкеты
//
Функция ВыполнитьЗапросПоАнкете(Анкета)
	
	Запрос = Новый Запрос();
	
	Запрос.УстановитьПараметр("Ссылка",	Анкета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТиповыеАнкетыВопросыАнкеты.НомерСтроки КАК НомерСтроки,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос КАК Вопрос,
	|	ТиповыеАнкетыВопросыАнкеты.Раздел КАК Раздел,
	|	ТиповыеАнкетыВопросыАнкеты.Раздел.Код КАК КодРаздела,
	|	"". "" + ТиповыеАнкетыВопросыАнкеты.Раздел.Наименование КАК РазделНаименование,
	|	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы КАК КолонкаТаблицы,
	|	ВариантыОтветовОпросов.Наименование КАК ВариантыОтветовНаименование,
	|	ВариантыОтветовОпросовТабличные.Наименование КАК КолонкаТаблицыВариантыОтветовНаименование,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.Наименование КАК Наименование,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.ТипОтветаНаВопрос КАК ТипОтветаНаВопрос,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.Длина КАК Длина,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.Код КАК Код,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.Родитель КАК Родитель,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.ПолнаяФормулировка КАК ПолнаяФормулировка,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.ТипЗначения КАК ТипЗначения,
	|	ВЫБОР
	|		КОГДА ТиповыеАнкетыВопросыАнкеты.Обязательный В (ЗНАЧЕНИЕ(Перечисление.ОбязательностьЗаполненияОтветаНаВопрос.НеОбязателенКЗаполнению), ЗНАЧЕНИЕ(Перечисление.ОбязательностьЗаполненияОтветаНаВопрос.ПустаяСсылка))
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОбязателенДляЗаполнения,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.КоличествоСтрокТаблицы КАК СтрокВТаблице,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.Предопределенный КАК Предопределенный,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.ВидКонтактнойИнформации КАК ВидКонтактнойИнформации,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.ВидКонтактнойИнформации.Тип КАК ТипКонтактнойИнформации,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.ВидКонтактнойИнформации.ВидОбъектаКонтактнойИнформации КАК ВидОбъектаКонтактнойИнформации,
	|	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.ТипЗначения,
	|	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.ТипОтветаНаВопрос,
	|	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.Длина,
	|	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.ПолнаяФормулировка,
	|	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.Код КАК КолонкаТаблицыКод,
	|	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.Родитель,
	|	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.Наименование,
	|	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.КоличествоСтрокТаблицы,
	|	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.Предопределенный,
	|	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.ВидКонтактнойИнформации,
	|	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.ВидКонтактнойИнформации.Тип КАК КолонкаТаблицыТипКонтактнойИнформации,
	|	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.ВидКонтактнойИнформации.ВидОбъектаКонтактнойИнформации КАК КолонкаТаблицыВидОбъектаКонтактнойИнформации,
	|	ВопросыДляАнкетированияКолонкиТаблицы.НомерСтроки КАК КолонкаТаблицыНомерСтроки,
	|	ВариантыОтветовОпросовТабличные.Код КАК КолонкаТаблицыВариантыОтветовКод,
	|	ВариантыОтветовОпросовТабличные.Ссылка КАК КолонкаТаблицыВариантыОтветовСсылка,
	|	ВариантыОтветовОпросовТабличные.ТребуетРазвернутыйОтвет КАК КолонкаТаблицыВариантыОтветовТребуетРазвернутыйОтвет,
	|	ЛОЖЬ КАК КолонкаТаблицыОбязателенДляЗаполнения,
	|	ВариантыОтветовОпросов.Код КАК ВариантыОтветовКод,
	|	ВариантыОтветовОпросов.Ссылка КАК ВариантыОтветовСсылка,
	|	ВариантыОтветовОпросов.ТребуетРазвернутыйОтвет КАК ВариантыОтветовТребуетРазвернутыйОтвет
	|ИЗ
	|	Справочник.ТиповыеАнкеты.ВопросыАнкеты КАК ТиповыеАнкетыВопросыАнкеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВопросыДляАнкетирования.КолонкиТаблицы КАК ВопросыДляАнкетированияКолонкиТаблицы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОтветовОпросов КАК ВариантыОтветовОпросовТабличные
	|			ПО ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы = ВариантыОтветовОпросовТабличные.Владелец
	|		ПО ТиповыеАнкетыВопросыАнкеты.Вопрос = ВопросыДляАнкетированияКолонкиТаблицы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОтветовОпросов КАК ВариантыОтветовОпросов
	|		ПО ТиповыеАнкетыВопросыАнкеты.Вопрос = ВариантыОтветовОпросов.Владелец
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВопросыДляАнкетирования КАК ВопросыДляАнкетирования
	|		ПО ТиповыеАнкетыВопросыАнкеты.Вопрос = ВопросыДляАнкетирования.Ссылка
	|ГДЕ
	|	ТиповыеАнкетыВопросыАнкеты.Ссылка = &Ссылка
	|	И ТиповыеАнкетыВопросыАнкеты.Вопрос <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодРаздела,
	|	НомерСтроки,
	|	ВариантыОтветовКод,
	|	КолонкаТаблицыНомерСтроки,
	|	КолонкаТаблицыВариантыОтветовКод
	|ИТОГИ
	|	МАКСИМУМ(НомерСтроки),
	|	МАКСИМУМ(КодРаздела),
	|	МАКСИМУМ(ОбязателенДляЗаполнения),
	|	МАКСИМУМ(КолонкаТаблицыНомерСтроки),
	|	МАКСИМУМ(КолонкаТаблицыВариантыОтветовКод),
	|	МАКСИМУМ(ВариантыОтветовКод)
	|ПО
	|	Раздел,
	|	Вопрос,
	|	КолонкаТаблицы";
	
	Возврат Запрос.Выполнить();
	
КонецФункции // ВыполнитьЗапросПоАнкете()

Функция ВыполнитьЗапросПоОпросу(ДокументОпрос)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Опрос",	ДокументОпрос.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОпросВопросы.Вопрос КАК Вопрос,
	|	ОпросВопросы.Ответ,
	|	ОпросВопросы.ТиповойОтвет КАК ТиповойОтвет,
	|	ОпросВопросы.Вопрос КАК КолонкаТаблицы,
	|	NULL КАК НомерСтрокиВТаблице,
	|	ОпросВопросы.Вопрос КАК ВопросКоличество
	|ИЗ
	|	Документ.Опрос.Вопросы КАК ОпросВопросы
	|ГДЕ
	|	ОпросВопросы.Ссылка.Ссылка = &Опрос
	|	И (НЕ ОпросВопросы.Вопрос.ТипОтветаНаВопрос В (ЗНАЧЕНИЕ(Перечисление.ТипыОтветаНаВопросАнкеты.Табличный), ЗНАЧЕНИЕ(Перечисление.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета)))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОпросСоставнойОтвет.ВопросВладелец,
	|	ОпросСоставнойОтвет.Ответ,
	|	ОпросСоставнойОтвет.ТиповойОтвет,
	|	ОпросСоставнойОтвет.Вопрос,
	|	ОпросСоставнойОтвет.НомерСтрокиВТаблице,
	|	ОпросСоставнойОтвет.ВопросВладелец
	|ИЗ
	|	Документ.Опрос.СоставнойОтвет КАК ОпросСоставнойОтвет
	|ГДЕ
	|	ОпросСоставнойОтвет.Ссылка.Ссылка = &Опрос
	|ИТОГИ
	|	КОЛИЧЕСТВО(ВопросКоличество)
	|ПО
	|	Вопрос";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ВыполнитьЗапросПоДанным(ОпрашиваемоеЛицо, ТиповаяАнкета)
	
	Если ТипЗнч(ОпрашиваемоеЛицо) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
	
		Запрос = Новый Запрос;
		
		Запрос.УстановитьПараметр("Ссылка",	ОпрашиваемоеЛицо);
		Запрос.УстановитьПараметр("Анкета",	ТиповаяАнкета);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВопросыДляАнкетированияКолонкиТаблицы.Ссылка КАК Вопрос,
		|	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы КАК КолонкаТаблицы,
		|	ФизическиеЛицаСоставСемьи.НомерСтроки КАК НомерСтрокиВТаблице,
		|	"""" КАК Ответ,
		|	ВЫБОР
		|		КОГДА ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.СоставСемьиСтепеньРодства)
		|			ТОГДА ФизическиеЛицаСоставСемьи.СтепеньРодства
		|		КОГДА ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.СоставСемьиРодственник)
		|			ТОГДА ФизическиеЛицаСоставСемьи.Имя
		|		КОГДА ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.СоставСемьиГодРождения)
		|			ТОГДА ФизическиеЛицаСоставСемьи.ГодРождения
		|	КОНЕЦ КАК ТиповойОтвет
		|ИЗ
		|	ПланВидовХарактеристик.ВопросыДляАнкетирования.КолонкиТаблицы КАК ВопросыДляАнкетированияКолонкиТаблицы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.СоставСемьи КАК ФизическиеЛицаСоставСемьи
		|		ПО (ФизическиеЛицаСоставСемьи.Ссылка = &Ссылка)
		|			И (ВопросыДляАнкетированияКолонкиТаблицы.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.ТСоставСемьи))
		|			И ((НЕ ВопросыДляАнкетированияКолонкиТаблицы.Ссылка.ЭтоГруппа))
		|			И (ВопросыДляАнкетированияКолонкиТаблицы.Ссылка В
		|				(ВЫБРАТЬ
		|					ТиповыеАнкетыВопросыАнкеты.Вопрос
		|				ИЗ
		|					Справочник.ТиповыеАнкеты.ВопросыАнкеты КАК ТиповыеАнкетыВопросыАнкеты
		|				ГДЕ
		|					ТиповыеАнкетыВопросыАнкеты.Ссылка = &Анкета))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВопросыДляАнкетирования.Ссылка,
		|	NULL,
		|	NULL,
		|	"""",
		|	ВЫБОР
		|		КОГДА ВопросыДляАнкетирования.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.Фамилия)
		|			ТОГДА ФИОФизЛицСрезПоследних.Фамилия
		|		КОГДА ВопросыДляАнкетирования.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.Имя)
		|			ТОГДА ФИОФизЛицСрезПоследних.Имя
		|		КОГДА ВопросыДляАнкетирования.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.Отчество)
		|			ТОГДА ФИОФизЛицСрезПоследних.Отчество
		|		КОГДА ВопросыДляАнкетирования.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.ДатаРождения)
		|			ТОГДА ФизическиеЛица.ДатаРождения
		|		КОГДА ВопросыДляАнкетирования.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.ИНН)
		|			ТОГДА ФизическиеЛица.ИНН
		|		КОГДА ВопросыДляАнкетирования.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.Пол)
		|			ТОГДА ФизическиеЛица.Пол
		|		КОГДА ВопросыДляАнкетирования.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.КодИМНС)
		|			ТОГДА ФизическиеЛица.КодИМНС
		|		КОГДА ВопросыДляАнкетирования.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.СтраховойНомерПФР)
		|			ТОГДА ФизическиеЛица.СтраховойНомерПФР
		|		КОГДА ВопросыДляАнкетирования.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.Гражданство)
		|			ТОГДА ГражданствоФизЛицСрезПоследних.Страна
		|		КОГДА ВопросыДляАнкетирования.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.СемейноеПоложение)
		|			ТОГДА СемейноеПоложениеФизЛицСрезПоследних.СемейноеПоложение
		|		КОГДА ВопросыДляАнкетирования.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.ВидДокументаУдостоверяющегоЛичность)
		|			ТОГДА ПаспортныеДанныеФизЛицСрезПоследних.ДокументВид
		|		КОГДА ВопросыДляАнкетирования.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.СерияДокумента)
		|			ТОГДА ПаспортныеДанныеФизЛицСрезПоследних.ДокументСерия
		|		КОГДА ВопросыДляАнкетирования.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.НомерДокумента)
		|			ТОГДА ПаспортныеДанныеФизЛицСрезПоследних.ДокументНомер
		|		КОГДА ВопросыДляАнкетирования.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.ДатаВыдачиДокумента)
		|			ТОГДА ПаспортныеДанныеФизЛицСрезПоследних.ДокументДатаВыдачи
		|		КОГДА ВопросыДляАнкетирования.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВопросыДляАнкетирования.КемВыданДокумент)
		|			ТОГДА ВЫРАЗИТЬ(ПаспортныеДанныеФизЛицСрезПоследних.ДокументКемВыдан КАК СТРОКА(1000))
		|	КОНЕЦ
		|ИЗ
		|	ПланВидовХарактеристик.ВопросыДляАнкетирования КАК ВопросыДляАнкетирования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(, ФизЛицо = &Ссылка) КАК ФИОФизЛицСрезПоследних
		|			ПО ФИОФизЛицСрезПоследних.ФизЛицо = ФизическиеЛица.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц.СрезПоследних(, ФизЛицо = &Ссылка) КАК ГражданствоФизЛицСрезПоследних
		|			ПО ГражданствоФизЛицСрезПоследних.ФизЛицо = ФизическиеЛица.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СемейноеПоложениеФизЛиц.СрезПоследних(, ФизЛицо = &Ссылка) КАК СемейноеПоложениеФизЛицСрезПоследних
		|			ПО СемейноеПоложениеФизЛицСрезПоследних.ФизЛицо = ФизическиеЛица.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(, ФизЛицо = &Ссылка) КАК ПаспортныеДанныеФизЛицСрезПоследних
		|			ПО ПаспортныеДанныеФизЛицСрезПоследних.ФизЛицо = ФизическиеЛица.Ссылка
		|		ПО (ФизическиеЛица.Ссылка = &Ссылка)
		|			И ((НЕ ВопросыДляАнкетирования.ТипОтветаНаВопрос В (ЗНАЧЕНИЕ(Перечисление.ТипыОтветаНаВопросАнкеты.Табличный), ЗНАЧЕНИЕ(Перечисление.ТипыОтветаНаВопросАнкеты.КонтактнаяИнформация))))
		|			И ((НЕ ВопросыДляАнкетирования.ЭтоГруппа))
		|			И (ВопросыДляАнкетирования.Ссылка В
		|				(ВЫБРАТЬ
		|					ТиповыеАнкетыВопросыАнкеты.Вопрос
		|				ИЗ
		|					Справочник.ТиповыеАнкеты.ВопросыАнкеты КАК ТиповыеАнкетыВопросыАнкеты
		|				ГДЕ
		|					ТиповыеАнкетыВопросыАнкеты.Ссылка = &Анкета))
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВопросыДляАнкетирования.Ссылка,
		|	NULL,
		|	NULL,
		|	"""",
		|	ВЫБОР
		|		КОГДА КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
		|			ТОГДА КонтактнаяИнформация.Поле1 + ""¤"" + КонтактнаяИнформация.Поле2 + ""¤"" + КонтактнаяИнформация.Поле3 + ""¤"" + КонтактнаяИнформация.Поле4
		|		КОГДА КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
		|			ТОГДА КонтактнаяИнформация.Поле1 + ""¤"" + КонтактнаяИнформация.Поле2 + ""¤"" + КонтактнаяИнформация.Поле3 + ""¤"" + КонтактнаяИнформация.Поле4 + ""¤"" + КонтактнаяИнформация.Поле5 + ""¤"" + КонтактнаяИнформация.Поле6 + ""¤"" + КонтактнаяИнформация.Поле7 + ""¤"" + КонтактнаяИнформация.Поле8 + ""¤"" + КонтактнаяИнформация.Поле9
		|	КОНЕЦ
		|ИЗ
		|	ПланВидовХарактеристик.ВопросыДляАнкетирования КАК ВопросыДляАнкетирования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ПО ВопросыДляАнкетирования.ВидКонтактнойИнформации = КонтактнаяИнформация.Вид
		|			И ((НЕ ВопросыДляАнкетирования.ЭтоГруппа))
		|			И (ВопросыДляАнкетирования.Ссылка В
		|				(ВЫБРАТЬ
		|					ТиповыеАнкетыВопросыАнкеты.Вопрос
		|				ИЗ
		|					Справочник.ТиповыеАнкеты.ВопросыАнкеты КАК ТиповыеАнкетыВопросыАнкеты
		|				ГДЕ
		|					ТиповыеАнкетыВопросыАнкеты.Ссылка = &Анкета))
		|			И (КонтактнаяИнформация.Объект = &Ссылка)
		|			И ВопросыДляАнкетирования.ВидКонтактнойИнформации.Тип = КонтактнаяИнформация.Тип
		|
		|УПОРЯДОЧИТЬ ПО
		|	Вопрос,
		|	КолонкаТаблицы,
		|	НомерСтрокиВТаблице";
		
		Возврат Запрос.Выполнить().Выбрать();
	
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МЕХАНИЗМА УДАЛЕННОЕ АНКЕТИРОВАНИЕ
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

// Функция формирует XSL файл
//
Функция СформироватьXSL(ИмяФайлаАнкеты, КаталогАнкеты, КаталогОпроса, ДобавлятьКнопкуЗаписи, ДобавлятьКнопкуОтправки, ЭлектронныйАдресОтветов) Экспорт
	
	ИмяФайлаПреобразования = "style.xsl";
	
	XSLМакет = ПолучитьОбщийМакет("МакетТиповойАнкеты");
	
	Если Не ПустаяСтрока(КаталогАнкеты) тогда
		ТекстXSL = XSLМакет.ПолучитьОбласть("ДоКнопок");
		ТекстXSL.УдалитьСтроку(1);
		ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
		СтрокаПреобразования = ТекстXSL.ПолучитьТекст();
		ТекстXSL = XSLМакет.ПолучитьОбласть("КнопкаОтправить2");
		ТекстXSL.УдалитьСтроку(1);
		ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
		СтрокаПреобразования = СтрокаПреобразования + ТекстXSL.ПолучитьТекст();
		ТекстXSL = XSLМакет.ПолучитьОбласть("ПослеКнопок");
		ТекстXSL.УдалитьСтроку(1);
		ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
		СтрокаПреобразования = СтрокаПреобразования + ТекстXSL.ПолучитьТекст();
		СтрокаПреобразования = СтрЗаменить(СтрокаПреобразования, "//comment11;", "LoadPath = '"+СтрЗаменить(КаталогАнкеты+ИмяФайлаАнкеты, "\", "\\")+"';");
		СтрокаПреобразования = СтрЗаменить(СтрокаПреобразования, "//comment22;", "FName	= '" + СтрЗаменить(КаталогОпроса, "\", "\\")+"opros.xml';");
		
	ИначеЕсли Не ДобавлятьКнопкуОтправки И ДобавлятьКнопкуЗаписи тогда
		// когда открываем анкету просто для просмотра то она уже точно не адресная
		// в нее помещаем только кнопку "Сохранить в файл"
		ТекстXSL = XSLМакет.ПолучитьОбласть("ДоКнопок");
		ТекстXSL.УдалитьСтроку(1);
		ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
		СтрокаПреобразования = ТекстXSL.ПолучитьТекст();
		ТекстXSL = XSLМакет.ПолучитьОбласть("КнопкаСохранить");
		ТекстXSL.УдалитьСтроку(1);
		ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
		СтрокаПреобразования = СтрокаПреобразования + ТекстXSL.ПолучитьТекст();
		ТекстXSL = XSLМакет.ПолучитьОбласть("ПослеКнопок");
		ТекстXSL.УдалитьСтроку(1);
		ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
		СтрокаПреобразования = СтрокаПреобразования + ТекстXSL.ПолучитьТекст();
		
	ИначеЕсли ДобавлятьКнопкуОтправки И ДобавлятьКнопкуЗаписи тогда
		// когда открываем адресную анкету просто для просмотра 
		// в нее помещаем обе кнопки
		ТекстXSL = XSLМакет.ПолучитьОбласть("ДоКнопок");
		ТекстXSL.УдалитьСтроку(1);
		ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
		СтрокаПреобразования = ТекстXSL.ПолучитьТекст();
		ТекстXSL = XSLМакет.ПолучитьОбласть("Кнопки");
		ТекстXSL.УдалитьСтроку(1);
		ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
		СтрокаПреобразования = СтрокаПреобразования + ТекстXSL.ПолучитьТекст();
		ТекстXSL = XSLМакет.ПолучитьОбласть("ПослеКнопок");
		ТекстXSL.УдалитьСтроку(1);
		ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
		СтрокаПреобразования = СтрокаПреобразования + ТекстXSL.ПолучитьТекст();
		
	ИначеЕсли Не ДобавлятьКнопкуЗаписи тогда
		ТекстXSL = XSLМакет.ПолучитьОбласть("ДоКнопок");
		ТекстXSL.УдалитьСтроку(1);
		ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
		СтрокаПреобразования = ТекстXSL.ПолучитьТекст();
		ТекстXSL = XSLМакет.ПолучитьОбласть("КнопкаСохранить");
		ТекстXSL.УдалитьСтроку(1);
		ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
		СтрокаПреобразования = СтрокаПреобразования + ТекстXSL.ПолучитьТекст();
		ТекстXSL = XSLМакет.ПолучитьОбласть("ПослеКнопок");
		ТекстXSL.УдалитьСтроку(1);
		ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
		СтрокаПреобразования = СтрокаПреобразования + ТекстXSL.ПолучитьТекст();
		
	КонецЕсли;
	СтрокаПреобразования = СтрЗаменить(СтрокаПреобразования, "###@###", ЭлектронныйАдресОтветов);
	ТекстXSL.УстановитьТекст(СтрокаПреобразования);
	
	Возврат ТекстXSL;
	
КонецФункции

Процедура ДобавитьПоле(ОбъектXML, Имя, Значение)
	
	ОбъектXML.ЗаписатьАтрибут(Имя, XMLСтрока(Значение));
	
КонецПроцедуры // ДобавитьПоле()

Функция ПолучитьОтветы(Выборка, Тип, ФлагКолонки = Ложь)
	
	Если НЕ ФлагКолонки Тогда
		Вопрос	= Выборка.Вопрос;
		Префикс	= "";
		
	Иначе
		Вопрос	= Выборка.КолонкаТаблицы;
		Префикс	= "КолонкаТаблицы";
		
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Вопрос", Вопрос);
	
	ТипЗначения = Выборка[Префикс + "ТипЗначения"].Типы().Получить(0);
	
	Если (ТипЗначения = Тип("Булево")) Тогда
		
		ВыборкаЭлементов = Новый ТаблицаЗначений();
		ВыборкаЭлементов.Колонки.Добавить("Код");
		ВыборкаЭлементов.Колонки.Добавить("Ссылка");
		ВыборкаЭлементов.Колонки.Добавить("Наименование");
		ВыборкаЭлементов.Колонки.Добавить("Комментарий");
		ВыборкаЭлементов.Колонки.Добавить("ТребуетРазвернутыйОтвет");
		ВыборкаЭлементов.Колонки.Добавить("ГУИД");
		
		СтрокаТаблицы = ВыборкаЭлементов.Добавить();
		СтрокаТаблицы.Код						= ЗначениеВСтрокуВнутр(Ложь);
		СтрокаТаблицы.Ссылка					= Ложь;
		СтрокаТаблицы.Наименование				= Строка("Нет");
		СтрокаТаблицы.Комментарий				= "";
		СтрокаТаблицы.ТребуетРазвернутыйОтвет	= Ложь;
		СтрокаТаблицы.ГУИД = СтрокаТаблицы.Код;
		
		СтрокаТаблицы = ВыборкаЭлементов.Добавить();
		СтрокаТаблицы.Код						= ЗначениеВСтрокуВнутр(Истина);
		СтрокаТаблицы.Ссылка					= Истина;
		СтрокаТаблицы.Наименование				= Строка("Да");
		СтрокаТаблицы.Комментарий				= "";
		СтрокаТаблицы.ТребуетРазвернутыйОтвет	= Ложь;
		СтрокаТаблицы.ГУИД = СтрокаТаблицы.Код;
		
	ИначеЕсли (ТипЗначения = Тип("Строка")) ИЛИ
		(ТипЗначения = Тип("Число")) ИЛИ
		(ТипЗначения = Тип("Дата")) Тогда
		
		ВыборкаЭлементов = Новый ТаблицаЗначений();
		ВыборкаЭлементов.Колонки.Добавить("Код");
		ВыборкаЭлементов.Колонки.Добавить("Ссылка");
		ВыборкаЭлементов.Колонки.Добавить("Наименование");
		ВыборкаЭлементов.Колонки.Добавить("Комментарий");
		ВыборкаЭлементов.Колонки.Добавить("ТребуетРазвернутыйОтвет");
		
	ИначеЕсли (ТипЗначения = Тип("СправочникСсылка.ВариантыОтветовОпросов")) Тогда
		
		ВыборкаЭлементов = Новый ТаблицаЗначений;
		ВыборкаЭлементов.Колонки.Добавить("Код");
		ВыборкаЭлементов.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("СправочникСсылка.ВариантыОтветовОпросов"));
		ВыборкаЭлементов.Колонки.Добавить("Наименование");
		ВыборкаЭлементов.Колонки.Добавить("ТребуетРазвернутыйОтвет");
		
		ВариантыОтветов = Выборка.Выбрать(ОбходРезультатаЗапроса.Прямой);
		Пока ВариантыОтветов.Следующий() Цикл
			НоваяСтрока = ВыборкаЭлементов.Добавить();
			НоваяСтрока.Код						= ВариантыОтветов[Префикс + "ВариантыОтветовКод"];
			НоваяСтрока.Ссылка					= ВариантыОтветов[Префикс + "ВариантыОтветовСсылка"];
			НоваяСтрока.Наименование			= ВариантыОтветов[Префикс + "ВариантыОтветовНаименование"];
			НоваяСтрока.ТребуетРазвернутыйОтвет	= ВариантыОтветов[Префикс + "ВариантыОтветовТребуетРазвернутыйОтвет"];
		КонецЦикла;
		
		Если ВыборкаЭлементов.Количество() > 0 И НЕ ВыборкаЭлементов[0].Ссылка.Пустая() Тогда
			ПустаяСтрокаТаблицы			= ВыборкаЭлементов.Вставить(0);
			ПустаяСтрокаТаблицы.Ссылка	= Справочники.ВариантыОтветовОпросов.ПустаяСсылка();
		КонецЕсли;
		
		ВыборкаЭлементов.Колонки.Добавить("ГУИД");
		Для Каждого СтрокаТаблицы Из ВыборкаЭлементов Цикл
			СтрокаТаблицы.ГУИД = СтрокаТаблицы.Ссылка.УникальныйИдентификатор();
		КонецЦикла;
		
	Иначе
		Объект = Метаданные.НайтиПоТипу(ТипЗначения);
		
		Попытка  // Объект - перечисление
			Перечисление = Истина;
			Значения = Объект.ЗначенияПеречисления;
		Исключение // объект - справочник
			Перечисление = Ложь;
		КонецПопытки;
		
		Если Перечисление Тогда
			
			ВыборкаЭлементов = Новый ТаблицаЗначений();
			ВыборкаЭлементов.Колонки.Добавить("Код");
			ВыборкаЭлементов.Колонки.Добавить("Ссылка");
			ВыборкаЭлементов.Колонки.Добавить("Наименование");
			ВыборкаЭлементов.Колонки.Добавить("Комментарий");
			ВыборкаЭлементов.Колонки.Добавить("ТребуетРазвернутыйОтвет");
			
			Менеджер = Перечисления[Объект.Имя];
			Для Индекс = 0 По Менеджер.Количество() - 1 Цикл
				СтрокаТаблицы = ВыборкаЭлементов.Добавить();
				Значение = Менеджер.Получить(Индекс);
				СтрокаТаблицы.Код						= ЗначениеВСтрокуВнутр(Значение);
				СтрокаТаблицы.Ссылка					= Значение;
				СтрокаТаблицы.Наименование				= Строка(Значение);
				СтрокаТаблицы.Комментарий				= Значение.Метаданные().Комментарий;
				СтрокаТаблицы.ТребуетРазвернутыйОтвет	= Ложь;
			КонецЦикла;
			ПустаяСтрокаТаблицы = ВыборкаЭлементов.Вставить(0);
			ПустаяСтрокаТаблицы.Ссылка = Менеджер.ПустаяСсылка();
			
		Иначе
			Запрос.Текст =
			"ВЫБРАТЬ
			|	"+Объект.Имя+".Ссылка       КАК Ссылка,
			|	"+Объект.Имя+".Наименование КАК Наименование,
			|	Ложь КАК ТребуетРазвернутыйОтвет
			|ИЗ
			|	Справочник."+Объект.Имя+" КАК "+Объект.Имя+"
			|";
			
			ВыборкаЭлементов =  Запрос.Выполнить().Выгрузить();
			ВыборкаЭлементов.Колонки.Добавить("Код");
			ВыборкаЭлементов.ЗаполнитьЗначения(NULL, "Код");
			
			Если ВыборкаЭлементов.Количество() > 0 тогда
				ПустойЭлемент = ВыборкаЭлементов.Вставить(0);
				ПустойЭлемент.Ссылка = Справочники[Объект.Имя].ПустаяСсылка();
				
			Иначе
				ОбщегоНазначения.СообщитьОбОшибке("Справочник """+Объект.Синоним+""" не имеет ни одного элемента. Рекомендуется заполнить его и сформировать анкету еще раз.");
				
			КонецЕсли;
			
		КонецЕсли;
		
		ВыборкаЭлементов.Колонки.Добавить("ГУИД");
		Для Каждого СтрокаТаблицы Из ВыборкаЭлементов Цикл
			Если СтрокаТаблицы.Код = NULL Тогда
				СтрокаТаблицы.ГУИД = СтрокаТаблицы.Ссылка.УникальныйИдентификатор();
				
			Иначе
				СтрокаТаблицы.ГУИД = СтрокаТаблицы.Код;
				
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ВыборкаЭлементов;
	
КонецФункции // ПолучитьОтветы()

Функция ПолучитьТипЗначенияОтвета(Выборка, ФлагКолонки)
	
	Если НЕ ФлагКолонки тогда
		Вопрос	= Выборка.Вопрос;
		Префикс	= "";
		
	Иначе
		Вопрос	= Выборка.КолонкаТаблицы;
		Префикс	= "КолонкаТаблицы";
		
	КонецЕсли;
	
	Параметры = Новый Структура("Представление, Тип, Длина, СпособОтвета, СтрокВТаблице, Ответы");
	
	ТипЗначения = Выборка[Префикс + "ТипЗначения"];
	ДлинаТипа   = Выборка[Префикс + "Длина"];
	
	Если (ТипЗначения.СодержитТип(Тип("Булево"))) Тогда
		Параметры.Тип = Строка(ТипЗначения);
		
	ИначеЕсли Выборка[Префикс + "ТипОтветаНаВопрос"] = Перечисления.ТипыОтветаНаВопросАнкеты.Текст тогда
		Параметры.Тип 			= "Строка";
		Параметры.Длина = Строка(ДлинаТипа);
		
	ИначеЕсли (ТипЗначения.СодержитТип(Тип("Строка"))) ИЛИ
		(ТипЗначения.СодержитТип(Тип("Число"))) ИЛИ
		(ТипЗначения.СодержитТип(Тип("Дата"))) Тогда
		
		Параметры.Тип = Строка(ТипЗначения);
		Параметры.Длина = Строка(ДлинаТипа);
		
	Иначе
		Тип = "Строка";
		
	КонецЕсли;
	
	Ответы = ПолучитьОтветы(Выборка, Тип, ФлагКолонки);
	
	ЕстьОтветы = Ответы.Количество() > 0;
	
	Если Выборка[Префикс + "ТипОтветаНаВопрос"]  = Перечисления.ТипыОтветаНаВопросАнкеты.КонтактнаяИнформация Тогда
		СтрокаТипКИ = ОбщегоНазначения.ПолучитьИмяЭлементаПеречисленияПоЗначению(Выборка[Префикс + "ТипКонтактнойИнформации"]);
		СтрокаВидКИ = ОбщегоНазначения.ПолучитьИмяЭлементаПеречисленияПоЗначению(Выборка[Префикс + "ВидОбъектаКонтактнойИнформации"]);
		
		Параметры.Тип			= ""+СтрокаТипКИ+"¤"+СтрокаВидКИ;
		Параметры.СтрокВТаблице	= 0; // вопрос не табличный, значит строк - 0!
		Параметры.Представление	= "ПолеВвода";
		Параметры.СпособОтвета	= "ВСвободнойФорме";
		
	ИначеЕсли Выборка[Префикс + "ТипОтветаНаВопрос"] = Перечисления.ТипыОтветаНаВопросАнкеты.Табличный Тогда
		Параметры.Тип			= "Таблица";
		Параметры.СтрокВТаблице	= Выборка.СтрокВТаблице; // вложенные табличные вопросы быть не могут, поэтому можно обойтись без префикса
		Параметры.Представление	= "Таблица";
		Параметры.СпособОтвета	= "";
		
	Иначе
		Параметры.СтрокВТаблице = 0;
		
		Если ЕстьОтветы Тогда
			
			Если Выборка[Префикс + "ТипОтветаНаВопрос"] <> Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета Тогда
				Если Ответы.Количество() > 5 Тогда
					Параметры.Тип				= Тип;
					Если Ответы.Найти(Истина, "ТребуетРазвернутыйОтвет") = Неопределено Тогда
						Параметры.Представление	= "СписокВыбора";
						
					Иначе
						// если есть хоть один предопределенный	ответ
						Параметры.Представление	= "Переключатель";
						
					КонецЕсли;
					Параметры.СпособОтвета		= "ВыборОдногоВарианта";
					
				Иначе
					Параметры.Тип				= Тип;
					Если ФлагКолонки Тогда
						Параметры.Представление	= "СписокВыбора";
						
					Иначе
						Параметры.Представление	= "Переключатель";
						
					КонецЕсли;
					Параметры.СпособОтвета		= "ВыборОдногоВарианта";
				КонецЕсли;
			Иначе
				Параметры.Тип			= Тип;
				Параметры.Представление	= "Флажок";
				Параметры.СпособОтвета	= "ВыборНесколькихВариантов";
				
			КонецЕсли;
			
		Иначе
			
			Если (ТипЗначения.СодержитТип(Тип("Булево"))) Тогда
				Параметры.Тип				= Строка(Выборка[Префикс + "ТипЗначения"]);
				Параметры.Представление		= "СписокВыбора";
				Параметры.СпособОтвета		= "ВыборОдногоВарианта";
				
			ИначеЕсли (ТипЗначения.СодержитТип(Тип("Строка"))) ИЛИ
				(ТипЗначения.СодержитТип(Тип("Число"))) ИЛИ
				(ТипЗначения.СодержитТип(Тип("Дата"))) Тогда
				
				Параметры.Тип				= Строка(Выборка[Префикс + "ТипЗначения"]);
				
				Если Выборка[Префикс + "ТипОтветаНаВопрос"] = Перечисления.ТипыОтветаНаВопросАнкеты.Текст тогда
					// не все строковые поля одинаковые. Бывает еще и текст
					Параметры.Представление	= "Текст";
					
				Иначе
					Параметры.Представление	= "ПолеВвода";
					
				КонецЕсли;
				
				Параметры.СпособОтвета		= "ВСвободнойФорме";
				
			Иначе
				Параметры.Тип				= "Строка";
				Параметры.Представление		= "ПолеВвода";
				Параметры.СпособОтвета		= "ВСвободнойФорме";
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Параметры.Ответы = Ответы;
	
	Возврат Параметры;
	
КонецФункции // ПолучитьТипЗначенияОтвета()

Процедура ЗаписатьВопрос(ОбъектXML, Выборка, ФлагКолонки)
	
	Если НЕ ФлагКолонки тогда
		Вопрос	= Выборка.Вопрос;
		Префикс	= "";
		
	Иначе
		Вопрос	= Выборка.КолонкаТаблицы;
		Префикс	= "КолонкаТаблицы";
		
	КонецЕсли;
	
	Параметры	= ПолучитьТипЗначенияОтвета(Выборка, ФлагКолонки);
	
	Если Выборка.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Табличный и НЕ ФлагКолонки тогда
		ТабличныйВопрос = Выборка.Вопрос;
		// значит имеем дело с табличным вопросом
		Параметры = ПолучитьТипЗначенияОтвета(Выборка, Ложь);
		
		ОбъектXML.ЗаписатьНачалоЭлемента("Вопрос");
			
			ДобавитьПоле(ОбъектXML,"Ид",						ТабличныйВопрос.УникальныйИдентификатор());
			ДобавитьПоле(ОбъектXML,"Наименование",				?(ПустаяСтрока(Выборка.ПолнаяФормулировка), Выборка.Наименование, Выборка.ПолнаяФормулировка));
			ДобавитьПоле(ОбъектXML,"Комментарий",				Выборка.Наименование);
			ДобавитьПоле(ОбъектXML,"Обязательный",				Выборка.ОбязателенДляЗаполнения);
			ДобавитьПоле(ОбъектXML,"СпособОтвета",				Параметры.СпособОтвета);
			ДобавитьПоле(ОбъектXML,"ТипЗначенийОтвета",			Параметры.Тип);
			ДобавитьПоле(ОбъектXML,"Представление",				Параметры.Представление);
			ДобавитьПоле(ОбъектXML,"КоличествоСтрокТаблицы",	Параметры.СтрокВТаблице);
			
			КолонкиТаблицы = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока КолонкиТаблицы.Следующий() Цикл
				ЗаписатьВопрос(ОбъектXML, КолонкиТаблицы, Истина);
			КонецЦикла;
			
		ОбъектXML.ЗаписатьКонецЭлемента(); // Вопрос
		
	Иначе
		Если НЕ ФлагКолонки тогда
			ОбъектXML.ЗаписатьНачалоЭлемента("Вопрос");
		Иначе
			ОбъектXML.ЗаписатьНачалоЭлемента("КолонкаТаблицы");
		КонецЕсли;
		
			ДобавитьПоле(ОбъектXML,"Ид",						Вопрос.УникальныйИдентификатор());
			ДобавитьПоле(ОбъектXML,"Наименование",				?(ПустаяСтрока(Выборка[Префикс + "ПолнаяФормулировка"]), Выборка[Префикс + "Наименование"], Выборка[Префикс + "ПолнаяФормулировка"]));
			ДобавитьПоле(ОбъектXML,"Комментарий",				Выборка[Префикс + "Наименование"]);
			ДобавитьПоле(ОбъектXML,"Обязательный",				Выборка[Префикс + "ОбязателенДляЗаполнения"]);
			ДобавитьПоле(ОбъектXML,"СпособОтвета",				Параметры.СпособОтвета);
			ДобавитьПоле(ОбъектXML,"ТипЗначенийОтвета",			Параметры.Тип);
			ДобавитьПоле(ОбъектXML,"Длина",						?(Параметры.Длина = "0", "60", Параметры.Длина));
			ДобавитьПоле(ОбъектXML,"Представление",				Параметры.Представление);
			ДобавитьПоле(ОбъектXML,"КоличествоСтрокТаблицы",	Параметры.СтрокВТаблице);
			Ответы = Параметры.Ответы;
			
			Для Каждого СтрокаТаблицы Из Ответы Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Ссылка) и Параметры.Представление <> "СписокВыбора" тогда
					// пустые ссылки будем записывать только выпадающие списки
					Продолжить;
				КонецЕсли;
				
				ОбъектXML.ЗаписатьНачалоЭлемента("ВариантОтвета");
				
					ДобавитьПоле(ОбъектXML,"Ид",						СтрокаТаблицы.ГУИД);
					ДобавитьПоле(ОбъектXML,"Наименование",				СтрокаТаблицы.Наименование);
					ДобавитьПоле(ОбъектXML,"Комментарий",				"");
					ДобавитьПоле(ОбъектXML,"ТребуетРазвернутыйОтвет",	СтрокаТаблицы.ТребуетРазвернутыйОтвет);
				
				ОбъектXML.ЗаписатьКонецЭлемента(); // ВариантОтвета
			КонецЦикла;
		
		ОбъектXML.ЗаписатьКонецЭлемента(); // Вопрос ИЛИ КолонкаТаблицы
		
	КонецЕсли;
	
КонецПроцедуры // ЗаписатьВопрос()

Процедура ЗаписатьРаздел(ОбъектXML, РазделДляЗаписи, РазделНаименование)
	
	ОбъектXML.ЗаписатьНачалоЭлемента("Группа");
	Если РазделДляЗаписи = NULL тогда
		ДобавитьПоле(ОбъектXML,"Ид",			"");
		ДобавитьПоле(ОбъектXML,"Комментарий",	"");
		
	Иначе
		ДобавитьПоле(ОбъектXML,"Ид",			РазделДляЗаписи.Ссылка.УникальныйИдентификатор());
		ДобавитьПоле(ОбъектXML,"Комментарий",	РазделДляЗаписи.Комментарий);
		
	КонецЕсли;
	ДобавитьПоле(ОбъектXML,"Наименование", РазделНаименование);
	
КонецПроцедуры // ЗаписатьРаздел()

Процедура ДобавитьОтвет(ОбъектXML, Вопрос, ТипОтветаНаВопрос, ВыборкаОтветовИзОпроса, ТабличныйВопрос = Неопределено, НомерСтрокиВТаблице = Неопределено)
	
	Если ТабличныйВопрос = Неопределено Тогда
		ВопросПоиска = Новый Структура("Вопрос");
		ВопросПоиска.Вопрос				= Вопрос;				// выберем ответы по указанному вопросу
		
	Иначе
		ВопросПоиска = Новый Структура("Вопрос, КолонкаТаблицы, НомерСтрокиВТаблице");
		ВопросПоиска.Вопрос				= ТабличныйВопрос;		// выберем ответы по указанному табличному вопросу
		ВопросПоиска.КолонкаТаблицы		= Вопрос;				// выберем ответы по указанной колонке
		ВопросПоиска.НомерСтрокиВТаблице= НомерСтрокиВТаблице;	// НомерСтрокиВТаблице
		
	КонецЕсли;
	
	Если ВыборкаОтветовИзОпроса <> Неопределено Тогда
		ВыборкаОтветовИзОпроса.Сбросить();
	КонецЕсли;
	
	ОбъектXML.ЗаписатьНачалоЭлемента("Вопрос");
	
		ДобавитьПоле(ОбъектXML,"Ид", Вопрос.УникальныйИдентификатор());
		Если (Вопрос.Предопределенный И 
			(Вопрос.ТипЗначения.СодержитТип(Тип("Строка")) ИЛИ
			Вопрос.ТипЗначения.СодержитТип(Тип("Дата")) ИЛИ 
			Вопрос.ТипЗначения.СодержитТип(Тип("Число")) ) ) ИЛИ
			(НЕ Вопрос.Предопределенный И
			(ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Строка ИЛИ
			ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Число ИЛИ
			ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Дата ИЛИ
			ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.КонтактнаяИнформация ИЛИ
			ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Текст)) Тогда
			
			ОбъектXML.ЗаписатьНачалоЭлемента("Значение");
			
				Если ВыборкаОтветовИзОпроса <> Неопределено Тогда
					Пока ВыборкаОтветовИзОпроса.НайтиСледующий(ВопросПоиска) Цикл
						Если Вопрос.ТипЗначения.СодержитТип(Тип("Дата")) ИЛИ
							Вопрос.ТипЗначения.СодержитТип(Тип("Число")) Тогда
							Если ЗначениеЗаполнено(ВыборкаОтветовИзОпроса.ТиповойОтвет) Тогда
								ОбъектXML.ЗаписатьТекст(XMLСтрока(ВыборкаОтветовИзОпроса.ТиповойОтвет));
								
							Иначе
								ОбъектXML.ЗаписатьТекст(" ");
								
							КонецЕсли;
							
						Иначе
							ОбъектXML.ЗаписатьТекст(Строка(ВыборкаОтветовИзОпроса.ТиповойОтвет));
							
						КонецЕсли;
					КонецЦикла;
					
				Иначе
					ОбъектXML.ЗаписатьТекст(" ");
					
				КонецЕсли;
			
			ОбъектXML.ЗаписатьКонецЭлемента(); // Значение
			
		ИначеЕсли ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.ОдинИзВариантовОтвета ИЛИ
			ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Булево ИЛИ
			ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета ИЛИ
			Вопрос.Предопределенный Тогда
			
			Если ВыборкаОтветовИзОпроса <> Неопределено Тогда
				
				Пока ВыборкаОтветовИзОпроса.НайтиСледующий(ВопросПоиска) Цикл
					ОбъектXML.ЗаписатьНачалоЭлемента("ВариантОтвета");
					
						Если ПустаяСтрока(ВыборкаОтветовИзОпроса.ТиповойОтвет) тогда
							ДобавитьПоле(ОбъектXML,"Ид", "00000000-0000-0000-0000-000000000000");
							
						Иначе
							Попытка
								ДобавитьПоле(ОбъектXML,"Ид", ВыборкаОтветовИзОпроса.ТиповойОтвет.УникальныйИдентификатор());
									
							Исключение
								ДобавитьПоле(ОбъектXML,"Ид", ЗначениеВСтрокуВнутр(ВыборкаОтветовИзОпроса.ТиповойОтвет));
									
							КонецПопытки
							
						КонецЕсли;
						
						Если ПустаяСтрока(ВыборкаОтветовИзОпроса.Ответ) Тогда
							ДобавитьПоле(ОбъектXML,"РазвернутыйОтвет", " ");
							
						Иначе
							ДобавитьПоле(ОбъектXML,"РазвернутыйОтвет", ВыборкаОтветовИзОпроса.Ответ);
							
						КонецЕсли;
					
					ОбъектXML.ЗаписатьКонецЭлемента(); // ВариантОтвета
				КонецЦикла;
				
			Иначе
				ОбъектXML.ЗаписатьНачалоЭлемента("ВариантОтвета");
				
					ДобавитьПоле(ОбъектXML,"Ид",				"00000000-0000-0000-0000-000000000000");
					ДобавитьПоле(ОбъектXML,"РазвернутыйОтвет",	" ");
				
				ОбъектXML.ЗаписатьКонецЭлемента(); // ВариантОтвета
				
			КонецЕсли;
			
		КонецЕсли;
	
	ОбъектXML.ЗаписатьКонецЭлемента(); // Вопрос
	
КонецПроцедуры // ДобавитьОтвет

Процедура ОбработкаЗапроса(Выборка, ОбъектXML);
	
	Разделы = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Разделы.Следующий() Цикл
		Вопросы = Разделы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если Разделы.КодРаздела = NULL Тогда
			РазделНаименование	= "";
			
		Иначе
			КодРаздела			= Строка(Число(Разделы.КодРаздела));
			РазделНаименование	= КодРаздела + Разделы.РазделНаименование;
			
		КонецЕсли;
		
		ЗаписатьРаздел(ОбъектXML, Разделы.Раздел, РазделНаименование);
		
		// теперь обходим вопросы
		Пока Вопросы.Следующий() Цикл
			ЗаписатьВопрос(ОбъектXML, Вопросы, Ложь);
		КонецЦикла;
		
		ОбъектXML.ЗаписатьКонецЭлемента();
	КонецЦикла;
	
КонецПроцедуры // ОбработкаЗапроса()

Функция ВыгрузитьАнкетуВXML(Анкета, ИмяФайла = "", ОпрашиваемоеЛицо, ДокРассылки, ДокОпрос = Неопределено) Экспорт
	
	Если Анкета = Неопределено ИЛИ Анкета.Пустая() Тогда
		Возврат ""; // Нечего выгружать!
	КонецЕсли;
	
	Выборка		= ВыполнитьЗапросПоАнкете(Анкета);
	XML			= Новый ЗаписьXML();
	XML.Отступ	= Истина;
	
	Если ПустаяСтрока(ИмяФайла) Тогда
		XML.УстановитьСтроку("UTF-8"); //16
		
	Иначе
		XML.ОткрытьФайл(ИмяФайла, "UTF-8");
		
	КонецЕсли;
	
	XML.ЗаписатьОбъявлениеXML();
	
	XML.ЗаписатьИнструкциюОбработки("xml-stylesheet","type=""text/xsl"" href=""style.xsl""");
	
	XML.ЗаписатьНачалоЭлемента("Заголовок");
	
		ДобавитьПоле(XML,"ДатаФормирования",	XMLСтрока(ТекущаяДата()));
		ДобавитьПоле(XML,"ВерсияФормата",		"1.1");
		ДобавитьПоле(XML,"ИдОпрашиваемого",		ЗначениеВСтрокуВнутр(ОпрашиваемоеЛицо));
		
		XML.ЗаписатьНачалоЭлемента("Анкета");
		
			ДобавитьПоле(XML,"Ид",					Анкета.УникальныйИдентификатор());
			ДобавитьПоле(XML,"Наименование",		Анкета.НаименованиеАнкеты);
			ДобавитьПоле(XML,"Комментарий",			Анкета.Вступление);
			Если ДокРассылки <> Неопределено Тогда
				ДобавитьПоле(XML,"ИдРассылки",		ДокРассылки.УникальныйИдентификатор());
			КонецЕсли;
			ОбработкаЗапроса(Выборка, XML);
		
		XML.ЗаписатьКонецЭлемента(); // Анкета
		
		XML.ЗаписатьНачалоЭлемента("РезультатОпроса");
		
			ДобавитьПоле(XML,"ДатаЗаполненияАнкеты",	XMLСтрока(?(ЗначениеЗаполнено(ДокОпрос), ДокОпрос.Дата, "")));
			ДобавитьПоле(XML,"ИдАнкеты",				Анкета.УникальныйИдентификатор());
			ДобавитьПоле(XML,"Наименование",			Анкета.НаименованиеАнкеты);
			Если ДокРассылки <> Неопределено Тогда
				ДобавитьПоле(XML,"ИдРассылки",			ДокРассылки.УникальныйИдентификатор());
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДокОпрос) Тогда
				
				ВыборкаОтветовИзОпроса = ВыполнитьЗапросПоОпросу(ДокОпрос).Выбрать();
				
			Иначе
				Если Анкета.ЗаполнятьАнкетуДанными Тогда
					ВыборкаОтветовИзОпроса = ВыполнитьЗапросПоДанным(ОпрашиваемоеЛицо, Анкета);
					
				Иначе
					ВыборкаОтветовИзОпроса = Неопределено;
					
				КонецЕсли;
				
			КонецЕсли;
			
			ВыборкаВопросовДляОтветов = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Вопрос");
			Пока ВыборкаВопросовДляОтветов.Следующий() Цикл
				
				Если ВыборкаВопросовДляОтветов.ТипОтветаНаВопрос <> Перечисления.ТипыОтветаНаВопросАнкеты.Табличный Тогда
					ДобавитьОтвет(XML, ВыборкаВопросовДляОтветов.Вопрос, ВыборкаВопросовДляОтветов.ТипОтветаНаВопрос, ВыборкаОтветовИзОпроса);
					
				Иначе
					XML.ЗаписатьНачалоЭлемента("Вопрос");
					
						ДобавитьПоле(XML,"Ид", ВыборкаВопросовДляОтветов.Вопрос.УникальныйИдентификатор());
						Для НомерСтрокиТаблицы = 1 По ВыборкаВопросовДляОтветов.СтрокВТаблице Цикл
							
							XML.ЗаписатьНачалоЭлемента("СтрокаТаблицы");
							
								ДобавитьПоле(XML,"НомерСтроки", НомерСтрокиТаблицы);
								ВыборкаКолонокДляОтветов = ВыборкаВопросовДляОтветов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "КолонкаТаблицы");
								Пока ВыборкаКолонокДляОтветов.Следующий() Цикл
									ДобавитьОтвет(XML, ВыборкаКолонокДляОтветов.КолонкаТаблицы, ВыборкаКолонокДляОтветов.КолонкаТаблицыТипОтветаНаВопрос, ВыборкаОтветовИзОпроса, ВыборкаВопросовДляОтветов.Вопрос, НомерСтрокиТаблицы);
								КонецЦикла;
							
							XML.ЗаписатьКонецЭлемента(); // СтрокаТаблицы
							
						КонецЦикла;
					
					XML.ЗаписатьКонецЭлемента(); // Вопрос
					
				КонецЕсли;
			КонецЦикла;
		
		XML.ЗаписатьКонецЭлемента(); // РезультатОпроса
	
	XML.ЗаписатьКонецЭлемента(); // Заголовок
	
	Если ЗначениеЗаполнено(ИмяФайла) Тогда
		XML.Закрыть();
		
	Иначе
		Возврат (XML.Закрыть());
		
	КонецЕсли;
	
КонецФункции // ВыгрузитьАнкетуВXML()

Функция ПолучитьИмяФайлаАнкеты(ТиповаяАнкета) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Анкета",	ТиповаяАнкета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТиповыеАнкеты.Код
	|ИЗ
	|	Справочник.ТиповыеАнкеты КАК ТиповыеАнкеты
	|ГДЕ
	|	ТиповыеАнкеты.Ссылка = &Анкета";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат "anketa"+Число(Выборка.Код)+".xml";
	
КонецФункции // ПолучитьИмяФайлаАнкеты()

Функция СформироватьВложение(ТиповаяАнкета, ОпрашиваемоеЛицо = Неопределено, ЭлектронныйАдресОтветов = "", ДокРассылки = Неопределено, ДокОпрос = Неопределено, ИмяФайла = "", ФормироватьXSL = Ложь, КаталогАнкеты = "", КаталогОпроса = "") Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Анкета",	ТиповаяАнкета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК КоличествоВопросовВРазделе,
	|	ТиповыеАнкетыВопросыАнкеты.Раздел,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос
	|ИЗ
	|	Справочник.ТиповыеАнкеты.ВопросыАнкеты КАК ТиповыеАнкетыВопросыАнкеты
	|ГДЕ
	|	ТиповыеАнкетыВопросыАнкеты.Ссылка = &Анкета
	|
	|СГРУППИРОВАТЬ ПО
	|	ТиповыеАнкетыВопросыАнкеты.Раздел,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(*) > 1";
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Сообщить("Вопрос """+Выборка.Вопрос + """ встречается в разделе """ + Выборка.Раздел + """ более одного раза!");
	КонецЦикла;
	
	Если НЕ Выборка.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
		
	Если НЕ ЗначениеЗаполнено(ИмяФайла) тогда
		ИмяФайла = ПолучитьИмяФайлаАнкеты(ТиповаяАнкета);
	КонецЕсли;
	
	ИмяФайлаПреобразования = "style.xsl";
	ФайлАнкеты			= Новый Файл(ИмяФайла);
	ТекстXSL			= Новый ТекстовыйДокумент;
	Преобразование		= Новый ПреобразованиеXSL;
	
	Если ФормироватьXSL Тогда
		ТекстXSL = Анкетирование.СформироватьXSL(ИмяФайла, КаталогАнкеты, КаталогОпроса, ДокОпрос = Неопределено, ЭлектронныйАдресОтветов <> "e-mail ответов", ЭлектронныйАдресОтветов);
		ТекстXSL.Записать(КаталогВременныхФайлов()+ИмяФайлаПреобразования);
	КонецЕсли;
	
	ВыгрузитьАнкетуВXML(ТиповаяАнкета, КаталогВременныхФайлов() + ИмяФайла, ОпрашиваемоеЛицо, ДокРассылки, ДокОпрос);
	
	Возврат Истина;
	
КонецФункции // СформироватьВложение()

#Если Клиент Тогда

Процедура ОткрытьВложение(ТиповаяАнкета) Экспорт
	
	Если СформироватьВложение(ТиповаяАнкета, , "e-mail ответов", , , , Истина) тогда
		ИмяФайла = ПолучитьИмяФайлаАнкеты(ТиповаяАнкета);
		ЗапуститьПриложение("explorer " + КаталогВременныхФайлов() + ИмяФайла);
	КонецЕсли;
	
КонецПроцедуры // ОткрытьВложение()

#КонецЕсли
