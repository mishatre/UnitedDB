////////////////////////////////////////////////////////////////////////////////
// Подсистема "Обмен данными"
// 
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Определяет список планов обмена, которые используют функционал подсистемы обмена данными.
//
// Параметры:
// ПланыОбменаПодсистемы. Тип: Массив.
// Массив планов обмена конфигурации, которые используют функционал подсистемы обмена данными.
// Элементами массива являются объекты метаданных планов обмена.
//
// Пример тела процедуры:
//
// ПланыОбменаПодсистемы.Добавить(Метаданные.ПланыОбмена.ОбменБезИспользованияПравилКонвертации);
// ПланыОбменаПодсистемы.Добавить(Метаданные.ПланыОбмена.ОбменСБиблиотекойСтандартныхПодсистем);
// ПланыОбменаПодсистемы.Добавить(Метаданные.ПланыОбмена.РаспределеннаяИнформационнаяБаза);
//
Процедура ПолучитьПланыОбмена(ПланыОбменаПодсистемы) Экспорт
	
	ПланыОбменаПодсистемы.Добавить(Метаданные.ПланыОбмена.ОбменУправлениеТорговлей103БухгалтерияПредприятия30);
	ПланыОбменаПодсистемы.Добавить(Метаданные.ПланыОбмена.ОбменРозницаУправлениеТорговлей103);
	
КонецПроцедуры

// Обработчик при выгрузке данных.
// Используется для переопределения стандартной обработки выгрузки данных.
// В данном обработчике должна быть реализована логика выгрузки данных:
// выборка данных для выгрузки, сериализация данных в файл сообщения или сериализация данных в поток.
// После выполнения обработчика выгруженные данные будут отправлены получателю подсистемой обмена данными.
// Формат сообщения для выгрузки может быть произвольным.
// В случае ошибок при отправке данных следует прерывать выполнение обработчика
// методом ВызватьИсключение с описанием ошибки.
//
// Параметры:
//
// СтандартнаяОбработка. Тип: Булево.
// В данный параметр передается признак выполнения стандартной (системной) обработки события.
// Если в теле процедуры-обработчика установить данному параметру значение Ложь, стандартная
// обработка события производиться не будет. Отказ от стандартной обработки не отменяет действие.
// Значение по умолчанию: Истина.
//
// Получатель (только для чтения). Тип: ПланОбменаСсылка.
// Узел плана обмена, для которого выполняется выгрузка данных.
//
// ИмяФайлаСообщения (только для чтения). Тип: Строка.
// Имя файла, в который необходимо выполнить выгрузку данных. Если этот параметр заполнен, то система ожидает,
// что данные будут выгружены в файл. После выгрузки система выполнит отправку данных из этого файла.
// Если параметр пустой, то система ожидает, что данные будут выгружены в параметр ДанныеСообщения.
//
// ДанныеСообщения. Тип: Произвольный.
// Если параметр ИмяФайлаСообщения пустой, то система ожидает, что данные будут выгружены в этот параметр.
//
// КоличествоЭлементовВТранзакции (только для чтения). Тип: Число.
// Определяет максимальное число элементов данных, которые помещаются в сообщение в рамках одной транзакции базы данных.
// При необходимости в обработчике следует реализовать логику установки транзакционных блокировок на выгружаемые данные.
// Значение параметра задается в настройках подсистемы обмена данными.
//
// ИмяСобытияЖурналаРегистрации (только для чтения). Тип: Строка.
// Имя события журнала регистрации текущего сеанса обмена данными. Используется для записи в журнал регистрации 
// данных (ошибок, предупреждений, информации) с заданным именем события.
// Соответствует параметру ИмяСобытия метода глобального контекста ЗаписьЖурналаРегистрации.
//
// КоличествоОтправленныхОбъектов. Тип: Число.
// Счетчик отправленных объектов. Используется для определения количества отправленных объектов
// для последующей фиксации в протоколе обмена.
//
Процедура ПриВыгрузкеДанных(СтандартнаяОбработка,
								Получатель,
								ИмяФайлаСообщения,
								ДанныеСообщения,
								КоличествоЭлементовВТранзакции,
								ИмяСобытияЖурналаРегистрации,
								КоличествоОтправленныхОбъектов
	) Экспорт
	
КонецПроцедуры

// Обработчик при загрузке данных.
// Используется для переопределения стандартной обработки загрузки данных.
// В данном обработчике должна быть реализована логика загрузки данных:
// необходимые проверки перед загрузкой данных, сериализация данных из файла сообщения или сериализация данных из потока.
// Формат сообщения для загрузки может быть произвольным.
// В случае ошибок при получении данных следует прерывать выполнение обработчика
// методом ВызватьИсключение с описанием ошибки.
//
// Параметры:
//
// СтандартнаяОбработка. Тип: Булево.
// В данный параметр передается признак выполнения стандартной (системной) обработки события.
// Если в теле процедуры-обработчика установить данному параметру значение Ложь, стандартная обработка события производиться не будет.
// Отказ от стандартной обработки не отменяет действие.
// Значение по умолчанию: Истина.
//
// Отправитель (только для чтения). Тип: ПланОбменаСсылка.
// Узел плана обмена, для которого выполняется загрузка данных.
//
// ИмяФайлаСообщения (только для чтения). Тип: Строка.
// Имя файла, из которого требуется выполнить загрузку данных. Если параметр не заполнен, то данные для загрузки
// передаются через параметр ДанныеСообщения.
//
// ДанныеСообщения. Тип: Произвольный.
// Параметр содержит данные, которые необходимо загрузить. Если параметр ИмяФайлаСообщения пустой,
// то данные для загрузки передаются через этот параметр.
//
// КоличествоЭлементовВТранзакции (только для чтения). Тип: Число.
// Определяет максимальное число элементов данных, которые читаются из сообщения и записываются в базу данных
// в рамках одной транзакции. При необходимости в обработчике следует реализовать логику записи данных в транзакции.
// Значение параметра задается в настройках подсистемы обмена данными.
//
// ИмяСобытияЖурналаРегистрации (только для чтения). Тип: Строка.
// Имя события журнала регистрации текущего сеанса обмена данными. Используется для записи в журнал регистрации
// данных (ошибок, предупреждений, информации) с заданным именем события.
// Соответствует параметру ИмяСобытия метода глобального контекста ЗаписьЖурналаРегистрации.
//
// КоличествоПолученныхОбъектов. Тип: Число.
// Счетчик полученных объектов. Используется для определения количества загруженных объектов
// для последующей фиксации в протоколе обмена.
//
Процедура ПриЗагрузкеДанных(СтандартнаяОбработка,
								Отправитель,
								ИмяФайлаСообщения,
								ДанныеСообщения,
								КоличествоЭлементовВТранзакции,
								ИмяСобытияЖурналаРегистрации,
								КоличествоПолученныхОбъектов
	) Экспорт
	
КонецПроцедуры

// Обработчик регистрации изменений для начальной выгрузки данных.
// Используется для переопределения стандартной обработки регистрации изменений.
// При стандартной обработке будут зарегистрированы изменения всех данных из состава плана обмена.
// Если для плана обмена предусмотрены фильтры ограничения миграции данных,
// то использование этого обработчика позволит повысить производительность начальной выгрузки данных.
// В обработчике следует реализовать регистрацию изменений с учетом фильтров ограничения миграции данных.
// Если для плана обмена используются ограничения миграции по дате или по дате и организациям,
// то можно воспользоваться универсальной процедурой ОбменДаннымиСервер.ЗарегистрироватьДанныеПоДатеНачалаВыгрузкиИОрганизациям.
// Обработчик используется только для универсального обмена данными с использованием правли обмена
// и для универсального обмена данными без правил обмена и не используется для обменов в РИБ.
// Использование обработчика позволяет повысить производительность
// начальной выгрузки данных в среднем в 2-4 раза.
//
// Параметры:
//
// Получатель. Тип: ПланОбменаСсылка. Узел плана обмена, в который требуется выгрузить данные.
//
// СтандартнаяОбработка. Тип: Булево.
// В данный параметр передается признак выполнения стандартной (системной) обработки события.
// Если в теле процедуры-обработчика установить данному параметру значение Ложь, стандартная обработка события производиться не будет.
// Отказ от стандартной обработки не отменяет действие.
// Значение по умолчанию: Истина.
//
Процедура РегистрацияИзмененийНачальнойВыгрузкиДанных(Знач Получатель, СтандартнаяОбработка, Отбор) Экспорт
	
КонецПроцедуры

// Возвращает префикс кодов и номеров объектов информационной базы по умолчанию
//
// Параметры:
//  Нет.
// 
// Возвращаемое значение:
//  Строка, 2 - префикс кодов и номеров объектов информационной базы по умолчанию
//
Функция ПрефиксИнформационнойБазыПоУмолчанию() Экспорт
	
	Возврат НСтр("ru = 'УТ'");
	
КонецФункции

// Обработчик вызывается перед записью объекта при загрузке данных в универсальном обмене данными
//
Процедура ПередЗаписьюОбъекта(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Обработчик механизма регистрации объектов "После определения получателей".
// Событие возникает в транзакции записи данных в ИБ, когда определены 
// получатели изменений данных по правилам регистрации объектов.
//
// Параметры:
// Данные. Записываемый объект, представляющий данные - документ, элемент справочника,
// счет бухгалтерского учета, менеджер записи константы, набор записей регистра и т. п.
//
// Получатели. Тип: Массив. Массив узлов планов обмена на которых будут зарегистрированы изменения текущих данных.
//
// ИмяПланаОбмена. Тип: Строка. Имя плана обмена, как объекта метаданных,
// для которого выполняются правила регистрации объектов.
//
Процедура ПослеОпределенияПолучателей(Данные, Получатели, Знач ИмяПланаОбмена) Экспорт
	
	
КонецПроцедуры
