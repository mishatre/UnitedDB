
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Для Каждого ТекСтрокаЗаявки Из Заявки Цикл
		// регистр амбЗаявкиНаПоставку Расход
		Если не ТекСтрокаЗаявки.Группа тогда
			Движение = Движения.амбЗаявкиНаПоставку.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.МенеджерНаправления = Менеджер;
			Движение.Номенклатура = ТекСтрокаЗаявки.Номенклатура;
			Движение.Менеджер = ТекСтрокаЗаявки.Менеджер;
			Движение.Заявка = ТекСтрокаЗаявки.Заявка;
			Движение.Количество = ТекСтрокаЗаявки.КоличествоПриходит;
			ПровестиЗаявку(ТекСтрокаЗаявки.Заявка);
		КонецЕсли;
	КонецЦикла;
	//Если проведение оперативное, то создадим задачу для пользователя, пославшего задачу.
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//Проверим Является ли текущий пользователь менеджером направления...
	Если не (ПараметрыСеанса.ТекущийПользователь = Менеджер или Елисеев.ЭтоСуперпользователь()) тогда	
		Отказ = Истина;
		Сообщить("Только менеджер направления может изменять документ!!!");
	КонецЕсли;
		
КонецПроцедуры

Функция ПровестиЗаявку (Заявка)
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	амбЗадачиПользователя.Ссылка
	|ИЗ
	|	Задача.амбЗадачиПользователя КАК амбЗадачиПользователя
	|ГДЕ
	|	амбЗадачиПользователя.Заявка = &Заявка
	|	И амбЗадачиПользователя.Выполнена = ЛОЖЬ
	|	И амбЗадачиПользователя.ВидЗадачи = &ВидЗадачи";

	Запрос.УстановитьПараметр("Заявка", Заявка );
	Запрос.УстановитьПараметр("ВидЗадачи", Перечисления.амбВидыЗадач.Заявка);

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();

	Пока Выборка.Следующий() Цикл
		Выборка.Ссылка.ПолучитьОбъект().ВыполнитьЗадачу();
	КонецЦикла;
	 
КонецФункции	
