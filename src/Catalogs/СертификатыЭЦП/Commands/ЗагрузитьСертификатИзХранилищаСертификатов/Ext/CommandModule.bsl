
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ВыполнятьКриптооперацииНаСервере = ЭлектронныеДокументыСлужебныйВызовСервера.ВыполнятьКриптооперацииНаСервере();
	
	Если ВыполнятьКриптооперацииНаСервере Тогда
		Если Не ЭлектронныеДокументыСлужебныйВызовСервера.ЕстьКриптосредстваНаСервере() Тогда
			Возврат;
		КонецЕсли;
		МассивСтруктурЛичныхСертификатов = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьМассивСтруктурСертификатов(Истина);
	Иначе
			
		Если НЕ ПодключитьРасширениеРаботыСКриптографией() Тогда
			Если НЕ ЭлектронныеДокументыСлужебныйКлиент.УстановитьРасширениеРаботыСКриптографиейНаКлиенте() Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Попытка
			МенеджерКриптографии = ЭлектроннаяЦифроваяПодписьКлиент.ПолучитьМенеджерКриптографии();
		Исключение
			ТекстСообщения = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьСообщениеОбОшибке("100");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецПопытки;
	
		МассивСтруктурЛичныхСертификатов = ЭлектроннаяЦифроваяПодписьКлиент.ПолучитьМассивСтруктурСертификатов(Истина); // только личные
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("МассивСтруктурСертификатов", МассивСтруктурЛичныхСертификатов);
	ПараметрыФормы.Вставить("ЗагрузкаСертификата", Истина);
	СтруктураВозврата = ОткрытьФормуМодально("ОбщаяФорма.ВыборСертификата", ПараметрыФормы);
	
	Если ТипЗнч(СтруктураВозврата) = Тип("Структура") Тогда
		
		Отпечаток = СтруктураВозврата.Отпечаток;
		Если ВыполнятьКриптооперацииНаСервере Тогда
			СтруктураСертификата = ЭлектронныеДокументыСлужебныйВызовСервера.ЗаполнитьСтруктуруСертификатаПоОтпечатку(Отпечаток);
			ДвоичныеДанныеСертификата = ДвоичныеДанныеСертификата(Отпечаток);
		Иначе
			СтруктураСертификата = ЭлектроннаяЦифроваяПодписьКлиент.ЗаполнитьСтруктуруСертификатаПоОтпечатку(Отпечаток);
			Сертификат = ЭлектроннаяЦифроваяПодписьКлиент.ПолучитьСертификатПоОтпечатку(Отпечаток, Истина); // только личные
			ДвоичныеДанныеСертификата = Сертификат.Выгрузить();
		КонецЕсли;
		
		СтруктураСертификата.Вставить("ДвоичныеДанныеСертификата", ДвоичныеДанныеСертификата);
		
		Организация = Неопределено;
		
		ЭлектронныеДокументыСлужебныйВызовСервера.ОпределитьОрганизацию(Организация);
		
		Если НЕ ЗначениеЗаполнено(Организация) Тогда
			Организация = ОткрытьФормуМодально("Справочник.СертификатыЭЦП.Форма.ВыборОрганизации");
		КонецЕсли;
		
		НазваниеСправочникаОрганизации = ИмяПрикладногоСправочника("Организации");
		Если Не ЗначениеЗаполнено(НазваниеСправочникаОрганизации) Тогда
			НазваниеСправочникаОрганизации = "Организации";
		КонецЕсли;
				
		Если ТипЗнч(Организация) = Тип("СправочникСсылка." + НазваниеСправочникаОрганизации) 
															И ЗначениеЗаполнено(Организация) Тогда
			СтруктураСертификата.Вставить("Организация", Организация);
		Иначе
			Возврат;
		КонецЕсли;
		
		ОписаниеОшибки = "";
		СсылкаНаОбъект = ЭлектронныеДокументыСлужебныйВызовСервера.ЗагрузитьСертификат(СтруктураСертификата, ОписаниеОшибки);
		Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
			Предупреждение(ОписаниеОшибки);
			Возврат;
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура("Ключ", СсылкаНаОбъект);
		ОткрытьФорму("Справочник.СертификатыЭЦП.Форма.ФормаЭлемента", ПараметрыФормы);
		ОповеститьОбИзменении(СсылкаНаОбъект);
		Оповестить("ОбновитьСписокСертификатов");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ИмяПрикладногоСправочника(Название)
	
	Возврат ЭлектронныеДокументыПовтИсп.ПолучитьИмяПрикладногоСправочника(Название);
	
КонецФункции

&НаСервере
Функция ДвоичныеДанныеСертификата(Отпечаток)
	
	Сертификат = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьСертификатПоОтпечатку(Отпечаток, Истина);
	Возврат Сертификат.Выгрузить();
	
КонецФункции
