#Если Клиент Тогда

Перем СписокРеквизитовДиаграммыОбъекта;

Перем НастройкиДиаграммы Экспорт;

// Процедура указывает источник данных, по которым надо строить диаграмму.
//
// Параметры
//  Диаграмма - ЭУ диаграмма
//
Процедура ПостроитьДиаграмму(Диаграмма) Экспорт

	Диаграмма.ИсточникДанных = ТаблицаИсходныхДанных;
	Диаграмма.ОбластьЗаголовка.Текст = ИмяДиаграммы;
	
	Если Диаграмма.КоличествоСерий > 8 Тогда
		
		ЦветаСерий = ПолучитьМакет("Макет").ПолучитьОбласть("ЦветаСерий");
		МассивЦветовСерий = Новый Массив;
		Для Сч = 1 По ЦветаСерий.ВысотаТаблицы Цикл
			МассивЦветовСерий.Добавить(ЦветаСерий.Область(Сч, 2).ЦветФона);
		КонецЦикла;
		
		Инд = 0;
		Для каждого Серия Из Диаграмма.Серии Цикл
			Если НЕ Серия.СводнаяСерия Тогда
				Серия.Цвет = МассивЦветовСерий[ Инд - Цел(Инд/МассивЦветовСерий.Количество())* МассивЦветовСерий.Количество()];
			КонецЕсли;
			Инд = Инд+1;
		КонецЦикла; 
		
	КонецЕсли;

КонецПроцедуры

// Процедура заполняет значениями реквизиты отчета, значения берутся
// из соответствующих свойств диаграммы
//
// Параметры
//  Диаграмма - ЭУ диаграмма
//
Процедура ЗаполнитьЗначенияКонтролов(Диаграмма) Экспорт

	Для каждого ЭлементСписка Из СписокРеквизитовДиаграммыОбъекта Цикл
		Если ЭлементСписка.Значение = "ВертикальныеМетки" Тогда
			ЭтотОбъект[ЭлементСписка.Значение] = Диаграмма.ОбластьПостроения[ЭлементСписка.Представление];
		Иначе
			ЭтотОбъект[ЭлементСписка.Значение] = Диаграмма[ЭлементСписка.Представление];
		КонецЕсли; 
	КонецЦикла;
	
	Если ОграничениеСерий = МаксимумСерий.Ограничено Тогда
		КоличествоОграничения = Диаграмма.МаксимумСерийКоличество;
	ИначеЕсли ОграничениеСерий = МаксимумСерий.Процент Тогда
		КоличествоОграничения = Диаграмма.МаксимумСерийПроцент;
	Иначе
		КоличествоОграничения             = 0;
		Диаграмма.МаксимумСерийКоличество = 0;
		Диаграмма.МаксимумСерийПроцент    = 0;
	КонецЕсли; 
	
КонецПроцедуры

// Процедура заполняет свойства диаграммы, соответствующими
// значениями из структуры, которую сохраняет пользователь
//
// Параметры
//  Диаграмма - ЭУ диаграмма
//
Процедура ЗаполнитьНастройкиДиаграммы(Диаграмма) Экспорт

	Если ТипЗнч(НастройкиДиаграммы) = Тип("Структура") Тогда
		Для каждого ЭлементСтруктуры Из НастройкиДиаграммы Цикл
			Если ЭлементСтруктуры.Ключ = "ВертикальныеМетки" Тогда
				Диаграмма.ОбластьПостроения[ЭлементСтруктуры.Ключ] = ЭлементСтруктуры.Значение;
			Иначе
				Диаграмма[ЭлементСтруктуры.Ключ] = ЭлементСтруктуры.Значение;
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 

КонецПроцедуры

// Процедура заполняет свойства диаграммы, соответствующими
// значениями из реквизитов отчета
//
// Параметры
//  Диаграмма - ЭУ диаграмма
//
Процедура УстановитьСвойстваДиаграммы(Диаграмма) Экспорт
	
	Диаграмма.ОбластьЗаголовка.Текст = ИмяДиаграммы;
	
	Диаграмма.ТипДиаграммы = ТекущийТипДиаграммы;
	
	Диаграмма.ВидПодписей             = ВидПодписиКруговойДиаграммы;
	Диаграмма.МаксимумСерий           = ОграничениеСерий;
	Диаграмма.МаксимумСерийКоличество = КоличествоОграничения;
	Диаграмма.МаксимумСерийПроцент    = КоличествоОграничения;
	Диаграмма.ОтображатьЛегенду       = Легенда;
	Диаграмма.РежимПробелов           = РежимПробелов;
	Диаграмма.БазовоеЗначение         = БазовоеЗначение;
	Диаграмма.АвтоРаздвижениеСерий    = АвтоматическоеРаздвижениеСекторов;
	Диаграмма.Окантовка               = Окантовка;
	Диаграмма.Свет                    = Свет;
	Диаграмма.Градиент                = Градиент;
	Диаграмма.Ориентация              = Ориентация;
	Диаграмма.СерииВСтроках           = СерииВСтроках;
	
	Диаграмма.ОбластьПостроения.ВертикальныеМетки = ВертикальныеМетки;
	
КонецПроцедуры

// Получает диаграмму в печатном виде
//
// Параметры:
//	Нет.
//
Процедура ПолучитьДиаграммуНаПечать(ДокументРезультат) Экспорт
	
	Если ТипЗнч(ДокументРезультат) <> Тип("ТабличныйДокумент") Тогда
		ДокументРезультат = Новый ТабличныйДокумент;
	КонецЕсли;
	
	ДокументРезультат.Очистить();
	ДокументРезультат.Вывести(ПолучитьМакет("Макет"));

	ДиаграммаПечати = ДокументРезультат.Рисунки.Диаграмма.Объект;
	
	ПостроитьДиаграмму(ДиаграммаПечати);
	УстановитьСвойстваДиаграммы(ДиаграммаПечати);
	
	ДокументРезультат.Показать();

КонецПроцедуры // ПолучитьДиаграммуНаПечать()

СписокРеквизитовДиаграммыОбъекта = Новый СписокЗначений;
СписокРеквизитовДиаграммыОбъекта.Добавить("ВидПодписиКруговойДиаграммы"      , "ВидПодписей");
СписокРеквизитовДиаграммыОбъекта.Добавить("ОграничениеСерий"                 , "МаксимумСерий");
СписокРеквизитовДиаграммыОбъекта.Добавить("ТекущийТипДиаграммы"              , "ТипДиаграммы");
СписокРеквизитовДиаграммыОбъекта.Добавить("Легенда"                          , "ОтображатьЛегенду");
СписокРеквизитовДиаграммыОбъекта.Добавить("РежимПробелов"                    , "РежимПробелов");
СписокРеквизитовДиаграммыОбъекта.Добавить("БазовоеЗначение"                  , "БазовоеЗначение");
СписокРеквизитовДиаграммыОбъекта.Добавить("АвтоматическоеРаздвижениеСекторов", "АвтоРаздвижениеСерий");
СписокРеквизитовДиаграммыОбъекта.Добавить("Окантовка"                        , "Окантовка");
СписокРеквизитовДиаграммыОбъекта.Добавить("Свет"                             , "Свет");
СписокРеквизитовДиаграммыОбъекта.Добавить("Градиент"                         , "Градиент");
СписокРеквизитовДиаграммыОбъекта.Добавить("Ориентация"                       , "Ориентация");
СписокРеквизитовДиаграммыОбъекта.Добавить("СерииВСтроках"                    , "СерииВСтроках");
СписокРеквизитовДиаграммыОбъекта.Добавить("ВертикальныеМетки"                , "ВертикальныеМетки");

СерииВСтроках = Истина;
#КонецЕсли
