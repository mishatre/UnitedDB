Перем мСписокВозможныхРеквизитов Экспорт;
Перем мРеквизитыКонтрольУникальности Экспорт;

Перем мЭтоНеНовый;

// Обработчик события элемента ПриКопировании.
//
Процедура ПриКопировании(ОбъектКопирования)

	Если Не ЭтоГруппа Тогда
		ЕдиницаХраненияОстатков = Неопределено;
		ЕдиницаДляОтчетов       = Неопределено;
		ЕдиницаИзмеренияМест    = Неопределено;
		ОсновноеИзображение     = Неопределено;
		НазначениеИспользования = Неопределено;
	КонецЕсли;
	
КонецПроцедуры // ПриКопировании()

// Обработчик события ПередЗаписью формы.
//
Процедура ПередЗаписью(Отказ)

	Если мЭтоНеНовый = Неопределено Тогда
		мЭтоНеНовый = Не ЭтоНовый();
	КонецЕсли;

	Если Не ОбменДанными.Загрузка И Не ЭтоГруппа Тогда
		Если Не Услуга И НЕ ЗначениеЗаполнено(БазоваяЕдиницаИзмерения) Тогда
			#Если Клиент Тогда
			РаботаСДиалогами.СообщитьПользователюНезаполненРеквизит(Ссылка, "базовая единица");
			#КонецЕсли
			Отказ = Истина;
		Иначе
			// Надо проверить владельца единицы хранения остатков.
			Если ЗначениеЗаполнено(ЕдиницаХраненияОстатков)
			   И ЕдиницаХраненияОстатков.Владелец <> Ссылка Тогда
				ТекстСообщения = "У единицы хранения остатков номенклатуры """ + СокрЛП(Ссылка) + """ неверно указан владелец!";
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
			КонецЕсли;
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(ЕдиницаДляОтчетов) Тогда
			ЕдиницаДляОтчетов = ЕдиницаХраненияОстатков;
		КонецЕсли;

		// Надо проверить владельца единицы для отчетов.
		Если ЗначениеЗаполнено(ЕдиницаДляОтчетов)
		   И ЕдиницаДляОтчетов.Владелец <> Ссылка Тогда
			ТекстСообщения = "У единицы для отчетов номенклатуры """ + СокрЛП(Ссылка) + """ неверно указан владелец!";
			ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
		КонецЕсли;

		Если мЭтоНеНовый Тогда
			СуществуютСсылки = Неопределено;

			Если Не Услуга И Ссылка.ЕдиницаХраненияОстатков <> ЕдиницаХраненияОстатков И ПолныеПрава.Номенклатура_СуществуютСсылки(Ссылка, СуществуютСсылки) Тогда
				ТекстСообщения = "Единица """ + СокрЛП(Ссылка.ЕдиницаХраненияОстатков) + """ является единицей хранения остатков для """ + Наименование + """
				|и уже участвует в товародвижении. 
				|Изменить эту единицу уже нельзя!";
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
			КонецЕсли;

			Если (Услуга <> Ссылка.Услуга Или Комплект <> Ссылка.Комплект Или Набор <> Ссылка.Набор)
			   И ПолныеПрава.Номенклатура_СуществуютСсылки(Ссылка, СуществуютСсылки) Тогда
				ТекстСообщения = "Номенклатура """ + СокрЛП(Ссылка) + """ участвует в товародвижении.
				|Нельзя изменить тип номенклатуры (Услуга, товар, набор-комплект), если позиция номенклатуры участвует в товародвижении!";
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
			КонецЕсли;

			Если Не ВестиУчетПоСериям И Ссылка.ВестиУчетПоСериям И ПолныеПрава.Номенклатура_СуществуютСсылкиНаСерииВРегистрахНакопления(Ссылка) Тогда
				ТекстСообщения = "Номенклатура """ + СокрЛП(Ссылка) + """ участвует в товародвижении.
				|признак учета по сериям не может быть изменен!";
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
			КонецЕсли;
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(ВидНоменклатуры) Тогда
			#Если Клиент Тогда
			РаботаСДиалогами.СообщитьПользователюНезаполненРеквизит(Ссылка, "вид номенклатуры");
			#КонецЕсли
			Отказ = Истина;
		КонецЕсли;
		Если НЕ Отказ Тогда
			Если Не ВестиУчетПоСериям Тогда
				Если ЗначениеЗаполнено(НомерГТД) Тогда
					НомерГТД = Справочники.НомераГТД.ПустаяСсылка();
				КонецЕсли;

				Если ЗначениеЗаполнено(СтранаПроисхождения) Тогда
					СтранаПроисхождения = Справочники.КлассификаторСтранМира.ПустаяСсылка();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ПередЗаписью()
