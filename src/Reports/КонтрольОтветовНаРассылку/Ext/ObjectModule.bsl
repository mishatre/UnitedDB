#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "ТоварыНаСкладах";
	
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	// Описание исходного текста запроса.
	// При написании текста запроса рекомендуется следовать правилам, описанным в следующем шаблоне текста запроса:
	//
	//ВЫБРАТЬ // РАЗРЕШЕННЫЕ
	//	<ПсевдонимТаблицы.Поле> КАК <ПсевдонимПоля>,
	//	ПРЕДСТАВЛЕНИЕ(<ПсевдонимТаблицы>.<Поле>),
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//{ВЫБРАТЬ
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//ИЗ
	//	<Таблица> КАК <ПсевдонимТаблицы>
	//	//СОЕДИНЕНИЯ
	//{ГДЕ
	//	<ПсевдонимТаблицы.Поле>.* КАК <ПсевдонимПоля>,
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>,
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//{УПОРЯДОЧИТЬ ПО
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//УПОРЯДОЧИТЬ_СВОЙСТВА
	//	//УПОРЯДОЧИТЬ_КАТЕГОРИИ
	//}
	//ИТОГИ
	//	АГРЕГАТНАЯ_ФУНКЦИЯ(<ПсевдонимПоказателя>)
	//	//ИТОГИ_СВОЙСТВА
	//	//ИТОГИ_КАТЕГОРИИ
	//ПО
	//	ОБЩИЕ
	//{ИТОГИ ПО
	//	<ПсевдонимПоля>.*,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ФормированиеАнкетПолучатели.Объект КАК Объект,
		|	ПРЕДСТАВЛЕНИЕ(ФормированиеАнкетПолучатели.Объект),
		|	ВЫБОР
		|		КОГДА Опрос.Ссылка ЕСТЬ NULL 
		|			ТОГДА ""Не приславшие ответ""
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ПустыеОпросы.Ссылка = Опрос.Ссылка
		|					ТОГДА ""Прочие""
		|				ИНАЧЕ ""Приславшие ответ""
		|			КОНЕЦ
		|	КОНЕЦ КАК НаличиеОтвета,
		|	ФормированиеАнкетПолучатели.Получатель,
		|	ПРЕДСТАВЛЕНИЕ(ФормированиеАнкетПолучатели.Получатель),
		|	ФормированиеАнкетПолучатели.Ссылка КАК Рассылка,
		|	ПРЕДСТАВЛЕНИЕ(ФормированиеАнкетПолучатели.Ссылка) КАК РассылкаПредставление,
		|	Опрос.Ссылка КАК Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(Опрос.Ссылка),
		|	ВЫРАЗИТЬ(Опрос.Комментарий КАК СТРОКА(200)) КАК Комментарий
		|	//ПОЛЯ_СВОЙСТВА
		|	//ПОЛЯ_КАТЕГОРИИ
		|
		|{ВЫБРАТЬ
		|	Объект.*,
		|	НаличиеОтвета,
		|	Получатель,
		|	Рассылка.*,
		|	Ссылка.*,
		|	Комментарий
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}

		|
		|ИЗ
		|	Документ.ФормированиеАнкет.Получатели КАК ФормированиеАнкетПолучатели
		|		{ЛЕВОЕ СОЕДИНЕНИЕ Документ.Опрос КАК Опрос
		|		ПО (ФормированиеАнкетПолучатели.Объект = Опрос.ОпрашиваемоеЛицо
		|					И (ФормированиеАнкетПолучатели.Ссылка = &ПервичнаяРассылка
		|						ИЛИ ФормированиеАнкетПолучатели.Ссылка.ПервичнаяРассылка = &ПервичнаяРассылка)
		|				ИЛИ ФормированиеАнкетПолучатели.Объект = Опрос.ОпрашиваемоеЛицо
		|					И (ФормированиеАнкетПолучатели.Ссылка = &ПервичнаяРассылка
		|						ИЛИ ФормированиеАнкетПолучатели.Ссылка.ПервичнаяРассылка = &ПервичнаяРассылка))
		|			И ФормированиеАнкетПолучатели.Ссылка.Анкета = Опрос.ТиповаяАнкета}
		|		{ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ОпросВопросы.Ссылка КАК Ссылка
		|		ИЗ
		|			Документ.Опрос.Вопросы КАК ОпросВопросы
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ОпросВопросы.Ссылка КАК Ссылка
		|				ИЗ
		|					Документ.Опрос.Вопросы КАК ОпросВопросы
		|				ГДЕ
		|					ОпросВопросы.Ссылка.Рассылка = &ПервичнаяРассылка
		|					И (НЕ ОпросВопросы.ТиповойОтвет В (&СписокПустыхЗначений))) КАК НеПустыеОпросы
		|				ПО НеПустыеОпросы.Ссылка <> ОпросВопросы.Ссылка
		|		ГДЕ
		|			ОпросВопросы.Ссылка.Рассылка = &ПервичнаяРассылка) КАК ПустыеОпросы
		|		ПО ФормированиеАнкетПолучатели.Ссылка = ПустыеОпросы.Ссылка.Рассылка}
		|		//СОЕДИНЕНИЯ
		|ГДЕ
		|	ФормированиеАнкетПолучатели.Ссылка = &ПервичнаяРассылка
		|{ГДЕ
		|	ФормированиеАнкетПолучатели.Объект.*,
		|	ВЫБОР
		|			КОГДА Опрос.Ссылка ЕСТЬ NULL 
		|				ТОГДА ""Не приславшие ответ""
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ПустыеОпросы.Ссылка = Опрос.Ссылка
		|						ТОГДА ""Прочие""
		|					ИНАЧЕ ""Приславшие ответ""
		|				КОНЕЦ
		|		КОНЕЦ,
		|	ФормированиеАнкетПолучатели.Получатель,
		|	ФормированиеАнкетПолучатели.Ссылка.*,
		|	Опрос.Ссылка.*
		|	//УСЛОВИЯ_СВОЙСТВА
		|	//УСЛОВИЯ_КАТЕГОРИИ
		|}

		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ФормированиеАнкетПолучатели.Объект,
		|	ПРЕДСТАВЛЕНИЕ(ФормированиеАнкетПолучатели.Объект),
		|	ВЫБОР
		|		КОГДА Опрос.Ссылка ЕСТЬ NULL 
		|			ТОГДА ""Не приславшие ответ""
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ПустыеОпросы.Ссылка = Опрос.Ссылка
		|					ТОГДА ""Прочие""
		|				ИНАЧЕ ""Приславшие ответ""
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ФормированиеАнкетПолучатели.Получатель,
		|	ПРЕДСТАВЛЕНИЕ(ФормированиеАнкетПолучатели.Получатель),
		|	ФормированиеАнкетПолучатели.Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(ФормированиеАнкетПолучатели.Ссылка) КАК РассылкаПредставление,
		|	Опрос.Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(Опрос.Ссылка),
		|	ВЫРАЗИТЬ(Опрос.Комментарий КАК СТРОКА(200))
		|	//ПОЛЯ_СВОЙСТВА
		|	//ПОЛЯ_КАТЕГОРИИ
		|
		|ИЗ
		|	Документ.ФормированиеАнкет.Получатели КАК ФормированиеАнкетПолучатели
		|		{ЛЕВОЕ СОЕДИНЕНИЕ Документ.Опрос КАК Опрос
		|		ПО (ФормированиеАнкетПолучатели.Объект = Опрос.ОпрашиваемоеЛицо
		|					И ФормированиеАнкетПолучатели.Ссылка.ПервичнаяРассылка = &ПервичнаяРассылка
		|				ИЛИ ФормированиеАнкетПолучатели.Объект = Опрос.ОпрашиваемоеЛицо
		|					И ФормированиеАнкетПолучатели.Ссылка.ПервичнаяРассылка = &ПервичнаяРассылка
		|					И ФормированиеАнкетПолучатели.Ссылка.Анкета = Опрос.ТиповаяАнкета)}
		|		{ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ОпросВопросы.Ссылка КАК Ссылка
		|		ИЗ
		|			Документ.Опрос.Вопросы КАК ОпросВопросы
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ОпросВопросы.Ссылка КАК Ссылка
		|				ИЗ
		|					Документ.Опрос.Вопросы КАК ОпросВопросы
		|				ГДЕ
		|					ОпросВопросы.Ссылка.Рассылка.ПервичнаяРассылка = &ПервичнаяРассылка
		|					И (НЕ ОпросВопросы.ТиповойОтвет В (&СписокПустыхЗначений))) КАК НеПустыеОпросы
		|				ПО НеПустыеОпросы.Ссылка <> ОпросВопросы.Ссылка
		|		ГДЕ
		|			ОпросВопросы.Ссылка.Рассылка.ПервичнаяРассылка = &ПервичнаяРассылка) КАК ПустыеОпросы
		|		ПО (ФормированиеАнкетПолучатели.Ссылка = ПустыеОпросы.Ссылка.Рассылка
		|				ИЛИ ФормированиеАнкетПолучатели.Ссылка.ПервичнаяРассылка = ПустыеОпросы.Ссылка.Рассылка)}
		|		//СОЕДИНЕНИЯ
		|ГДЕ
		|	ФормированиеАнкетПолучатели.Ссылка.ПервичнаяРассылка = &ПервичнаяРассылка
		|
		|{УПОРЯДОЧИТЬ ПО
		|	Объект.*,
		|	НаличиеОтвета,
		|	Получатель,
		|	Рассылка.*,
		|	Ссылка.*
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}

		|
		|ИТОГИ 
		|ПО
		|	ОБЩИЕ
		|
		|{ИТОГИ ПО
		|	Объект.*,
		|	НаличиеОтвета,
		|	Получатель,
		|	Рассылка.*,
		|	Ссылка.*
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}

		|АВТОУПОРЯДОЧИВАНИЕ";
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( "ФормированиеАнкетПолучатели.Объект" , "Объект", "Опрашиваемое лицо", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ФизическиеЛица);

		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Объект", 			"Опрашиваемое лицо");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Получатель", 		"e-mail");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Ссылка", 			"Опрос");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НаличиеОтвета", 	"Наличие ответа");
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("НаличиеОтвета");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Рассылка");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Объект");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Объект");

	// Добавление предопределенных полей порядка отчета.
	// Необходимо вызывать для каждого добавляемого поля порядка.
	// УниверсальныйОтчет.ДобавитьПорядок(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьПорядок("НаличиеОтвета");
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДаннымРодитель>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>, <Размещение>, <Положение>);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("Получатель");
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("Ссылка");
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("Комментарий");
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	СписокПустыхЗначений = Новый СписокЗначений;
	ТипыПВХ = Метаданные.ПланыВидовХарактеристик.ВопросыДляАнкетирования.Тип.Типы();
	Для каждого ТипИзХарактеристики из ТипыПВХ Цикл
		СписокПустыхЗначений.Добавить(ОбщегоНазначения.ПустоеЗначениеТипа(ТипИзХарактеристики));
	КонецЦикла;
	СписокПустыхЗначений.Добавить(Неопределено);
	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("СписокПустыхЗначений",СписокПустыхЗначений);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ПервичнаяРассылка", ДокументРассылки);
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);

КонецПроцедуры // СформироватьОтчет()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;
УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли