
Перем ДокументСсылка Экспорт;
Перем Контрагент Экспорт;
Перем РасшифровкаПлатежаДок Экспорт;
Перем ОтражатьВБухгалтерскомУчете Экспорт;
Перем ВидОперацииДок Экспорт;
Перем ДатаДок Экспорт;
Перем ТипЗадолженности Экспорт;
Перем ИмяРегистраПлан Экспорт;
Перем КурсДокумента Экспорт;
Перем КратностьДокумента Экспорт;
Перем ФормаОплаты Экспорт;
Перем ВалютаДокумента Экспорт;
Перем БанковскийСчетКасса Экспорт;
Перем Организация Экспорт;
Перем ДоговорКонтрагента Экспорт;
Перем Сделка Экспорт;
Перем ДокументРасчетовСКонтрагентом Экспорт;
Перем Проект Экспорт;
Перем ВидОперацииПлан Экспорт;
Перем СтатьяДвиженияДенежныхСредств Экспорт;
Перем ВключенныеВПлатежныйКалендарь Экспорт;
Перем МножественныйВыбор Экспорт;
Перем ЕстьПодбор Экспорт;

#Если Клиент Тогда

// Отбирает неоплаченные задолженности по переданным контрагенту и типу задолженности
// и формирует таблицу для подбора.
//
Процедура СформироватьСписокДолговПоРегистру(ТабРасшифровка)
		
	ДопСтрокаОтборов = "";
	
	Запрос=Новый Запрос;
	
	Отбор = ПостроительОтбораДоговоров.Отбор;
	Для каждого ЭлементОтбора Из Отбор Цикл
		
		Если Не ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		Если ПустаяСтрока(ЭлементОтбора.ПутьКДанным) Тогда
			Продолжить;
		КонецЕсли;
		
		н = Отбор.Индекс(ЭлементОтбора)+1;
		СтрокаЗначения   = "Значение"   + Формат(н, "ЧГ=");
		СтрокаЗначенияС  = "ЗначениеС"  + Формат(н, "ЧГ=");
		СтрокаЗначенияПо = "ЗначениеПо" + Формат(н, "ЧГ=");
		
		ДопСтрокаОтборов = ДопСтрокаОтборов + " И " + УправлениеОтчетами.ПолучитьСтрокуОтбора(ЭлементОтбора.ВидСравнения, "&"+СтрокаЗначения, ЭлементОтбора.ПутьКДанным, "&"+СтрокаЗначенияС, "&"+СтрокаЗначенияПо);
		
		Запрос.УстановитьПараметр(СтрокаЗначения,   ЭлементОтбора.Значение);
		Запрос.УстановитьПараметр(СтрокаЗначенияС,  ЭлементОтбора.ЗначениеС);
		Запрос.УстановитьПараметр(СтрокаЗначенияПо, ЭлементОтбора.ЗначениеПо);
	
	КонецЦикла;
	
	Запрос.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТекущиеЗадолженности.ТипЗадолженности КАК ВидВзаиморасчетов,
	|	ТекущиеЗадолженности.ДоговорКонтрагента,
	|	ТекущиеЗадолженности.Сделка КАК Сделка,
	|	ТекущиеЗадолженности.ДатаВозникновения КАК ДатаВозникновения,
	|	ТекущиеЗадолженности.ДокументРасчетовСКонтрагентом КАК ДокументРасчетовСКонтрагентом,
	|	МАКСИМУМ(ТекущиеЗадолженности.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	ТекущиеЗадолженности.КурсВзаиморасчетов,
	|	ТекущиеЗадолженности.КратностьВзаиморасчетов,
	|	МАКСИМУМ(ТекущиеЗадолженности.СуммаПлатежа) КАК СуммаПлатежа
	|ИЗ (";
	ТекстОсновнойЗапрос="";
		Если УчитыватьФактическиеЗадолженности Тогда
		ТекстОсновнойЗапрос=ТекстОсновнойЗапрос+"
		|ОБЪЕДИНИТЬ ВСЕ
		// Из регистра "ВзаиморасчетыСКонтрагентами" выбираем задолженности по договорам, не ведущимся по расчетным документам
		|ВЫБРАТЬ // Выбираем задолженности по договорам, ведущимся по расчетным документам или по заказам
		|	&ПараметрФактические КАК ТипЗадолженности,
		|	РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	РасчетыСКонтрагентамиОстатки.Сделка КАК Сделка,
		|	Неопределено КАК ДокументРасчетовСКонтрагентом,
		|	РасчетыСКонтрагентамиОстатки.Сделка.Дата КАК ДатаВозникновения,
		|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток"+?(ТипЗадолженности="<0","*(-1)","")+" КАК СуммаВзаиморасчетов,
		|  	КурсыДоговоры.Курс КАК КурсВзаиморасчетов,
		|  	КурсыДоговоры.Кратность КАК КратностьВзаиморасчетов,
		|	ВЫРАЗИТЬ 
		|	(ВЫБОР 
		|		КОГДА РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов=&ВалютаДокумента
		|			ТОГДА РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток"+?(ТипЗадолженности="<0","*(-1)","")+"
		|		КОГДА НЕ РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов=&ВалютаДокумента 
		|			И НЕ КурсыДоговоры.Курс=0 
		|			И НЕ &КурсДокумента=0
		|			ТОГДА РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток"+?(ТипЗадолженности="<0","*(-1)","")+"*КурсыДоговоры.Курс * &КратностьДокумента 
		|			/ (&КурсДокумента * КурсыДоговоры.Кратность)
		|		ИНАЧЕ
		|			0
		|		КОНЕЦ КАК ЧИСЛО (15,2)) КАК СуммаПлатежа,
		|	ЛОЖЬ КАК ДвиженияДокумента
		|	ИЗ
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(, Контрагент=&Контрагент
		|"+?(ЗначениеЗаполнено(Организация)," И (Организация=&Организация ИЛИ Организация=&ПустаяОрганизация)","")+"
		|			И ДоговорКонтрагента.ВидДоговора В ИЕРАРХИИ (&ВидДоговора)
		|			И НЕ ДоговорКонтрагента.ВестиПоДокументамРасчетовСКонтрагентом
		|			И (ДоговорКонтрагента.ВедениеВзаиморасчетов = &ПоЗаказам 
		|				ИЛИ ДоговорКонтрагента.ВедениеВзаиморасчетов = &ПоСчетам"+ДопСтрокаОтборов+")) КАК РасчетыСКонтрагентамиОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаПлатежа, ) КАК КурсыДоговоры
		|		ПО РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов = КурсыДоговоры.Валюта
		|
		|	ГДЕ
		|	(РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток "+ТипЗадолженности+")
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ // Выбираем задолженности по договорам, ведущимся по договору в целом
		|	&ПараметрФактические КАК ТипЗадолженности,
		|	РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента,
		|	РасчетыСКонтрагентамиОстатки.Сделка,
		|	Неопределено КАК ДокументРасчетовСКонтрагентом,
		|	ПоследнееДвижение.Период КАК ДатаВозникновения,
		|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток"+?(ТипЗадолженности="<0","*(-1)","")+",
		|	КурсыДоговоры.Курс,
		|	КурсыДоговоры.Кратность,
		|	ВЫРАЗИТЬ 
		|	(ВЫБОР 
		|		КОГДА РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов=&ВалютаДокумента
		|			ТОГДА РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток"+?(ТипЗадолженности="<0","*(-1)","")+"
		|		КОГДА НЕ РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов=&ВалютаДокумента 
		|			И НЕ КурсыДоговоры.Курс=0 
		|			И НЕ &КурсДокумента=0
		|			ТОГДА РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток"+?(ТипЗадолженности="<0","*(-1)","")+"*КурсыДоговоры.Курс * &КратностьДокумента 
		|			/ (&КурсДокумента * КурсыДоговоры.Кратность)
		|		ИНАЧЕ
		|			0
		|		КОНЕЦ КАК ЧИСЛО (15,2)) КАК СуммаПлатежа,
		|	ЛОЖЬ КАК ДвиженияДокумента
		|	ИЗ
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(, Контрагент=&Контрагент 
		|"+?(ЗначениеЗаполнено(Организация)," И (Организация=&Организация ИЛИ Организация=&ПустаяОрганизация)","")+"
		|			И ДоговорКонтрагента.ВидДоговора В ИЕРАРХИИ (&ВидДоговора)
		|			И НЕ ДоговорКонтрагента.ВестиПоДокументамРасчетовСКонтрагентом
		|			И ДоговорКонтрагента.ВедениеВзаиморасчетов=&ПоДоговоруВЦелом"+ДопСтрокаОтборов+") КАК РасчетыСКонтрагентамиОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаПлатежа, ) КАК КурсыДоговоры
		|		ПО РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов = КурсыДоговоры.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			МАКСИМУМ(РасчетыСКонтрагентами.Период) КАК Период,
		|			РасчетыСКонтрагентами.ДоговорКонтрагента КАК ДоговорКонтрагента
		|		ИЗ
		|			РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК РасчетыСКонтрагентами
		|		ГДЕ РасчетыСКонтрагентами.Активность=Истина
		|		И РасчетыСКонтрагентами.ВидДвижения=&ВидДвижения
		|		
		|		СГРУППИРОВАТЬ ПО
		|			РасчетыСКонтрагентами.ДоговорКонтрагента) КАК ПоследнееДвижение
		|		ПО РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента = ПоследнееДвижение.ДоговорКонтрагента
		|	ГДЕ
		|	(РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток "+ТипЗадолженности+")
		// Из регистра "ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов" выбираем задолженности по договорам, ведущимся по расчетным документам
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ // 
		|	&ПараметрФактические КАК ТипЗадолженности,
		|	РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	РасчетыСКонтрагентамиОстатки.Сделка КАК Сделка,
		|	РасчетыСКонтрагентамиОстатки.ДокументРасчетовСКонтрагентом КАК ДокументРасчетовСКонтрагентом,
		|	РасчетыСКонтрагентамиОстатки.ДокументРасчетовСКонтрагентом.Дата КАК ДатаВозникновения,
		|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток"+?(ТипЗадолженности="<0","*(-1)","")+" КАК СуммаВзаиморасчетов,
		|  	КурсыДоговоры.Курс КАК КурсВзаиморасчетов,
		|  	КурсыДоговоры.Кратность КАК КратностьВзаиморасчетов,
		|	ВЫРАЗИТЬ 
		|	(ВЫБОР 
		|		КОГДА РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов=&ВалютаДокумента
		|			ТОГДА РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток"+?(ТипЗадолженности="<0","*(-1)","")+"
		|		КОГДА НЕ РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов=&ВалютаДокумента 
		|			И НЕ КурсыДоговоры.Курс=0 
		|			И НЕ &КурсДокумента=0
		|			ТОГДА РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток"+?(ТипЗадолженности="<0","*(-1)","")+"*КурсыДоговоры.Курс * &КратностьДокумента 
		|			/ (&КурсДокумента * КурсыДоговоры.Кратность)
		|		ИНАЧЕ
		|			0
		|		КОНЕЦ КАК ЧИСЛО (15,2)) КАК СуммаПлатежа,
		|	ЛОЖЬ КАК ДвиженияДокумента
		|	ИЗ
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов.Остатки(, Контрагент=&Контрагент
		|"+?(ЗначениеЗаполнено(Организация)," И (Организация=&Организация ИЛИ Организация=&ПустаяОрганизация)","")+"
		|			И ДоговорКонтрагента.ВидДоговора В ИЕРАРХИИ (&ВидДоговора)
		|			И УпрУчет"+ДопСтрокаОтборов+") КАК РасчетыСКонтрагентамиОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаПлатежа, ) КАК КурсыДоговоры
		|		ПО РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов = КурсыДоговоры.Валюта
		|
		|	ГДЕ
		|	(РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток "+ТипЗадолженности+")
		|";
		
	КонецЕсли;
	
	Если УчитыватьОперативныеЗадолженности Тогда
		ТекстОсновнойЗапрос=ТекстОсновнойЗапрос+"
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ // Выбираем задолженности по договорам, ведущимся по расчетным документам или по заказам
		|	&ПараметрОперативные КАК ТипЗадолженности,
		|	РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	РасчетыСКонтрагентамиОстатки.Сделка КАК Сделка,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРасчетовСКонтрагентом,
		|	РасчетыСКонтрагентамиОстатки.Сделка.Дата КАК ДатаВозникновения,
		|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток"+?(ТипЗадолженности="<0","*(-1)","")+" КАК СуммаВзаиморасчетов,
		|  	КурсыДоговоры.Курс КАК КурсВзаиморасчетов,
		|  	КурсыДоговоры.Кратность КАК КратностьВзаиморасчетов,
		|	ВЫРАЗИТЬ 
		|	(ВЫБОР 
		|		КОГДА РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов=&ВалютаДокумента
		|			ТОГДА РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток"+?(ТипЗадолженности="<0","*(-1)","")+"
		|		КОГДА НЕ РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов=&ВалютаДокумента 
		|			И НЕ КурсыДоговоры.Курс=0 
		|			И НЕ &КурсДокумента=0
		|			ТОГДА РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток"+?(ТипЗадолженности="<0","*(-1)","")+"*КурсыДоговоры.Курс * &КратностьДокумента 
		|			/ (&КурсДокумента * КурсыДоговоры.Кратность)
		|		ИНАЧЕ
		|			0
		|		КОНЕЦ КАК ЧИСЛО (15,2)) КАК СуммаПлатежа,
		|	ЛОЖЬ КАК ДвиженияДокумента
		|	ИЗ
		|	РегистрНакопления.РасчетыСКонтрагентами.Остатки(, Контрагент=&Контрагент
		|"+?(ЗначениеЗаполнено(Организация)," И (Организация=&Организация ИЛИ Организация=&ПустаяОрганизация)","")+"
		|			И ДоговорКонтрагента.ВидДоговора В ИЕРАРХИИ (&ВидДоговора)
		|			И (ДоговорКонтрагента.ВедениеВзаиморасчетов = &ПоЗаказам 
		|				ИЛИ ДоговорКонтрагента.ВедениеВзаиморасчетов = &ПоСчетам"+ДопСтрокаОтборов+")) КАК РасчетыСКонтрагентамиОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаПлатежа, ) КАК КурсыДоговоры
		|		ПО РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов = КурсыДоговоры.Валюта
		|
		|	ГДЕ
		|	(РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток "+ТипЗадолженности+")
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ // Выбираем задолженности по договорам, ведущимся по договору в целом
		|	&ПараметрОперативные КАК ТипЗадолженности,
		|	РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента,
		|	РасчетыСКонтрагентамиОстатки.Сделка,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРасчетовСКонтрагентом,
		|	ПоследнееДвижение.Период КАК ДатаВозникновения,
		|	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток"+?(ТипЗадолженности="<0","*(-1)","")+",
		|	КурсыДоговоры.Курс,
		|	КурсыДоговоры.Кратность,
		|	ВЫРАЗИТЬ 
		|	(ВЫБОР 
		|		КОГДА РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов=&ВалютаДокумента
		|			ТОГДА РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток"+?(ТипЗадолженности="<0","*(-1)","")+"
		|		КОГДА НЕ РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов=&ВалютаДокумента 
		|			И НЕ КурсыДоговоры.Курс=0 
		|			И НЕ &КурсДокумента=0
		|			ТОГДА РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток"+?(ТипЗадолженности="<0","*(-1)","")+"*КурсыДоговоры.Курс * &КратностьДокумента 
		|			/ (&КурсДокумента * КурсыДоговоры.Кратность)
		|		ИНАЧЕ
		|			0
		|		КОНЕЦ КАК ЧИСЛО (15,2)) КАК СуммаПлатежа,
		|	ЛОЖЬ КАК ДвиженияДокумента
		|	ИЗ
		|	РегистрНакопления.РасчетыСКонтрагентами.Остатки(, Контрагент=&Контрагент 
		|"+?(ЗначениеЗаполнено(Организация)," И (Организация=&Организация ИЛИ Организация=&ПустаяОрганизация)","")+"
		|			И ДоговорКонтрагента.ВидДоговора В ИЕРАРХИИ (&ВидДоговора)
		|			И ДоговорКонтрагента.ВедениеВзаиморасчетов=&ПоДоговоруВЦелом"+ДопСтрокаОтборов+") КАК РасчетыСКонтрагентамиОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаПлатежа, ) КАК КурсыДоговоры
		|		ПО РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов = КурсыДоговоры.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			МАКСИМУМ(РасчетыСКонтрагентами.Период) КАК Период,
		|			РасчетыСКонтрагентами.ДоговорКонтрагента КАК ДоговорКонтрагента
		|		ИЗ
		|			РегистрНакопления.РасчетыСКонтрагентами КАК РасчетыСКонтрагентами
		|		ГДЕ РасчетыСКонтрагентами.Активность=Истина
		|		И РасчетыСКонтрагентами.ВидДвижения=&ВидДвижения
		|		
		|		СГРУППИРОВАТЬ ПО
		|			РасчетыСКонтрагентами.ДоговорКонтрагента) КАК ПоследнееДвижение
		|		ПО РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента = ПоследнееДвижение.ДоговорКонтрагента
		|	ГДЕ
		|	(РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток "+ТипЗадолженности+")
		|";
		
	КонецЕсли;
	
	Если НЕ ДокументСсылка = Неопределено И ДокументСсылка.Проведен Тогда
		
		ТекстОсновнойЗапрос = ТекстОсновнойЗапрос+"
		|ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|	&ПараметрДвижения КАК ТипЗадолженности,
		|	ТЧДокументаПлатежа.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ТЧДокументаПлатежа.Сделка КАК Сделка,";
		
		Если УчитыватьФактическиеЗадолженности Тогда
			ТекстОсновнойЗапрос=ТекстОсновнойЗапрос+"
			|	ТЧДокументаПлатежа.ДокументРасчетовСКонтрагентом КАК ДокументРасчетовСКонтрагентом,
			|	ВЫБОР КОГДА (НЕ ТЧДокументаПлатежа.ДокументРасчетовСКонтрагентом=Неопределено)
			|	ТОГДА ТЧДокументаПлатежа.ДокументРасчетовСКонтрагентом.Дата
			|	КОГДА НЕ ТЧДокументаПлатежа.Сделка=Неопределено
			|	ТОГДА ТЧДокументаПлатежа.Сделка.Дата
			|	ИНАЧЕ ТЧДокументаПлатежа.Ссылка.Дата Конец КАК ДатаВозникновения,";
		Иначе
			ТекстОсновнойЗапрос=ТекстОсновнойЗапрос+"
			|	НЕОПРЕДЕЛЕНО КАК ДокументРасчетовСКонтрагентом,
			|	ВЫБОР КОГДА НЕ ТЧДокументаПлатежа.Сделка=Неопределено
			|	ТОГДА ТЧДокументаПлатежа.Сделка.Дата
			|	ИНАЧЕ ТЧДокументаПлатежа.Ссылка.Дата Конец КАК ДатаВозникновения,";
		КонецЕсли;
		
		ТекстОсновнойЗапрос=ТекстОсновнойЗапрос+"
		|	ТЧДокументаПлатежа.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
		|	ТЧДокументаПлатежа.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
		|	ТЧДокументаПлатежа.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
		|	ТЧДокументаПлатежа.СуммаПлатежа КАК СуммаПлатежа,
		|	ИСТИНА КАК ДвиженияДокумента
		|	ИЗ
		|	ДОКУМЕНТ."+ДокументСсылка.Метаданные().Имя+".РасшифровкаПлатежа КАК ТЧДокументаПлатежа
		|	ГДЕ
		|		ТЧДокументаПлатежа.Ссылка = &Регистратор И
		|		ТЧДокументаПлатежа.Ссылка.Проведен";
		
	КонецЕсли;
	
	ТекстОсновнойЗапрос=Сред(ТекстОсновнойЗапрос,16);
	
	Запрос.Текст=Запрос.Текст+ТекстОсновнойЗапрос+") КАК ТекущиеЗадолженности
	|
	|СГРУППИРОВАТЬ ПО
	|	ТекущиеЗадолженности.ТипЗадолженности,
	|	ТекущиеЗадолженности.ДоговорКонтрагента,
	|	ТекущиеЗадолженности.Сделка,
	|	ТекущиеЗадолженности.ДокументРасчетовСКонтрагентом,
	|	ТекущиеЗадолженности.КурсВзаиморасчетов,
	|	ТекущиеЗадолженности.КратностьВзаиморасчетов,
	|	ТекущиеЗадолженности.ДатаВозникновения
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаВозникновения "+ ?(СпособЗаполнения="ФИФО", "Возр", "Убыв")+",
	|	ДокументРасчетовСКонтрагентом,
	|	Сделка";	
	
	Запрос.УстановитьПараметр("ПоЗаказам",Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам);
	Запрос.УстановитьПараметр("ПоСчетам",Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоСчетам);
	Запрос.УстановитьПараметр("ПоДоговоруВЦелом",Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом);
		
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	
	Запрос.УстановитьПараметр("ВидДвижения",?(ТипЗадолженности="<0",ВидДвиженияНакопления.Расход,ВидДвиженияНакопления.Приход));
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ПустаяОрганизация",Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВалютаДокумента",ВалютаДокумента);
	Запрос.УстановитьПараметр("КурсДокумента",КурсДокумента);
	Запрос.УстановитьПараметр("КратностьДокумента",КратностьДокумента);
	Запрос.УстановитьПараметр("ДатаПлатежа",ДатаДок);
	Запрос.УстановитьПараметр("ВидДоговора",УправлениеВзаиморасчетами.ОпределитьВидДоговораСКонтрагентом(ВидОперацииДок));
	Запрос.УстановитьПараметр("Регистратор", ?(ДокументСсылка = Неопределено, Неопределено, ДокументСсылка.Ссылка));
	Запрос.УстановитьПараметр("ПараметрОперативные","Оперативные");
	Запрос.УстановитьПараметр("ПараметрФактические","Фактические");
	Запрос.УстановитьПараметр("ПараметрДвижения","Текущий документ");
	
	ТабРезультат=Запрос.Выполнить().Выгрузить();
	
	Если ЕстьПодбор Тогда
		// убираем из таблицы значения, уже присутствующие в форме документа		
		Для Каждого СтрокаДок ИЗ РасшифровкаПлатежаДок Цикл
			
			МассивКУдалению=Новый Массив;
			
			СуммаПлатежаДок=СтрокаДок.СуммаПлатежа;
			СуммаВзаиморасчетовДок=СтрокаДок.СуммаВзаиморасчетов;
			
			СтруктураПоиска=Новый Структура;
			СтруктураПоиска.Вставить("ДоговорКонтрагента",СтрокаДок.ДоговорКонтрагента);
			СтруктураПоиска.Вставить("Сделка",СтрокаДок.Сделка);
			
			Если УчитыватьФактическиеЗадолженности Тогда
				СтруктураПоиска.Вставить("ДокументРасчетовСКонтрагентом",СтрокаДок.ДокументРасчетовСКонтрагентом);
			КонецЕсли;
			
			МассивПодбора=ТабРезультат.НайтиСтроки(СтруктураПоиска);
			
			Для Индекс=0 ПО МассивПодбора.Количество()-1 Цикл
				
				СтрокаПодбор=МассивПодбора[Индекс];
				
				Если СтрокаПодбор.СуммаПлатежа>=СуммаПлатежаДок И СтрокаПодбор.СуммаВзаиморасчетов>=СуммаВзаиморасчетовДок Тогда
					
					СтрокаПодбор.СуммаПлатежа=СтрокаПодбор.СуммаПлатежа-СуммаПлатежаДок;
					СтрокаПодбор.СуммаВзаиморасчетов=СтрокаПодбор.СуммаВзаиморасчетов-СуммаВзаиморасчетовДок;
					
					СуммаПлатежаДок=0;
					СуммаВзаиморасчетовДок=0;
													
				ИначеЕсли СтрокаПодбор.СуммаПлатежа>0 И СтрокаПодбор.СуммаВзаиморасчетов>0 Тогда
					
					СуммаСписанияПлатеж=Мин(СуммаПлатежаДок,СтрокаПодбор.СуммаПлатежа);
					СуммаСписанияРасчеты=Мин(СуммаВзаиморасчетовДок,СтрокаПодбор.СуммаВзаиморасчетов);
					
					СтрокаПодбор.СуммаПлатежа=СтрокаПодбор.СуммаПлатежа-СуммаСписанияПлатеж;
					СтрокаПодбор.СуммаВзаиморасчетов=СтрокаПодбор.СуммаВзаиморасчетов-СуммаСписанияРасчеты;
					
					СуммаПлатежаДок=СуммаПлатежаДок-СуммаСписанияПлатеж;
					СуммаВзаиморасчетовДок=СуммаВзаиморасчетовДок-СуммаСписанияРасчеты;
					
				КонецЕсли;
				
				Если НЕ (СтрокаПодбор.СуммаВзаиморасчетов=0 ИЛИ СтрокаПодбор.СуммаПлатежа=0) Тогда
					
					СтрокаПодбор.КурсВзаиморасчетов=?(НЕ КратностьДокумента=0,Окр((СтрокаПодбор.СуммаПлатежа * КурсДокумента*СтрокаПодбор.КратностьВзаиморасчетов/(СтрокаПодбор.СуммаВзаиморасчетов*КратностьДокумента)),4),0);
					
				Иначе
					
					МассивКУдалению.Добавить(СтрокаПодбор);
					
				КонецЕсли;
				
				Если СуммаПлатежаДок=0 И СуммаВзаиморасчетовДок=0 Тогда
					
					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Для Каждого Строка ИЗ МассивКУдалению Цикл
				
				ТабРезультат.Удалить(Строка);
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
		
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТабРезультат, ТабРасшифровка);
		
КонецПроцедуры // СформироватьСписокДолговПоРегистру()

Процедура СформироватьСписокДолгов() Экспорт
	
	ТабРасшифровка=РасшифровкаПлатежа.Выгрузить();
	ТабРасшифровка.Очистить();
	
	Если УчитыватьОперативныеЗадолженности ИЛИ УчитыватьФактическиеЗадолженности Тогда
		
		СформироватьСписокДолговПоРегистру(ТабРасшифровка);
		
	КонецЕсли;
	
	РасшифровкаПлатежа.Загрузить(ТабРасшифровка);
	
КонецПроцедуры // СформироватьСписокДолгов() 

// Отбирает неоплаченные задолженности по переданным контрагенту и типу задолженности
// и формирует таблицу для подбора.
//
Процедура СформироватьСписокПланируемыхДвижений(ДокументПланирования) Экспорт
	
	Запрос=Новый Запрос;
	
	ТекстУсловия="
	|И ("+ДокументПланирования+".ВалютаДокумента=&ПустойВалютаДокумента ИЛИ "+ДокументПланирования+".ВалютаДокумента= &ВалютаДокумента)";
	
	Запрос.УстановитьПараметр("ПустойВалютаДокумента",Справочники.Валюты.ПустаяСсылка());
	
	Если ЗначениеЗаполнено(ФормаОплаты) Тогда
		ТекстУсловия=ТекстУсловия+"
		|И ("+ДокументПланирования+".ФормаОплаты=&ПустойФормаОплаты ИЛИ "+ДокументПланирования+".ФормаОплаты В (&ФормаОплаты))";
		
		Запрос.УстановитьПараметр("ФормаОплаты",ФормаОплаты);
		Запрос.УстановитьПараметр("ПустойФормаОплаты",Перечисления.ВидыДенежныхСредств.ПустаяСсылка());	
		
	КонецЕсли;
		
	Если ЗначениеЗаполнено(БанковскийСчетКасса) Тогда
		
		ТекстУсловия=ТекстУсловия+"
	             |		И ("+ДокументПланирования+".БанковскийСчетКасса=&ПустойСчетКасса ИЛИ 
				 |		"+ДокументПланирования+".БанковскийСчетКасса= &БанковскийСчетКасса ИЛИ 
				 |		"+ДокументПланирования+".БанковскийСчетКасса= Неопределено)";

		Запрос.УстановитьПараметр("БанковскийСчетКасса",БанковскийСчетКасса);	
		Запрос.УстановитьПараметр("ПустойСчетКасса",Новый(ТипЗнч(БанковскийСчетКасса)));
		
	КонецЕсли;
				 
	Если ЗначениеЗаполнено(Контрагент) Тогда
		 
		 Если 		ВидОперацииПлан=Перечисления.ВидыОперацийЗаявкиНаРасходование.ВыдачаДенежныхСредствКассеККМ
			 ИЛИ  	ВидОперацииПлан=Перечисления.ВидыОперацийЗаявкиНаРасходование.ВыдачаДенежныхСредствПодотчетнику Тогда
			 
			 ТекстУсловия=ТекстУсловия+"
			 |И (ЗаявкаНаРасходование.Получатель=&Контрагент ИЛИ ЗаявкаНаРасходование.Получатель=Неопределено)";
			 Запрос.УстановитьПараметр("Контрагент",Контрагент);
			 
		 Иначе
			 
			 ТекстУсловия=ТекстУсловия+"
			 |И ("+ДокументПланирования+".Контрагент=&Контрагент ИЛИ "+ДокументПланирования+".Контрагент=&ПустойКонтрагент)";
			 Запрос.УстановитьПараметр("Контрагент",Контрагент);
			 Запрос.УстановитьПараметр("ПустойКонтрагент",Справочники.Контрагенты.ПустаяСсылка());
			 
		 КонецЕсли;
					 
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		ТекстУсловия=ТекстУсловия+"
		|И ДоговорКонтрагента=&ДоговорКонтрагента";
		Запрос.УстановитьПараметр("ДоговорКонтрагента",ДоговорКонтрагента);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтатьяДвиженияДенежныхСредств) Тогда
		ТекстУсловия=ТекстУсловия+"
		|И (СтатьяДвиженияДенежныхСредств=&ПустойСтатьяДвиженияДенежныхСредств ИЛИ СтатьяДвиженияДенежныхСредств=&СтатьяДвиженияДенежныхСредств)";
		Запрос.УстановитьПараметр("СтатьяДвиженияДенежныхСредств",СтатьяДвиженияДенежныхСредств);
		Запрос.УстановитьПараметр("ПустойСтатьяДвиженияДенежныхСредств",Справочники.СтатьиДвиженияДенежныхСредств.ПустаяСсылка());
	КонецЕсли;
				 
	Если ЗначениеЗаполнено(ВидОперацииПлан) Тогда
		ТекстУсловия=ТекстУсловия+"
		|И "+ДокументПланирования+".ВидОперации = &ВидОперации";
		Запрос.УстановитьПараметр("ВидОперации",ВидОперацииПлан);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Организация) Тогда
		ТекстУсловия=ТекстУсловия+"
		|И ("+ДокументПланирования+".Организация=&ПустойОрганизация ИЛИ "+ДокументПланирования+".Организация=&Организация)";
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("ПустойОрганизация",Справочники.Организации.ПустаяСсылка());
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Сделка) Тогда
		ТекстУсловия=ТекстУсловия+"
		|И (Сделка=Неопределено ИЛИ Сделка=&Сделка)";
		Запрос.УстановитьПараметр("Сделка",Сделка);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументРасчетовСКонтрагентом) Тогда
		ТекстУсловия=ТекстУсловия+"
		|И (ДокументРасчетовСКонтрагентом=Неопределено ИЛИ ДокументРасчетовСКонтрагентом=&ДокументРасчетовСКонтрагентом)";
		Запрос.УстановитьПараметр("ДокументРасчетовСКонтрагентом",ДокументРасчетовСКонтрагентом);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Проект) Тогда
		ТекстУсловия=ТекстУсловия+"
		|И (Проект=&ПустойПроект ИЛИ Проект=&Проект)";
		Запрос.УстановитьПараметр("Проект",Проект);
		Запрос.УстановитьПараметр("ПустойПроект",Справочники.Проекты.ПустаяСсылка());
	КонецЕсли;
	
	Если ВключенныеВПлатежныйКалендарь=Истина Тогда
		ТекстУсловия=ТекстУсловия+"
		|И "+ДокументПланирования+".ВключатьВПлатежныйКалендарь=Истина";
	КонецЕсли;
	
	ТекстУсловия=Сред(ТекстУсловия,3);
	
	Запрос.Текст="ВЫБРАТЬ
	|	ПланируемыеДвиженияОстатки.ДоговорКонтрагента,
	|	ПланируемыеДвиженияОстатки.Сделка,
	|	ПланируемыеДвиженияОстатки.ДокументРасчетовСКонтрагентом,
	|	ПланируемыеДвиженияОстатки.СтатьяДвиженияДенежныхСредств,
	|	ПланируемыеДвиженияОстатки.Проект,
	|	ПланируемыеДвиженияОстатки.ДокументПланирования КАК ДокументПланирования,
	|	ПланируемыеДвиженияОстатки.ДокументПланирования.СуммаДокумента КАК СуммаДокумента,
	|ВЫРАЗИТЬ 
	|	(ВЫБОР 
	|		КОГДА НЕ СУММА(ПланируемыеДвиженияОстатки.СуммаПлатежа)=0 
	|			ТОГДА СУММА(ПланируемыеДвиженияОстатки.СуммаПлатежа)
	|		КОГДА ПланируемыеДвиженияОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов=&ВалютаДокумента
	|			ТОГДА СУММА(ПланируемыеДвиженияОстатки.СуммаВзаиморасчетов)
	|		КОГДА СУММА(ПланируемыеДвиженияОстатки.СуммаПлатежа)=0  
	|			И НЕ КурсыДоговоры.Курс=0 
	|			И НЕ &КурсДокумента=0
	|			ТОГДА СУММА(ПланируемыеДвиженияОстатки.СуммаВзаиморасчетов)*КурсыДоговоры.Курс * &КратностьДокумента 
	|			/ (&КурсДокумента * КурсыДоговоры.Кратность)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ЧИСЛО (15,2)) КАК СуммаПлатежа,
	|ВЫРАЗИТЬ 
	|	(ВЫБОР 
	|		КОГДА СУММА(ПланируемыеДвиженияОстатки.СуммаПлатежа)=0 
	|			ТОГДА КурсыДоговоры.Курс
	|		КОГДА ПланируемыеДвиженияОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов=&ВалютаДокумента
	|			ТОГДА &КурсДокумента
	|		КОГДА НЕ СУММА(ПланируемыеДвиженияОстатки.СуммаПлатежа)=0  
	|			И НЕ &КурсДокумента=0
	|			И НЕ СУММА(ПланируемыеДвиженияОстатки.СуммаВзаиморасчетов)= 0
	|			И НЕ &КратностьДокумента=0 Тогда
	|			СУММА(ПланируемыеДвиженияОстатки.СуммаПлатежа) * &КурсДокумента * КурсыДоговоры.Кратность
	|						/ (СУММА(ПланируемыеДвиженияОстатки.СуммаВзаиморасчетов) * &КратностьДокумента)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ЧИСЛО (10,4)) КАК КурсВзаиморасчетов,
	|ВЫРАЗИТЬ 
	|	(ВЫБОР
	|		КОГДА ПланируемыеДвиженияОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов=ПланируемыеДвиженияОстатки.ДокументПланирования.ВалютаДокумента
	|			ТОГДА ПланируемыеДвиженияОстатки.ДокументПланирования.КурсДокумента
	|		КОГДА НЕ СУММА(ПланируемыеДвиженияОстатки.СуммаПлатежа)=0  
	|			И НЕ ПланируемыеДвиженияОстатки.ДокументПланирования.КурсДокумента=0
	|			И НЕ СУММА(ПланируемыеДвиженияОстатки.СуммаВзаиморасчетов)= 0
	|			И НЕ ПланируемыеДвиженияОстатки.ДокументПланирования.КратностьДокумента=0 Тогда
	|			СУММА(ПланируемыеДвиженияОстатки.СуммаПлатежа) * ПланируемыеДвиженияОстатки.ДокументПланирования.КурсДокумента * КурсыДоговоры.Кратность
	|						/ (СУММА(ПланируемыеДвиженияОстатки.СуммаВзаиморасчетов) * ПланируемыеДвиженияОстатки.ДокументПланирования.КратностьДокумента)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ЧИСЛО (10,4)) КАК КурсВзаиморасчетовПлан,
	|	ПланируемыеДвиженияОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СУММА(ПланируемыеДвиженияОстатки.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	ВЫБОР 
	|		КОГДА ПланируемыеДвиженияОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов=&ВалютаДокумента
	|			ТОГДА &КратностьДокумента
	|		ИНАЧЕ
	|			КурсыДоговоры.Кратность
	|		КОНЕЦ КАК КратностьВзаиморасчетов,
	|	ПланируемыеДвиженияОстатки.ДокументПланирования."
	+?(ДокументПланирования="ЗаявкаНаРасходование","ДатаРасхода","ДатаПоступления")+" КАК ДатаДвижения
	|ИЗ (
	|	ВЫБРАТЬ
	|	ПланируемыеОстатки.ДоговорКонтрагента,
	|	ПланируемыеОстатки.Сделка,
	|	ПланируемыеОстатки.ДокументРасчетовСКонтрагентом,
	|	ПланируемыеОстатки.СтатьяДвиженияДенежныхСредств,
	|	ПланируемыеОстатки.Проект,
	|	ПланируемыеОстатки."+ДокументПланирования+" КАК ДокументПланирования,
	|	ПланируемыеОстатки."+ДокументПланирования+".СуммаДокумента КАК СуммаДокумента,
	|   ПланируемыеОстатки.СуммаОстаток КАК СуммаПлатежа,
	|   ПланируемыеОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетов
	|ИЗ
	|	РегистрНакопления."+ИмяРегистраПлан+".Остатки(,("+ТекстУсловия+"))КАК ПланируемыеОстатки";		
		
	Если НЕ ДокументСсылка = Неопределено И ЗначениеЗаполнено(ДокументСсылка.Ссылка) Тогда
		
		Запрос.Текст = Запрос.Текст+"
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ПланируемыеДвижения.ДоговорКонтрагента,
		|	ПланируемыеДвижения.Сделка,
		|	ПланируемыеДвижения.ДокументРасчетовСКонтрагентом,
		|	ПланируемыеДвижения.СтатьяДвиженияДенежныхСредств,
		|	ПланируемыеДвижения.Проект,
		|	ПланируемыеДвижения."+ДокументПланирования+" КАК ДокументПланирования,
		|	ПланируемыеДвижения."+ДокументПланирования+".СуммаДокумента КАК СуммаДокумента,
		|	ПланируемыеДвижения.Сумма КАК СуммаПлатежа,
		|	ПланируемыеДвижения.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов
		|ИЗ
		|	РегистрНакопления."+ИмяРегистраПлан+" КАК ПланируемыеДвижения
		|ГДЕ
		|	ПланируемыеДвижения.Регистратор = &Регистратор";
		
		Если СтрДлина(ТекстУсловия)>0 Тогда
			
			Запрос.Текст=Запрос.Текст+"
			|И ("+ТекстУсловия+")";
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.Текст=Запрос.Текст+")КАК ПланируемыеДвиженияОстатки	
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаПлатежа, ) КАК КурсыДоговоры
	|		ПО ПланируемыеДвиженияОстатки.ДоговорКонтрагента.ВалютаВзаиморасчетов = КурсыДоговоры.Валюта
	|СГРУППИРОВАТЬ ПО
	|	ПланируемыеДвиженияОстатки.ДоговорКонтрагента,
	|	ПланируемыеДвиженияОстатки.Сделка,
	|	ПланируемыеДвиженияОстатки.ДокументРасчетовСКонтрагентом,
	|	ПланируемыеДвиженияОстатки.СтатьяДвиженияДенежныхСредств,
	|	ПланируемыеДвиженияОстатки.Проект,
	|	ПланируемыеДвиженияОстатки.ДокументПланирования,
	|	КурсыДоговоры.Курс,
	|	КурсыДоговоры.Кратность";
		
	Запрос.УстановитьПараметр("СуммаДокумента",СуммаДляПодбора);
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	Запрос.УстановитьПараметр("ПустойВалютаДокумента",Справочники.Валюты.ПустаяСсылка());
    Запрос.УстановитьПараметр("ДатаПлатежа",ДатаДок);
	Запрос.УстановитьПараметр("КурсДокумента",КурсДокумента);
	Запрос.УстановитьПараметр("КратностьДокумента",КратностьДокумента);
	Запрос.УстановитьПараметр("ВалютаДокумента",ВалютаДокумента);
	Если НЕ ДокументСсылка = Неопределено И ЗначениеЗаполнено(ДокументСсылка.Ссылка) Тогда
		Запрос.УстановитьПараметр("Регистратор",ДокументСсылка.Ссылка);
	КонецЕсли;
	
	ТабРезультат=Запрос.Выполнить().Выгрузить();
	
	Если ЕстьПодбор Тогда
		// убираем из таблицы значения, уже присутствующие в форме документа
	
		Для Каждого СтрокаДок ИЗ РасшифровкаПлатежаДок Цикл
			
			МассивКУдалению=Новый Массив;
			
			СуммаПлатежаДок=СтрокаДок.СуммаПлатежа;
			СуммаВзаиморасчетовДок=СтрокаДок.СуммаВзаиморасчетов;
			
			СтруктураПоиска=Новый Структура;
			СтруктураПоиска.Вставить("ДокументПланирования",СтрокаДок.ДокументПланированияПлатежа);
			СтруктураПоиска.Вставить("ДоговорКонтрагента",СтрокаДок.ДоговорКонтрагента);
			
			МассивПодбора=ТабРезультат.НайтиСтроки(СтруктураПоиска);
			
			Для Индекс=0 ПО МассивПодбора.Количество()-1 Цикл
				
				СтрокаПодбор=МассивПодбора[Индекс];
				
				Если (Не (СтрокаПодбор.Сделка=Неопределено ИЛИ СтрокаПодбор.Сделка=СтрокаДок.Сделка))
					ИЛИ (Не (СтрокаПодбор.ДокументРасчетовСКонтрагентом=Неопределено ИЛИ СтрокаПодбор.ДокументРасчетовСКонтрагентом=СтрокаДок.ДокументРасчетовСКонтрагентом)) Тогда
					
					Продолжить;
					
				КонецЕсли;
				
				Если (СтрокаПодбор.СуммаПлатежа>=СуммаПлатежаДок И СтрокаПодбор.СуммаВзаиморасчетов>=СуммаВзаиморасчетовДок
					И СуммаПлатежаДок>0 И СуммаВзаиморасчетовДок>0) ИЛИ (СтрокаПодбор.СуммаПлатежа<=СуммаПлатежаДок И СтрокаПодбор.СуммаВзаиморасчетов<=СуммаВзаиморасчетовДок
					И СуммаПлатежаДок<0 И СуммаВзаиморасчетовДок<0) Тогда
					
					СтрокаПодбор.СуммаПлатежа=СтрокаПодбор.СуммаПлатежа-СуммаПлатежаДок;
					СтрокаПодбор.СуммаВзаиморасчетов=СтрокаПодбор.СуммаВзаиморасчетов-СуммаВзаиморасчетовДок;
					
					СуммаПлатежаДок=0;
					СуммаВзаиморасчетовДок=0;
					
				ИначеЕсли СтрокаПодбор.СуммаПлатежа>0 И СтрокаПодбор.СуммаВзаиморасчетов>0 
					И СуммаПлатежаДок>0 И СуммаВзаиморасчетовДок>0 Тогда
					
					СуммаСписанияПлатеж=Мин(СуммаПлатежаДок,СтрокаПодбор.СуммаПлатежа);
					СуммаСписанияРасчеты=Мин(СуммаВзаиморасчетовДок,СтрокаПодбор.СуммаВзаиморасчетов);
					
					СтрокаПодбор.СуммаПлатежа=СтрокаПодбор.СуммаПлатежа-СуммаСписанияПлатеж;
					СтрокаПодбор.СуммаВзаиморасчетов=СтрокаПодбор.СуммаВзаиморасчетов-СуммаСписанияРасчеты;
					
					СуммаПлатежаДок=СуммаПлатежаДок-СуммаСписанияПлатеж;
					СуммаВзаиморасчетовДок=СуммаВзаиморасчетовДок-СуммаСписанияРасчеты;
					
				ИначеЕсли СтрокаПодбор.СуммаПлатежа<0 И СтрокаПодбор.СуммаВзаиморасчетов<0 
					И СуммаПлатежаДок<0 И СуммаВзаиморасчетовДок<0 Тогда
					
					СуммаСписанияПлатеж=Макс(СуммаПлатежаДок,СтрокаПодбор.СуммаПлатежа);
					СуммаСписанияРасчеты=Макс(СуммаВзаиморасчетовДок,СтрокаПодбор.СуммаВзаиморасчетов);
					
					СтрокаПодбор.СуммаПлатежа=СтрокаПодбор.СуммаПлатежа-СуммаСписанияПлатеж;
					СтрокаПодбор.СуммаВзаиморасчетов=СтрокаПодбор.СуммаВзаиморасчетов-СуммаСписанияРасчеты;
					
					СуммаПлатежаДок=СуммаПлатежаДок-СуммаСписанияПлатеж;
					СуммаВзаиморасчетовДок=СуммаВзаиморасчетовДок-СуммаСписанияРасчеты;
					
				КонецЕсли;
				
				Если НЕ (СтрокаПодбор.СуммаВзаиморасчетов=0 ИЛИ СтрокаПодбор.СуммаПлатежа=0) Тогда
					
					СтрокаПодбор.КурсВзаиморасчетов=?(НЕ КратностьДокумента=0,Окр((СтрокаПодбор.СуммаПлатежа * КурсДокумента*СтрокаПодбор.КратностьВзаиморасчетов/(СтрокаПодбор.СуммаВзаиморасчетов*КратностьДокумента)),4),0);
					
					КурсПлан=СтрокаПодбор.ДокументПланирования.КурсДокумента;
					КратностьПлан=СтрокаПодбор.ДокументПланирования.КратностьДокумента;
					
					СтрокаПодбор.КурсВзаиморасчетовПлан=?(НЕ КратностьПлан=0,Окр((СтрокаПодбор.СуммаПлатежа * КурсПлан*СтрокаПодбор.КратностьВзаиморасчетов/(СтрокаПодбор.СуммаВзаиморасчетов*КратностьПлан)),4),0);
					
				Иначе
					
					МассивКУдалению.Добавить(СтрокаПодбор);
					
				КонецЕсли;
				
				Если СуммаПлатежаДок=0 И СуммаВзаиморасчетовДок=0 Тогда
					
					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Для Каждого Строка ИЗ МассивКУдалению Цикл
				
				ТабРезультат.Удалить(Строка);
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
						 
	ПланируемыеДвижения.Загрузить(ТабРезультат);
	
	ПланируемыеДвижения.Сортировать("ДатаДвижения Возр");
		
КонецПроцедуры // СформироватьСписокПланируемыхДвижений()

Функция ПодборПланируемыхДвижений(ИсходнаяРасшифровка,ПодборПоСуммеПлатежа=Истина,КурсПоДоговору=Истина) Экспорт
	
	Если ИмяРегистраПлан="ЗаявкиНаРасходованиеСредств" Тогда
		ИмяДокумента="ЗаявкаНаРасходование";
	Иначе
		ИмяДокумента="ДокументПланирования";
	КонецЕсли;
	
	СформироватьСписокПланируемыхДвижений(ИмяДокумента);
	
	КопияРасшифровкаДок=ИсходнаяРасшифровка.СкопироватьКолонки();
	
	ПланируемыеДвижения.Сортировать("ДатаДвижения Возр");
	
	Для Каждого СтрокаПлатеж ИЗ ИсходнаяРасшифровка Цикл
		
		СтруктураОтбора=Новый Структура;
		СтруктураОтбора.Вставить("ДоговорКонтрагента",СтрокаПлатеж.ДоговорКонтрагента);
		
		Если НЕ (УчитыватьФактическиеЗадолженности И СтрокаПлатеж.ДоговорКонтрагента.ВедениеВзаиморасчетов=Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом) Тогда
			
			СтруктураОтбора.Вставить("Сделка",СтрокаПлатеж.Сделка);
			
		КонецЕсли;
		
		МассивПлан=ПланируемыеДвижения.НайтиСтроки(СтруктураОтбора);
		
		Если ПодборПоСуммеПлатежа Тогда
		
		ВсегоКПодбору=СтрокаПлатеж.СуммаПлатежа;
		
		Для Каждого СтрокаПлан Из МассивПлан Цикл
			
			Если (НЕ (СтрокаПлан.ДокументРасчетовСКонтрагентом=СтрокаПлатеж.ДокументРасчетовСКонтрагентом ИЛИ СтрокаПлан.ДокументРасчетовСКонтрагентом=Неопределено)) ИЛИ СтрокаПлан.СуммаПлатежа<=0 Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаПодобрано=КопияРасшифровкаДок.Добавить();
			СтрокаПодобрано.ДоговорКонтрагента=СтрокаПлатеж.ДоговорКонтрагента;
			СтрокаПодобрано.Сделка=СтрокаПлатеж.Сделка;
			СтрокаПодобрано.ДокументРасчетовСКонтрагентом=СтрокаПлатеж.ДокументРасчетовСКонтрагентом;
			СтрокаПодобрано.КурсВзаиморасчетовПлан=СтрокаПлан.КурсВзаиморасчетовПлан;
			
			ВалютаВзаиморасчетов=СтрокаПодобрано.ДоговорКонтрагента.ВалютаВзаиморасчетов;
			
			Если КурсПоДоговору ИЛИ СтрокаПлан.КурсВзаиморасчетов=0 Тогда
				
				СтрокаПодобрано.КурсВзаиморасчетов=СтрокаПлатеж.КурсВзаиморасчетов;
				СтрокаПодобрано.КратностьВзаиморасчетов=СтрокаПлатеж.КратностьВзаиморасчетов;
				
			Иначе
				
				СтрокаПодобрано.КурсВзаиморасчетов=СтрокаПлан.КурсВзаиморасчетов;
				СтрокаПодобрано.КратностьВзаиморасчетов=СтрокаПлан.КратностьВзаиморасчетов;
				
			КонецЕсли;
			
			СтрокаПодобрано.ДокументПланированияПлатежа=СтрокаПлан.ДокументПланирования;
			СтрокаПодобрано.СтатьяДвиженияДенежныхСредств=СтрокаПлан.СтатьяДвиженияДенежныхСредств;
			СтрокаПодобрано.Проект=СтрокаПлан.Проект;
			
			Если СтрокаПлан.СуммаПлатежа=ВсегоКПодбору Тогда
				
				СтрокаПодобрано.СуммаПлатежа=СтрокаПлатеж.СуммаПлатежа;
				СтрокаПодобрано.СуммаВзаиморасчетов=СтрокаПлатеж.СуммаВзаиморасчетов;
				
				Если СтрокаПодобрано.КурсВзаиморасчетовПлан>0 Тогда										
				СтрокаПодобрано.СуммаПлатежаПлан=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаПодобрано.СуммаВзаиморасчетов,
														ВалютаВзаиморасчетов,ВалютаДокумента,
														СтрокаПодобрано.КурсВзаиморасчетовПлан,КурсДокумента,
														СтрокаПодобрано.КратностьВзаиморасчетов,КратностьДокумента);
														
				Иначе // Документ планирования не таксирован
														
					СтрокаПодобрано.СуммаПлатежаПлан=0;
					
				КонецЕсли;

				ВсегоКПодбору=0;
				СтрокаПлан.СуммаПлатежа=СтрокаПлан.СуммаПлатежа-СтрокаПодобрано.СуммаПлатежаПлан;
				Прервать;
				
			ИначеЕсли СтрокаПлан.СуммаПлатежа>ВсегоКПодбору Тогда
								
				СтрокаПодобрано.СуммаПлатежа=ВсегоКПодбору;
				
				СтрокаПодобрано.СуммаВзаиморасчетов=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаПодобрано.СуммаПлатежа,ВалютаДокумента,ВалютаВзаиморасчетов,
				КурсДокумента,СтрокаПодобрано.КурсВзаиморасчетов,
				КратностьДокумента,СтрокаПодобрано.КратностьВзаиморасчетов);
				
				Если СтрокаПодобрано.КурсВзаиморасчетовПлан>0 Тогда										
				СтрокаПодобрано.СуммаПлатежаПлан=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаПодобрано.СуммаВзаиморасчетов,
														ВалютаВзаиморасчетов,ВалютаДокумента,
														СтрокаПодобрано.КурсВзаиморасчетовПлан,КурсДокумента,
														СтрокаПодобрано.КратностьВзаиморасчетов,КратностьДокумента);
														
				Иначе // Документ планирования не таксирован
														
					СтрокаПодобрано.СуммаПлатежаПлан=0;
					
				КонецЕсли;
				
				СтрокаПлан.СуммаПлатежа=СтрокаПлан.СуммаПлатежа-ВсегоКПодбору;
				ВсегоКПодбору=0;
				
				Прервать;
				
			Иначе
				
				СтрокаПодобрано.СуммаПлатежа=СтрокаПлан.СуммаПлатежа;
				СтрокаПодобрано.СуммаВзаиморасчетов=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаПодобрано.СуммаПлатежа,ВалютаДокумента,ВалютаВзаиморасчетов,
				КурсДокумента,СтрокаПодобрано.КурсВзаиморасчетов,
				КратностьДокумента,СтрокаПодобрано.КратностьВзаиморасчетов);
				
				Если СтрокаПодобрано.КурсВзаиморасчетовПлан>0 Тогда										
				СтрокаПодобрано.СуммаПлатежаПлан=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаПодобрано.СуммаВзаиморасчетов,
														ВалютаВзаиморасчетов,ВалютаДокумента,
														СтрокаПодобрано.КурсВзаиморасчетовПлан,КурсДокумента,
														СтрокаПодобрано.КратностьВзаиморасчетов,КратностьДокумента);
														
				Иначе // Документ планирования не таксирован
														
					СтрокаПодобрано.СуммаПлатежаПлан=0;
					
				КонецЕсли;
				
				ВсегоКПодбору=ВсегоКПодбору-СтрокаПодобрано.СуммаПлатежаПлан;
				СтрокаПлан.СуммаПлатежа=0;
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		ВсегоКПодбору=СтрокаПлатеж.СуммаВзаиморасчетов;
		
		Для Каждого СтрокаПлан Из МассивПлан Цикл
			
			Если (НЕ (СтрокаПлан.ДокументРасчетовСКонтрагентом=СтрокаПлатеж.ДокументРасчетовСКонтрагентом ИЛИ СтрокаПлан.ДокументРасчетовСКонтрагентом=Неопределено)) ИЛИ СтрокаПлан.СуммаВзаиморасчетов<=0 Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаПодобрано=КопияРасшифровкаДок.Добавить();
			СтрокаПодобрано.ДоговорКонтрагента=СтрокаПлатеж.ДоговорКонтрагента;
			СтрокаПодобрано.Сделка=СтрокаПлатеж.Сделка;
			СтрокаПодобрано.ДокументРасчетовСКонтрагентом=СтрокаПлатеж.ДокументРасчетовСКонтрагентом;
			СтрокаПодобрано.КурсВзаиморасчетовПлан=СтрокаПлан.КурсВзаиморасчетовПлан;
			
			Если КурсПоДоговору ИЛИ СтрокаПлан.КурсВзаиморасчетов=0 Тогда
				
				СтрокаПодобрано.КурсВзаиморасчетов=СтрокаПлатеж.КурсВзаиморасчетов;
				СтрокаПодобрано.КратностьВзаиморасчетов=СтрокаПлатеж.КратностьВзаиморасчетов;
				
			Иначе
				
				СтрокаПодобрано.КурсВзаиморасчетов=СтрокаПлан.КурсВзаиморасчетов;
				СтрокаПодобрано.КратностьВзаиморасчетов=СтрокаПлан.КратностьВзаиморасчетов;
				
			КонецЕсли;
			
			СтрокаПодобрано.ДокументПланированияПлатежа=СтрокаПлан.ДокументПланирования;
			СтрокаПодобрано.СтатьяДвиженияДенежныхСредств=СтрокаПлан.СтатьяДвиженияДенежныхСредств;
			СтрокаПодобрано.Проект=СтрокаПлан.Проект;
			
			Если СтрокаПлан.СуммаВзаиморасчетов=ВсегоКПодбору Тогда
				
				СтрокаПодобрано.СуммаПлатежа=СтрокаПлатеж.СуммаПлатежа;
				СтрокаПодобрано.СуммаПлатежаПлан=СтрокаПлатеж.СуммаПлатежа;
				СтрокаПодобрано.СуммаВзаиморасчетов=СтрокаПлатеж.СуммаВзаиморасчетов;
				ВсегоКПодбору=0;
				СтрокаПлан.СуммаВзаиморасчетов=СтрокаПлан.СуммаВзаиморасчетов-СтрокаПлатеж.СуммаВзаиморасчетов;
				Прервать;
				
			ИначеЕсли СтрокаПлан.СуммаВзаиморасчетов>ВсегоКПодбору Тогда
				
				СтрокаПодобрано.СуммаВзаиморасчетов=ВсегоКПодбору;
				СтрокаПодобрано.СуммаПлатежа=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаПодобрано.СуммаВзаиморасчетов,
														СтрокаПодобрано.ДоговорКонтрагента.ВалютаВзаиморасчетов,ВалютаДокумента,
														СтрокаПодобрано.КурсВзаиморасчетов,КурсДокумента,
														СтрокаПодобрано.КратностьВзаиморасчетов,КратностьДокумента);
														
														
				Если СтрокаПодобрано.КурсВзаиморасчетовПлан>0 Тогда										
				СтрокаПодобрано.СуммаПлатежаПлан=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаПодобрано.СуммаВзаиморасчетов,
														СтрокаПодобрано.ДоговорКонтрагента.ВалютаВзаиморасчетов,ВалютаДокумента,
														СтрокаПодобрано.КурсВзаиморасчетовПлан,КурсДокумента,
														СтрокаПодобрано.КратностьВзаиморасчетов,КратностьДокумента);
														
				Иначе // Документ планирования не таксирован
														
					СтрокаПодобрано.СуммаПлатежаПлан=0;
					
				КонецЕсли;
				
				СтрокаПлан.СуммаВзаиморасчетов=СтрокаПлан.СуммаВзаиморасчетов-ВсегоКПодбору;
				ВсегоКПодбору=0;
				
				Прервать;
				
			Иначе
				
				СтрокаПодобрано.СуммаВзаиморасчетов=СтрокаПлан.СуммаВзаиморасчетов;
				СтрокаПодобрано.СуммаПлатежа=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаПодобрано.СуммаВзаиморасчетов,
														СтрокаПодобрано.ДоговорКонтрагента.ВалютаВзаиморасчетов,ВалютаДокумента,
														СтрокаПодобрано.КурсВзаиморасчетов,КурсДокумента,
														СтрокаПодобрано.КратностьВзаиморасчетов,КратностьДокумента);
														
				Если СтрокаПодобрано.КурсВзаиморасчетовПлан>0 Тогда										
				СтрокаПодобрано.СуммаПлатежаПлан=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаПодобрано.СуммаВзаиморасчетов,
														СтрокаПодобрано.ДоговорКонтрагента.ВалютаВзаиморасчетов,ВалютаДокумента,
														СтрокаПодобрано.КурсВзаиморасчетовПлан,КурсДокумента,
														СтрокаПодобрано.КратностьВзаиморасчетов,КратностьДокумента);
														
				Иначе // Документ планирования не таксирован
														
					СтрокаПодобрано.СуммаПлатежаПлан=0;
					
				КонецЕсли;
				
				ВсегоКПодбору=ВсегоКПодбору-СтрокаПлан.СуммаВзаиморасчетов;
				СтрокаПлан.СуммаВзаиморасчетов=0;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ВсегоКПодбору>0 И НЕ НеПревышатьЗапланированныхЗначений Тогда
		
		СтрокаПодобрано=КопияРасшифровкаДок.Добавить();
		СтрокаПодобрано.ДоговорКонтрагента=СтрокаПлатеж.ДоговорКонтрагента;
		СтрокаПодобрано.Сделка=СтрокаПлатеж.Сделка;
		СтрокаПодобрано.ДокументРасчетовСКонтрагентом=СтрокаПлатеж.ДокументРасчетовСКонтрагентом;
		СтрокаПодобрано.КурсВзаиморасчетов=СтрокаПлатеж.КурсВзаиморасчетов;
		СтрокаПодобрано.КратностьВзаиморасчетов=СтрокаПлатеж.КратностьВзаиморасчетов;
		СтрокаПодобрано.СтатьяДвиженияДенежныхСредств=СтрокаПлатеж.СтатьяДвиженияДенежныхСредств;
		
		Если ПодборПоСуммеПлатежа Тогда
			
			СтрокаПодобрано.СуммаПлатежа=ВсегоКПодбору;
			СтрокаПодобрано.СуммаВзаиморасчетов=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаПодобрано.СуммаПлатежа,ВалютаДокумента,СтрокаПодобрано.ДоговорКонтрагента.ВалютаВзаиморасчетов,
			КурсДокумента,СтрокаПодобрано.КурсВзаиморасчетов,
			КратностьДокумента,СтрокаПодобрано.КратностьВзаиморасчетов);
			
		Иначе
			
			СтрокаПодобрано.СуммаВзаиморасчетов=ВсегоКПодбору;
			СтрокаПодобрано.СуммаПлатежа=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаПодобрано.СуммаВзаиморасчетов,
			СтрокаПодобрано.ДоговорКонтрагента.ВалютаВзаиморасчетов,ВалютаДокумента,
			СтрокаПодобрано.КурсВзаиморасчетов,КурсДокумента,
			СтрокаПодобрано.КратностьВзаиморасчетов,КратностьДокумента);
			
		КонецЕсли;
		
	КонецЕсли;
	
	КонецЦикла;

	Возврат КопияРасшифровкаДок;
	
КонецФункции // ПодборПланируемыхДвижений()

Функция ПолучитьДоговорПоУмолчанию()
	
	СписокВидовДоговоров=УправлениеВзаиморасчетами.ОпределитьВидДоговораСКонтрагентом(ВидОперацииДок);
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда 
		
		ДоговорПоУмолчанию=Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		
	ИначеЕсли (НЕ СписокВидовДоговоров.НайтиПоЗначению(Контрагент.ОсновнойДоговорКонтрагента.ВидДоговора)=Неопределено)
		И (Контрагент.ОсновнойДоговорКонтрагента.Организация.Пустая() ИЛИ Контрагент.ОсновнойДоговорКонтрагента.Организация=Организация) Тогда
		
		ДоговорПоУмолчанию = Контрагент.ОсновнойДоговорКонтрагента;
		
	Иначе
		// Подбираем первый по списку договор контрагента, подходящий по виду операции
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка КАК ДоговорКонтрагента
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Владелец = &Владелец
		|	И ДоговорыКонтрагентов.ВидДоговора В(&ВидДоговора)
		|	И ДоговорыКонтрагентов.Организация = &Организация
		|АВТОУПОРЯДОЧИВАНИЕ";
		
		Запрос.УстановитьПараметр("Владелец",Контрагент);
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("ВидДоговора",СписокВидовДоговоров);
		
		Результат=Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			ДоговорПоУмолчанию=Результат.ДоговорКонтрагента;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ДоговорПоУмолчанию;
	
КонецФункции // ПолучитьДоговорПоУмолчанию()

Процедура ЗаполнитьРасшифровкуПоДолгам(ПодборПоСуммеПлатежа=Истина,КурсПоДоговору=Истина) Экспорт
	
	СформироватьСписокДолгов();
	
	СтавкаНДС=УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяСтавкаНДС");
	ВсегоПлатежей=0;
	
	РеглУчет=НЕ ОтражатьВБухгалтерскомУчете=Неопределено;
	
	Если Не СпособЗаполнения="ТЧ" Тогда
	
		Если СпособЗаполнения="ЛИФО" Тогда
			
			РасшифровкаПлатежа.Сортировать("ДатаВозникновения Убыв");
			
		КонецЕсли;
					
		Для Каждого СтрокаДолг Из РасшифровкаПлатежа Цикл
			
			Если ПодбиратьСумму Тогда
				
				Если ВсегоПлатежей+СтрокаДолг.СуммаПлатежа <= СуммаДляПодбора Тогда
					
					СуммаПлатежа=СтрокаДолг.СуммаПлатежа;
					СуммаВзаиморасчетов=СтрокаДолг.СуммаВзаиморасчетов;
					
					ВсегоПлатежей=ВсегоПлатежей+СуммаПлатежа;
					
				ИначеЕсли ВсегоПлатежей<СуммаДляПодбора Тогда
					
					СуммаПлатежа=СуммаДляПодбора-ВсегоПлатежей;
					СуммаВзаиморасчетов=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СуммаПлатежа,ВалютаДокумента,СтрокаДолг.ДоговорКонтрагента.ВалютаВзаиморасчетов,
																	КурсДокумента,СтрокаДолг.КурсВзаиморасчетов,
																	КратностьДокумента,СтрокаДолг.КратностьВзаиморасчетов);
					ВсегоПлатежей=ВсегоПлатежей+СуммаПлатежа;												
																	
				Иначе
					
					Прервать;
					
				КонецЕсли;
				
			Иначе
				
				СуммаПлатежа=СтрокаДолг.СуммаПлатежа;
				СуммаВзаиморасчетов=СтрокаДолг.СуммаВзаиморасчетов;
				
			КонецЕсли;
			
			СтрокаПлатеж=РасшифровкаПлатежаДок.Добавить();
			СтрокаПлатеж.ДоговорКонтрагента=СтрокаДолг.ДоговорКонтрагента;
			СтрокаПлатеж.Сделка=СтрокаДолг.Сделка;
			СтрокаПлатеж.ДокументРасчетовСКонтрагентом=СтрокаДолг.ДокументРасчетовСКонтрагентом;
			СтрокаПлатеж.СуммаПлатежа=СуммаПлатежа;
			СтрокаПлатеж.КурсВзаиморасчетов=СтрокаДолг.КурсВзаиморасчетов;
			СтрокаПлатеж.КратностьВзаиморасчетов=СтрокаДолг.КратностьВзаиморасчетов;
			СтрокаПлатеж.СуммаВзаиморасчетов=СуммаВзаиморасчетов;
			СтрокаПлатеж.СтатьяДвиженияДенежныхСредств = СтрокаПлатеж.ДоговорКонтрагента.ОсновнаяСтатьяДвиженияДенежныхСредств;
			УправлениеДенежнымиСредствами.УстановитьСтатьюДДСПоУмолчанию(СтрокаПлатеж, ВидОперацииДок);
			СтрокаПлатеж.Проект = СтрокаПлатеж.ДоговорКонтрагента.ОсновнойПроект;
			
		КонецЦикла;
		
		Если ПодбиратьСумму И ВсегоПлатежей<СуммаДляПодбора Тогда
			
			СтрокаПлатеж=РасшифровкаПлатежаДок.Добавить();
			СтрокаПлатеж.СуммаПлатежа=СуммаДляПодбора-ВсегоПлатежей;
			
			ДоговорПоУмолчанию=ПолучитьДоговорПоУмолчанию();
			
			Если Не ЗначениеЗаполнено(ДоговорПоУмолчанию) Тогда
				
				СтрокаПлатеж.КурсВзаиморасчетов=1;
				СтрокаПлатеж.КратностьВзаиморасчетов=1;
				СтрокаПлатеж.СуммаВзаиморасчетов=СтрокаПлатеж.СуммаПлатежа;
				
			Иначе
				
				СтрокаПлатеж.ДоговорКонтрагента=ДоговорПоУмолчанию;
				ВалютаВзаиморасчетов=СтрокаПлатеж.ДоговорКонтрагента.ВалютаВзаиморасчетов;
				СтруктураКурсаВзаиморасчетов = МодульВалютногоУчета.ПолучитьКурсВалюты(ВалютаВзаиморасчетов,ДатаДок);
				
				СтрокаПлатеж.КурсВзаиморасчетов      = СтруктураКурсаВзаиморасчетов.Курс;
				СтрокаПлатеж.КратностьВзаиморасчетов = СтруктураКурсаВзаиморасчетов.Кратность;
				
				
				СтрокаПлатеж.СуммаВзаиморасчетов=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаПлатеж.СуммаПлатежа,ВалютаДокумента,СтрокаПлатеж.ДоговорКонтрагента.ВалютаВзаиморасчетов,
										КурсДокумента,СтрокаПлатеж.КурсВзаиморасчетов,
										КратностьДокумента,СтрокаПлатеж.КратностьВзаиморасчетов);
										
				СтрокаПлатеж.СтатьяДвиженияДенежныхСредств = СтрокаПлатеж.ДоговорКонтрагента.ОсновнаяСтатьяДвиженияДенежныхСредств;
				УправлениеДенежнымиСредствами.УстановитьСтатьюДДСПоУмолчанию(СтрокаПлатеж, ВидОперацииДок);
			КонецЕсли;
			
		КонецЕсли;	
		
	Иначе
		
		Для Каждого СтрокаПлатеж Из РасшифровкаПлатежаДок Цикл

			СтруктураОтбора=Новый Структура;
			СтруктураОтбора.Вставить("ДоговорКонтрагента",СтрокаПлатеж.ДоговорКонтрагента);
			СтруктураОтбора.Вставить("Сделка",СтрокаПлатеж.Сделка);
			
			СтрокаДолг = ОбработкаТабличныхЧастей.НайтиСтрокуТабЧасти(РасшифровкаПлатежа, СтруктураОтбора);
			
			Если НЕ СтрокаДолг=Неопределено Тогда
				
				КурсВзаиморасчетов=?(СтрокаПлатеж.КурсВзаиморасчетов=0,СтрокаДолг.КурсВзаиморасчетов,СтрокаПлатеж.КурсВзаиморасчетов);
				КратностьВзаиморасчетов=?(СтрокаПлатеж.КратностьВзаиморасчетов=0,СтрокаДолг.КратностьВзаиморасчетов,СтрокаПлатеж.КратностьВзаиморасчетов);
				
				Если ПодбиратьСумму Тогда
					
					Если ВсегоПлатежей+СтрокаДолг.СуммаПлатежа <= СуммаДляПодбора Тогда
						
						СтрокаПлатеж.СуммаПлатежа=СтрокаДолг.СуммаПлатежа;
						ВсегоПлатежей=ВсегоПлатежей+СтрокаДолг.СуммаПлатежа;
						
					ИначеЕсли ВсегоПлатежей<СуммаДляПодбора Тогда
						
						СтрокаПлатеж.СуммаПлатежа=СуммаДляПодбора-ВсегоПлатежей;
						ВсегоПлатежей=СуммаДляПодбора;
						
					Иначе
						
						Прервать;
						
					КонецЕсли;
					
				Иначе
					
					СтрокаПлатеж.СуммаПлатежа=СтрокаДолг.СуммаПлатежа;
					
				КонецЕсли;
				
				СтрокаПлатеж.СуммаВзаиморасчетов=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаПлатеж.СуммаПлатежа,ВалютаДокумента,СтрокаПлатеж.ДоговорКонтрагента.ВалютаВзаиморасчетов,
															КурсДокумента,КурсВзаиморасчетов,
															КратностьДокумента,КратностьВзаиморасчетов);
																		
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ПодбиратьПланируемыеДвижения Тогда
		
		РасшифровкаПлатежаДок.Загрузить(ПодборПланируемыхДвижений(РасшифровкаПлатежаДок.Выгрузить(),ПодборПоСуммеПлатежа,КурсПоДоговору));
		
	КонецЕсли;
	
	Если РеглУчет Тогда
		
		Для Каждого СтрокаПлатеж Из РасшифровкаПлатежаДок Цикл
			
			УправлениеДенежнымиСредствами.ЗаполнитьРеквизитыРеглУчета(ДокументСсылка,СтрокаПлатеж, СтавкаНДС,ОтражатьВБухгалтерскомУчете);
			
		КонецЦикла;
		
	КонецЕсли;
			
КонецПроцедуры // ЗаполнитьРасшифровкуПоДолгам()

// Заполняет расшифровку расчетного документа по документам планируемого движения
// денежных средств

Процедура ЗаполнитьРасшифровкуПоПланам() Экспорт
	
	Если ИмяРегистраПлан="ЗаявкиНаРасходованиеСредств" Тогда
		ИмяДокумента="ЗаявкаНаРасходование";
	Иначе
		ИмяДокумента="ДокументПланирования";
	КонецЕсли;
	
	СформироватьСписокПланируемыхДвижений(ИмяДокумента);
	
	СтавкаНДС=УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяСтавкаНДС");
	ВсегоПлатежей=0;
	
	РеглУчет=НЕ ОтражатьВБухгалтерскомУчете=Неопределено;
	
	Если СпособЗаполнения="ЛИФО" Тогда
		
		ПланируемыеДвижения.Сортировать("ДатаДвижения Убыв");
		
	КонецЕсли;
	
	Для Каждого СтрокаПлан Из ПланируемыеДвижения Цикл
		
			КурсВзаиморасчетов      = СтрокаПлан.КурсВзаиморасчетов;
			КратностьВзаиморасчетов = СтрокаПлан.КратностьВзаиморасчетов;
			
		Если ПодбиратьСумму Тогда
			
			Если ВсегоПлатежей+СтрокаПлан.СуммаПлатежа <= СуммаДляПодбора Тогда
				
				СуммаПлатежа=СтрокаПлан.СуммаПлатежа;
				СуммаВзаиморасчетов=СтрокаПлан.СуммаВзаиморасчетов;
				
				ВсегоПлатежей=ВсегоПлатежей+СтрокаПлан.СуммаПлатежа;
				
			ИначеЕсли ВсегоПлатежей<СуммаДляПодбора Тогда
				
				СуммаПлатежа=СуммаДляПодбора-ВсегоПлатежей;
				СуммаВзаиморасчетов=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СуммаПлатежа,ВалютаДокумента,СтрокаПлан.ДоговорКонтрагента.ВалютаВзаиморасчетов,
						КурсДокумента,КурсВзаиморасчетов,
						КратностьДокумента,КратностьВзаиморасчетов);
						ВсегоПлатежей=СуммаДляПодбора;												
				
			Иначе
				
				Прервать;
				
			КонецЕсли;
			
		Иначе
			
			СуммаПлатежа=СтрокаПлан.СуммаПлатежа;
			СуммаВзаиморасчетов=СтрокаПлан.СуммаВзаиморасчетов;
			
		КонецЕсли;
		
		СтрокаПлатеж=РасшифровкаПлатежаДок.Добавить();
		
		СтрокаПлатеж.ДоговорКонтрагента=СтрокаПлан.ДоговорКонтрагента;
		СтрокаПлатеж.Сделка=СтрокаПлан.Сделка;
		СтрокаПлатеж.СуммаПлатежа=СуммаПлатежа;
		СтрокаПлатеж.КурсВзаиморасчетов=КурсВзаиморасчетов;
		СтрокаПлатеж.КратностьВзаиморасчетов=КратностьВзаиморасчетов;
		СтрокаПлатеж.СуммаВзаиморасчетов=СуммаВзаиморасчетов;
		СтрокаПлатеж.ДокументПланированияПлатежа=СтрокаПлан.ДокументПланирования;
		СтрокаПлатеж.СтатьяДвиженияДенежныхСредств=СтрокаПлан.СтатьяДвиженияДенежныхСредств;
		УправлениеДенежнымиСредствами.УстановитьСтатьюДДСПоУмолчанию(СтрокаПлатеж, ВидОперацииДок);
		СтрокаПлатеж.Проект=СтрокаПлан.Проект;
		СтрокаПлатеж.КурсВзаиморасчетовПлан=КурсВзаиморасчетов;
		СтрокаПлатеж.СуммаПлатежаПлан=СуммаПлатежа;
		
		Если РеглУчет Тогда
			
			УправлениеДенежнымиСредствами.ЗаполнитьРеквизитыРеглУчета(ДокументСсылка,СтрокаПлатеж, СтавкаНДС,ОтражатьВБухгалтерскомУчете);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьРасшифровкуПоПланам()

// Инициализируем отбор договоров
ПостроительОтбораДоговоров.Текст =
"ВЫБРАТЬ
|	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента,
|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток,
|	ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток
|ИЗ
|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(, Контрагент = &Контрагент {ДоговорКонтрагента.*}) КАК ВзаиморасчетыСКонтрагентамиОстатки";

Поле = ПостроительОтбораДоговоров.ДоступныеПоля.Найти("ДоговорКонтрагента");
Поле.Представление = "Договор";


#КонецЕсли

