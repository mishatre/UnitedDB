////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ОбменДаннымиКлиент.ФормаНастройкиПередЗакрытием(Отказ, ЭтаФорма);
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоОрганизациямПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементамФормы(Элементы.Организации);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоСкладамПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементамФормы(Элементы.Склады);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоКассамПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементамФормы(Элементы.Кассы);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоКассамККМПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементамФормы(Элементы.КассыККМ);
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступностьЭлементамФормы();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ

&НаКлиенте
Процедура УстановитьДоступностьЭлементамФормы(ТекущаяСтраница = Неопределено)
	
	Элементы.ПериодичностьПередачиСебестоимости.Доступность = Объект.ВыгружатьСебестоимость;
	Элементы.ЗарегистрироватьСебестоимость.Доступность      = Объект.ВыгружатьСебестоимость;
	Элементы.ДатаНачалаВыгрузкиСебестоимости.Доступность    = Объект.ВыгружатьСебестоимость;
	Элементы.Декорация.Доступность                          = Объект.ВыгружатьСебестоимость;
	
	ЗначенияФлаговИСтраниц = Новый Соответствие();
	ЗначенияФлаговИСтраниц.Вставить(Элементы.Организации, Объект.ИспользоватьОтборПоОрганизациям);
	ЗначенияФлаговИСтраниц.Вставить(Элементы.Склады, Объект.ИспользоватьОтборПоСкладам);
	ЗначенияФлаговИСтраниц.Вставить(Элементы.Кассы, Объект.ИспользоватьОтборПоКассам);
	ЗначенияФлаговИСтраниц.Вставить(Элементы.кассыККМ, Объект.ИспользоватьОтборПоКассамККМ);
	
	СтраницыОтбора = Новый Массив();
	Если Объект.ИспользоватьОтборПоОрганизациям Тогда
		СтраницыОтбора.Добавить(Элементы.Организации);
	КонецЕсли;
	Если Объект.ИспользоватьОтборПоСкладам Тогда
		СтраницыОтбора.Добавить(Элементы.Склады);
	КонецЕсли;
	Если Объект.ИспользоватьОтборПоСкладам Тогда
		СтраницыОтбора.Добавить(Элементы.Кассы);
	КонецЕсли;
	Если Объект.ИспользоватьОтборПоСкладам Тогда
		СтраницыОтбора.Добавить(Элементы.КассыККМ);
	КонецЕсли;
	Элементы.Страницы.Доступность = СтраницыОтбора.Количество() > 0.00;
	
	Элементы.ПериодичностьПередачиСебестоимости.Доступность = Объект.ВыгружатьСебестоимость;
	Элементы.ЗарегистрироватьСебестоимость.Доступность      = Объект.ВыгружатьСебестоимость;
	Элементы.ДатаНачалаВыгрузкиСебестоимости.Доступность    = Объект.ВыгружатьСебестоимость;
	Элементы.Декорация.Доступность                          = Объект.ВыгружатьСебестоимость;
	
	Если СтраницыОтбора.Количество() = 0.00 Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Организации.Доступность = Объект.ИспользоватьОтборПоОрганизациям;
	Элементы.Склады.Доступность = Объект.ИспользоватьОтборПоСкладам;
	Элементы.Кассы.Доступность = Объект.ИспользоватьОтборПоКассам;
	Элементы.КассыККМ.Доступность = Объект.ИспользоватьОтборПоКассамККМ;
	Если ТекущаяСтраница <> Неопределено Тогда
		Если ЗначенияФлаговИСтраниц[ТекущаяСтраница] = Ложь И Элементы.Страницы.ТекущаяСтраница = ТекущаяСтраница Тогда
			Элементы.Страницы.ТекущаяСтраница = СтраницыОтбора[0];
		ИначеЕсли ЗначенияФлаговИСтраниц[ТекущаяСтраница] = Истина Тогда
			Элементы.Страницы.ТекущаяСтраница = ТекущаяСтраница;
		КонецЕсли;
	Иначе
		Элементы.Страницы.ТекущаяСтраница = СтраницыОтбора[0];
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьСебестоимость(Команда)
	
	Если ЭтаФорма.Модифицированность Тогда
		Попытка
			Записать();
		Исключение
			Предупреждение("Изменения не зарегистрированы!");
			Возврат;
		КонецПопытки;
	КонецЕсли;
	
	ЗарегистрироватьИзмененияДляСебестоимости(Объект.Ссылка);
	Предупреждение("Изменения успешно зарегистрированы!");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгружатьСебестоимостьПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементамФормы();
	
КонецПроцедуры

&НаСервере
Процедура ЗарегистрироватьИзмененияДляСебестоимости(УзелОбменаОбъект) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА ПродажиСебестоимость.Регистратор ССЫЛКА Документ.КорректировкаСтоимостиСписанияТоваров
	|			ТОГДА НАЧАЛОПЕРИОДА(ПродажиСебестоимость.ДокументДвижения.Дата, ДЕНЬ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ПродажиСебестоимость.Период, ДЕНЬ)
	|	КОНЕЦ КАК Период
	|ИЗ
	|	РегистрНакопления.ПродажиСебестоимость КАК ПродажиСебестоимость
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ПродажиСебестоимость.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|					ИЛИ ПродажиСебестоимость.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|				ТОГДА ПродажиСебестоимость.Регистратор.Склад
	|			КОГДА ПродажиСебестоимость.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|				ТОГДА ВЫБОР
	|						КОГДА ПродажиСебестоимость.Регистратор.ВидПоступления = ЗНАЧЕНИЕ(Перечисление.ВидыПоступленияТоваров.НаСклад)
	|							ТОГДА ПродажиСебестоимость.Регистратор.СкладОрдер
	|						ИНАЧЕ ПродажиСебестоимость.Регистратор.СкладОрдер.Склад
	|					КОНЕЦ
	|			КОГДА ПродажиСебестоимость.Регистратор ССЫЛКА Документ.КорректировкаСтоимостиСписанияТоваров
	|				ТОГДА ВЫБОР
	|						КОГДА ПродажиСебестоимость.ДокументДвижения ССЫЛКА Документ.РеализацияТоваровУслуг
	|								ИЛИ ПродажиСебестоимость.ДокументДвижения ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|							ТОГДА ПродажиСебестоимость.Регистратор.Склад
	|						КОГДА ПродажиСебестоимость.ДокументДвижения ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|							ТОГДА ВЫБОР
	|									КОГДА ПродажиСебестоимость.ДокументДвижения.ВидПоступления = ЗНАЧЕНИЕ(Перечисление.ВидыПоступленияТоваров.НаСклад)
	|										ТОГДА ПродажиСебестоимость.ДокументДвижения.СкладОрдер
	|									ИНАЧЕ ПродажиСебестоимость.ДокументДвижения.СкладОрдер.Склад
	|								КОНЕЦ
	|					КОНЕЦ
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		КОНЕЦ В (&МассивСкладов)
	|	И ПродажиСебестоимость.Регистратор.Дата > НАЧАЛОПЕРИОДА(&ДатаНачала, ДЕНЬ)";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДЕНЬ", УзелОбменаОбъект.ПериодичностьПередачиСебестоимости);
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Если УзелОбменаОбъект.ИспользоватьОтборПоСкладам Тогда
		Запрос.УстановитьПараметр("МассивСкладов", УзелОбменаОбъект.Склады.Выгрузить().ВыгрузитьКолонку("Склад"));
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА ПродажиСебестоимость.Регистратор ССЫЛКА Документ.КорректировкаСтоимостиСписанияТоваров
		|			ТОГДА НАЧАЛОПЕРИОДА(ПродажиСебестоимость.ДокументДвижения.Дата, ДЕНЬ)
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(ПродажиСебестоимость.Период, ДЕНЬ)
		|	КОНЕЦ КАК Период
		|ИЗ
		|	РегистрНакопления.ПродажиСебестоимость КАК ПродажиСебестоимость
		|ГДЕ
		|	ПродажиСебестоимость.Регистратор.Дата > НАЧАЛОПЕРИОДА(&ДатаНачала, ДЕНЬ)";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ДЕНЬ", УзелОбменаОбъект.ПериодичностьПередачиСебестоимости);
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаНачала"   , УзелОбменаОбъект.ДатаНачалаВыгрузкиСебестоимости);
	ТаблицаПериодов = Запрос.Выполнить().Выгрузить();
	ЗарегистрироватьИзмененияПериодаВыгрузкиСебестоимости(ТаблицаПериодов, УзелОбменаОбъект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ЗарегистрироватьИзмененияПериодаВыгрузкиСебестоимости(ТаблицаПериодов, Узел)
	
	НаборЗаписей = РегистрыСведений.ПериодыВыгрузкиСебестоимостиВРозницу.СоздатьНаборЗаписей();
	
	Для Каждого СтрокаПериод Из ТаблицаПериодов Цикл
		
		НаборЗаписей.Отбор.Дата.Установить(СтрокаПериод.Период);
		
		НаборЗаписей.Прочитать();
		
		НовыйНабор = НаборЗаписей.Количество() = 0;
		
		Если НовыйНабор Тогда
			
			НоваяЗапись      = НаборЗаписей.Добавить();
			НоваяЗапись.Дата = СтрокаПериод.Период;
			
			НаборЗаписей.Записать();
			
		КонецЕсли;
		
		ПланыОбмена.ЗарегистрироватьИзменения(Узел, НаборЗаписей);
		
	КонецЦикла;
	
КонецПроцедуры