
Перем мНовыеГруппы;

// Функция выполняет проверку реквизитов объекта, обязательных для заполнения.
//
// Возвращаемое значение:
//   Строка - описание не заполненных полей.
//
Функция ПроверитьЗаполнениеОбязательныхПолей() Экспорт

	ТекстОшибок = "";
	
	Если НЕ ЗначениеЗаполнено(АдресЭлектроннойПочты) Тогда
		ТекстОшибок = ТекстОшибок + Символы.ПС + "Не указан адрес (E-mail) учетной записи.";
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(SMTPСервер) Тогда
		ТекстОшибок = ТекстОшибок + Символы.ПС + "Не указано имя SMTP сервера.";
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(ПортSMTP) Тогда
		ТекстОшибок = ТекстОшибок + Символы.ПС + "Не указан порт SMTP сервера.";
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(POP3Сервер) Тогда
		ТекстОшибок = ТекстОшибок + Символы.ПС + "Не указано имя POP3 сервера.";
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(ПортPOP3) Тогда
		ТекстОшибок = ТекстОшибок + Символы.ПС + "Не указан порт POP3 сервера.";
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(Логин) Тогда
		ТекстОшибок = ТекстОшибок + Символы.ПС + "Не указано имя пользователя для доступа к почтовому серверу.";
	КонецЕсли;
	
	Возврат СокрЛП(ТекстОшибок);

КонецФункции

// Функция определяет, есть ли ссылки в документах ЭлектронноеПисьмо
//  на группу записей электронных писем
//
// Параметры
//  ГруппаУчетнойЗаписи - СправочникСсылка.ГруппыПисемУчетнойЗаписи
//
// Возвращаемое значение:
//   Булево, если есть ссылки
//
Функция ЕстьСсылки(ГруппаУчетнойЗаписи)

	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ЭлектронноеПисьмо.Ссылка
	|ИЗ
	|	Документ.ЭлектронноеПисьмо КАК ЭлектронноеПисьмо
	|ГДЕ
	|	ЭлектронноеПисьмо.ГруппаУчетнойЗаписи = &ГруппаУчетнойЗаписи
	|";
	
	Запрос.УстановитьПараметр("ГруппаУчетнойЗаписи", ГруппаУчетнойЗаписи);
	
	Возврат НЕ Запрос.Выполнить().Пустой();

КонецФункции

// Процедура, обработчик события ПередЗаписью объекта
//
Процедура ПередЗаписью(Отказ)
	
	Если НЕ ОбменДанными.Загрузка Тогда
	
		СтрокаОшибки = "Учетная запись """ + Наименование + "<" + АдресЭлектроннойПочты + ">" + " не записана.";
		
		мНовыеГруппы = Неопределено;
		
		Если НЕ Константы.ИспользованиеВстроенногоПочтовогоКлиента.Получить() Тогда
			ОбщегоНазначения.СообщитьОбОшибке("В настройках учета не установлено использование встроенного почтового клиента.",, СтрокаОшибки);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Наименование) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указано представление учетной записи.",, СтрокаОшибки);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ГруппаУдаленные) И ЕстьСсылки(ГруппаУдаленные) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(("В группе """ + ГруппаУдаленные + """ есть электронные письма. Данную группу нельзя устанавливать в качестве группы удаленных писем."),, СтрокаОшибки);
			Отказ = Истина;
			Возврат;
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ГруппаЧерновики) И ЕстьСсылки(ГруппаЧерновики) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(("В группе """ + ГруппаЧерновики + """ есть электронные письма. Данную группу нельзя устанавливать в качестве группы черновиков."),, СтрокаОшибки);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Если ЭтоНовый() Тогда
			
			УстановитьСсылкуНового(Справочники.УчетныеЗаписиЭлектроннойПочты.ПолучитьСсылку(Новый УникальныйИдентификатор));
			
			мНовыеГруппы = Истина;
			ЭтотОбъект.ГруппаВходящие  = Справочники.ГруппыПисемЭлектроннойПочты.ПолучитьСсылку(Новый УникальныйИдентификатор);
			ЭтотОбъект.ГруппаИсходящие = Справочники.ГруппыПисемЭлектроннойПочты.ПолучитьСсылку(Новый УникальныйИдентификатор);
			ЭтотОбъект.ГруппаУдаленные = Справочники.ГруппыПисемЭлектроннойПочты.ПолучитьСсылку(Новый УникальныйИдентификатор);
			ЭтотОбъект.ГруппаЧерновики = Справочники.ГруппыПисемЭлектроннойПочты.ПолучитьСсылку(Новый УникальныйИдентификатор);
			
		Иначе
			
			
			Если ИспользоватьКлассификациюПисемПоПредметам <> Ссылка.ИспользоватьКлассификациюПисемПоПредметам Тогда
				
				Выборка = Справочники.ГруппыПисемЭлектроннойПочты.Выбрать(, Ссылка);
				
				Пока Выборка.Следующий() И НЕ Отказ Цикл
				
					Объект = Выборка.ПолучитьОбъект();
					Объект.ИспользоватьПредметыПисем = ЭтотОбъект.ИспользоватьКлассификациюПисемПоПредметам;
					Попытка
						Объект.Записать();
					Исключение
						ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, СтрокаОшибки);
						Отказ = Истина;
					КонецПопытки;
				
				КонецЦикла; 
				
			КонецЕсли;

		КонецЕсли; 
		
		// Проверим предопределенные группы, в них не должно быть одинаковых значений
		ТаблицаПроверкиГрупп = Новый ТаблицаЗначений;
		ТаблицаПроверкиГрупп.Колонки.Добавить("Группа");
		ТаблицаПроверкиГрупп.Колонки.Добавить("Количество");
		
		Если ЗначениеЗаполнено(ГруппаВходящие) Тогда
			НоваяСтрока = ТаблицаПроверкиГрупп.Добавить();
			НоваяСтрока.Группа     = ГруппаВходящие;
			НоваяСтрока.Количество = 1;
		КонецЕсли; 
		Если ЗначениеЗаполнено(ГруппаИсходящие) Тогда
			НоваяСтрока = ТаблицаПроверкиГрупп.Добавить();
			НоваяСтрока.Группа     = ГруппаИсходящие;
			НоваяСтрока.Количество = 1;
		КонецЕсли; 
		Если ЗначениеЗаполнено(ГруппаУдаленные) Тогда
			НоваяСтрока = ТаблицаПроверкиГрупп.Добавить();
			НоваяСтрока.Группа     = ГруппаУдаленные;
			НоваяСтрока.Количество = 1;
		КонецЕсли; 
		Если ЗначениеЗаполнено(ГруппаЧерновики) Тогда
			НоваяСтрока = ТаблицаПроверкиГрупп.Добавить();
			НоваяСтрока.Группа     = ГруппаЧерновики;
			НоваяСтрока.Количество = 1;
		КонецЕсли;
		
		Если ТаблицаПроверкиГрупп.Количество() > 0 Тогда
			ТаблицаПроверкиГрупп.Свернуть("Группа", "Количество");
			Для каждого СтрокаТаблицы Из ТаблицаПроверкиГрупп Цикл
				Если СтрокаТаблицы.Количество > 1 Тогда
					ОбщегоНазначения.СообщитьОбОшибке("У предопределенных групп Входящие, Исходящие, Удаленные и Черновики не должно быть повторяющихся значений.",, СтрокаОшибки);
					Отказ = Истина;
					Возврат;
				КонецЕсли; 
			КонецЦикла; 
		КонецЕсли; 

		Если АвтоПолучениеОтправкаСообщений Тогда
			Если НЕ ЗначениеЗаполнено(ОтветственныйЗаАвтоПолучениеОтправкуСообщений) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Не указан ответственный за автополучение/отправку писем.",, СтрокаОшибки);
				Отказ = Истина;
			ИначеЕсли НЕ ЗначениеЗаполнено(ИнтервалАвтоПолученияОтправкиСообщений) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Не указан интервал автополучения/отправки писем.",, СтрокаОшибки);
				Отказ = Истина;
			Иначе
				СтрокаТЧ = ДоступКУчетнойЗаписи.Найти(ОтветственныйЗаАвтоПолучениеОтправкуСообщений, "Пользователь");
				Если СтрокаТЧ = Неопределено Тогда
					Отказ = Истина;
				Иначе
					Если НЕ СтрокаТЧ.Запись Тогда
						Отказ = Истина;
					КонецЕсли; 
				КонецЕсли; 
				Если Отказ Тогда
					ОбщегоНазначения.СообщитьОбОшибке("У ответственного за автополучение/отправку нет прав на запись писем.",, СтрокаОшибки);
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли; 

		Если НЕ ПометкаУдаления Тогда
			Проверка = СокрЛП(ПроверитьЗаполнениеОбязательныхПолей());
			Если ЗначениеЗаполнено(Проверка) Тогда
				ОбщегоНазначения.СообщитьОбОшибке(Проверка,, СтрокаОшибки);
				Отказ = Истина;
			КонецЕсли; 
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

// Процедура, обработчик события ПриЗаписи объекта
//
Процедура ПриЗаписи(Отказ)
	
	Если мНовыеГруппы = Истина И НЕ ОбменДанными.Загрузка Тогда
	
		СтрокаОшибки = "Учетная запись """ + Наименование + "<" + АдресЭлектроннойПочты + ">" + " не записана.";
		
		// Входящие
		НовыйОбъект = Справочники.ГруппыПисемЭлектроннойПочты.СоздатьЭлемент();
		НовыйОбъект.УстановитьСсылкуНового(ГруппаВходящие);
		НовыйОбъект.Владелец                  = Ссылка;
		НовыйОбъект.Наименование              = "Входящие";
		НовыйОбъект.ИспользоватьПредметыПисем = ИспользоватьКлассификациюПисемПоПредметам;
		Попытка
			НовыйОбъект.Записать();
		Исключение
			ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, СтрокаОшибки);
			Отказ = Истина;
		КонецПопытки;
		
		// Исходящие
		НовыйОбъект = Справочники.ГруппыПисемЭлектроннойПочты.СоздатьЭлемент();
		НовыйОбъект.УстановитьСсылкуНового(ГруппаИсходящие);
		НовыйОбъект.Владелец                  = Ссылка;
		НовыйОбъект.Наименование              = "Исходящие";
		НовыйОбъект.ИспользоватьПредметыПисем = ИспользоватьКлассификациюПисемПоПредметам;
		Попытка
			НовыйОбъект.Записать();
		Исключение
			ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, СтрокаОшибки);
			Отказ = Истина;
		КонецПопытки;
		
		// Удаленные
		НовыйОбъект = Справочники.ГруппыПисемЭлектроннойПочты.СоздатьЭлемент();
		НовыйОбъект.УстановитьСсылкуНового(ГруппаУдаленные);
		НовыйОбъект.Владелец                  = Ссылка;
		НовыйОбъект.Наименование              = "Удаленные";
		НовыйОбъект.ИспользоватьПредметыПисем = ИспользоватьКлассификациюПисемПоПредметам;
		Попытка
			НовыйОбъект.Записать();
		Исключение
			ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, СтрокаОшибки);
			Отказ = Истина;
		КонецПопытки;
		
		// Черновики
		НовыйОбъект = Справочники.ГруппыПисемЭлектроннойПочты.СоздатьЭлемент();
		НовыйОбъект.УстановитьСсылкуНового(ГруппаЧерновики);
		НовыйОбъект.Владелец                  = Ссылка;
		НовыйОбъект.Наименование              = "Черновики";
		НовыйОбъект.ИспользоватьПредметыПисем = ИспользоватьКлассификациюПисемПоПредметам;
		Попытка
			НовыйОбъект.Записать();
		Исключение
			ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, СтрокаОшибки);
			Отказ = Истина;
		КонецПопытки;
	
	КонецЕсли; 
	
КонецПроцедуры
