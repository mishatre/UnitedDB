#Если Клиент Тогда

Перем мСерверИсточник;

Функция ПолучитьПараметрыСервера(ПерваяПопытка = Ложь, ЗаголовокДляАвторизации = "", СообщениеДляАвторизации = "")

	Результат = Истина;

	мПараметрыСервера = Новый Массив;

	// Восстановим сохраненные значения
	Восстановлено_КодДоступаНаСервер     = ВосстановитьЗначение("КодДоступаНаСервер");
	Если ТипЗнч(Восстановлено_КодДоступаНаСервер) = Тип("Строка") И Не ПустаяСтрока(Восстановлено_КодДоступаНаСервер) Тогда
		КодДоступаНаСервер = Восстановлено_КодДоступаНаСервер;
	КонецЕсли;

	Восстановлено_ПарольДоступаНаСервер  = ВосстановитьЗначение("ПарольДоступаНаСервер");
	Если ТипЗнч(Восстановлено_ПарольДоступаНаСервер) = Тип("Строка") Тогда
		ПарольДоступаНаСервер = Восстановлено_ПарольДоступаНаСервер;
	КонецЕсли;

	Восстановлено_ЗапомнитьКодИПароль = ВосстановитьЗначение("ЗапомнитьКодИПароль");
	Если ТипЗнч(Восстановлено_ЗапомнитьКодИПароль) = Тип("Булево") Тогда
		ЗапомнитьКодИПароль = Восстановлено_ЗапомнитьКодИПароль;
	КонецЕсли;

	// Если это не первая попытка получить данные, значит сохранненые данные неверны и 
	// требуется перезапросить их у пользователя
	Если Не ПерваяПопытка Тогда
		ФормаПараметрыДоступаНаСервер = ЭтотОбъект.ПолучитьФорму("ФормаПараметрыДоступаНаСервер");
		ФормаПараметрыДоступаНаСервер.ПризнакОткрытияФормыИзЯзыка = Истина;

		Если ЗапомнитьКодИПароль = Истина Или ЗначениеЗаполнено(КодДоступаНаСервер) Тогда
			Если ТипЗнч(КодДоступаНаСервер) = Тип("Строка") Тогда
				ФормаПараметрыДоступаНаСервер.КодДоступаНаСервер = КодДоступаНаСервер;
			КонецЕсли;
			Если ТипЗнч(ПарольДоступаНаСервер) = Тип("Строка") Тогда
				ФормаПараметрыДоступаНаСервер.ПарольДоступаНаСервер = ПарольДоступаНаСервер;
			КонецЕсли;
			Если ТипЗнч(ЗапомнитьКодИПароль) = Тип("Булево") Тогда
				ФормаПараметрыДоступаНаСервер.ЗапомнитьКодИПароль = ЗапомнитьКодИПароль;
			КонецЕсли;
		КонецЕсли;

		ФормаПараметрыДоступаНаСервер.ЭлементыФормы.Найти("НадписьУкажитеПараметры").Заголовок =
		  ?(ПустаяСтрока(СообщениеДляАвторизации),
		    "Укажите логин/код и пароль для доступа к серверу """ + мСерверИсточник + """",
		    СообщениеДляАвторизации);

		Если Не ПустаяСтрока(ЗаголовокДляАвторизации) Тогда
			ФормаПараметрыДоступаНаСервер.ЭлементыФормы.Найти("НадписьЗаголовок").Заголовок = ЗаголовокДляАвторизации;
		КонецЕсли;

		Ответ = ФормаПараметрыДоступаНаСервер.ОткрытьМодально();
		Результат = (Ответ = КодВозвратаДиалога.ОК);
	КонецЕсли;

	Возврат Результат;

КонецФункции

Функция ПолучитьПараметрыПрокси(ПерваяПопытка = Ложь)

	Результат = Истина;

	мПараметрыСервера = Новый Массив;

	// Восстановим сохраненные значения
	Восстановлено_ИмяПользователя     = ВосстановитьЗначение("ИмяПользователя");
	Если ТипЗнч(Восстановлено_ИмяПользователя) = Тип("Строка") И Не ПустаяСтрока(Восстановлено_ИмяПользователя) Тогда
		ИмяПользователя = Восстановлено_ИмяПользователя;
	КонецЕсли;

	Восстановлено_ПарольПользователя  = ВосстановитьЗначение("ПарольПользователя");
	Если ТипЗнч(Восстановлено_ПарольПользователя) = Тип("Строка") Тогда
		ПарольПользователя = Восстановлено_ПарольПользователя;
	КонецЕсли;

	Восстановлено_ЗапомнитьИмяИПароль = ВосстановитьЗначение("ЗапомнитьИмяИПароль");
	Если ТипЗнч(Восстановлено_ЗапомнитьИмяИПароль) = Тип("Булево") Тогда
		ЗапомнитьИмяИПароль = Восстановлено_ЗапомнитьИмяИПароль;
	КонецЕсли;

	// Если это первая попытка получить данные, значит сохранненые данные неверны и 
	// требуется перезапросить их у пользователя
	Если Не ПерваяПопытка Тогда
		ФормаПараметрыПрокси = ЭтотОбъект.ПолучитьФорму("ФормаПараметрыПрокси");
		ФормаПараметрыПрокси.ПризнакОткрытияФормыИзЯзыка = Истина;

		Если ЗапомнитьИмяИПароль = Истина Или ЗначениеЗаполнено(ИмяПользователя) Тогда
			Если ТипЗнч(ИмяПользователя) = Тип("Строка") Тогда
				ФормаПараметрыПрокси.ИмяПользователя = ИмяПользователя;
			КонецЕсли;
			Если ТипЗнч(ПарольПользователя) = Тип("Строка") Тогда
				ФормаПараметрыПрокси.ПарольПользователя = ПарольПользователя;
			КонецЕсли;
			Если ТипЗнч(ЗапомнитьИмяИПароль) = Тип("Булево") Тогда
				ФормаПараметрыПрокси.ЗапомнитьИмяИПароль = ЗапомнитьИмяИПароль;
			КонецЕсли;
		КонецЕсли;

		Ответ = ФормаПараметрыПрокси.ОткрытьМодально();
		Результат = (Ответ = КодВозвратаДиалога.ОК);
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Функция получает файлы с сервера с указанными параметрами и сохраняет на диск
//
// Параметры:
//  HTTP - HTTPСоединение, если приходится использовать данную функцию в цикле, то тут передается
//         переменная с созданным в предыдущей итерации цикла HTTPСоединением
// СерверИсточникПараметр - Строка, сервер, с которого необходимо получить файлы
// СтрокаПараметраПолученияПараметр - Строка, адрес ресурса на сервере.
// ИмяВходящегоФайлаПараметр - Имя файла, в который помещаются данные полученного ресурса.
//
// Возвращаемое значение:
//  Булево - Успешно получены файлы или нет.
//
Функция ЗапроситьФайлыССервера(СерверИсточникПараметр, СтрокаПараметраПолученияПараметр, ИмяВходящегоФайлаПараметр,
                               HTTP = Неопределено, НеобходимаАвторизация = Ложь, 
                               ЛогинПрокси = "", ПарольПрокси = "", ЛогинСервера = "", ПарольСервера = "",
                               ЗаголовокДляАвторизации = "", СообщениеДляАвторизации = "", СообщениеОбОшибке = "") Экспорт

	Результат = Истина;
	ПроксиСервер = Неопределено;
	мСерверИсточник = СерверИсточникПараметр;

	СерверИсточник           = СерверИсточникПараметр;
	СтрокаПараметраПолучения = СтрокаПараметраПолученияПараметр;
	ИмяВходящегоФайла        = ИмяВходящегоФайлаПараметр;

	ПерваяПопыткаПрокси   = Истина;
	ПерваяПопыткаСервера  = Истина;
	ПерваяПопыткаПолучить = Не (HTTP = Неопределено);

	Если ТипЗнч(HTTP) <> Тип("HTTPСоединение") Тогда
		Если НеобходимаАвторизация И ПолучитьПараметрыСервера(ПерваяПопыткаСервера, ЗаголовокДляАвторизации, СообщениеДляАвторизации) Тогда
			Если ПустаяСтрока(КодДоступаНаСервер) Тогда
				КодДоступаНаСервер = ЛогинСервера;
			Иначе
				ЛогинСервера = КодДоступаНаСервер;
			КонецЕсли;
			Если ПустаяСтрока(ПарольДоступаНаСервер) Тогда
				ПарольДоступаНаСервер = ПарольСервера;
			Иначе
				ПарольСервера = ПарольДоступаНаСервер;
			КонецЕсли;

			HTTP = Новый HTTPСоединение(СерверИсточник, , КодДоступаНаСервер, ПарольДоступаНаСервер);
		Иначе
			HTTP = Новый HTTPСоединение(СерверИсточник);
		КонецЕсли;
	КонецЕсли;

	Пока Истина Цикл
		Попытка
			HTTP.Получить(СтрокаПараметраПолучения, ИмяВходящегоФайла);
			Результат = Истина;
			Прервать;
		Исключение
			ОписаниеОшибкиСоединения = ПолучитьПричинуОшибки(ИнформацияОбОшибке()).Описание;
		КонецПопытки;

		Если Найти(ОписаниеОшибкиСоединения, "407") <> 0
		   И (Найти(НРег(ОписаниеОшибкиСоединения), "authentication") <> 0
		 Или  Найти(НРег(ОписаниеОшибкиСоединения), "аутентификация") <> 0) Тогда
			Если Не ПустаяСтрока(ИмяПользователя) Тогда
				Сообщить("Ошибка! Указаны неверные имя пользователя или пароль прокси-сервера", СтатусСообщения.Важное);
			КонецЕсли;

			Если ПолучитьПараметрыПрокси(ПерваяПопыткаПрокси) Тогда
				ПерваяПопыткаПрокси = Ложь;

				Если ПустаяСтрока(ИмяПользователя) Тогда
					ИмяПользователя = ЛогинПрокси;
				Иначе
					ЛогинПрокси = ИмяПользователя;
				КонецЕсли;
				Если ПустаяСтрока(ПарольПользователя) Тогда
					ПарольПользователя = ПарольПрокси;
				Иначе
					ПарольПрокси = ПарольПользователя;
				КонецЕсли;

				ПроксиСервер = Новый ИнтернетПрокси();
				ПроксиСервер.Пользователь = ИмяПользователя;
				ПроксиСервер.Пароль       = ПарольПользователя;

				Если НеобходимаАвторизация И ПолучитьПараметрыСервера(ПерваяПопыткаСервера, ЗаголовокДляАвторизации, СообщениеДляАвторизации) Тогда
					Если ПустаяСтрока(КодДоступаНаСервер) Тогда
						КодДоступаНаСервер = ЛогинСервера;
					Иначе
						ЛогинСервера = КодДоступаНаСервер;
					КонецЕсли;
					Если ПустаяСтрока(ПарольДоступаНаСервер) Тогда
						ПарольДоступаНаСервер = ПарольСервера;
					Иначе
						ПарольСервера = ПарольДоступаНаСервер;
					КонецЕсли;

					HTTP = Новый HTTPСоединение(СерверИсточник, , КодДоступаНаСервер, ПарольДоступаНаСервер, ПроксиСервер);
				Иначе
					HTTP = Новый HTTPСоединение(СерверИсточник, , , , ПроксиСервер);
				КонецЕсли;
			Иначе
				HTTP = Неопределено;
				СообщениеОбОшибке = "";
				Результат = Ложь;
				Прервать;
			КонецЕсли;
		ИначеЕсли Найти(НРег(ОписаниеОшибкиСоединения), "ошибка аутентификации при доступе к ресурсу") <> 0 Тогда
			Если Не ПустаяСтрока(КодДоступаНаСервер) Тогда
				Сообщить("Ошибка! Указаны неверные логин/код или пароль доступа на сервер", СтатусСообщения.Важное);
			КонецЕсли;

			Если ПолучитьПараметрыСервера(ПерваяПопыткаСервера, ЗаголовокДляАвторизации, СообщениеДляАвторизации) Тогда
				ПерваяПопыткаСервера = Ложь;

				Если ПустаяСтрока(КодДоступаНаСервер) Тогда
					КодДоступаНаСервер = ЛогинСервера;
				Иначе
					ЛогинСервера = КодДоступаНаСервер;
				КонецЕсли;
				Если ПустаяСтрока(ПарольДоступаНаСервер) Тогда
					ПарольДоступаНаСервер = ПарольСервера;
				Иначе
					ПарольСервера = ПарольДоступаНаСервер;
				КонецЕсли;

				Если ТипЗнч(ПроксиСервер) <> Тип("ИнтернетПрокси") Тогда
					HTTP = Новый HTTPСоединение(СерверИсточник, , КодДоступаНаСервер, ПарольДоступаНаСервер);
				Иначе
					HTTP = Новый HTTPСоединение(СерверИсточник, , КодДоступаНаСервер, ПарольДоступаНаСервер, ПроксиСервер);
				КонецЕсли;
			Иначе
				HTTP = Неопределено;
				СообщениеОбОшибке = "";
				Результат = Ложь;
				Прервать;
			КонецЕсли;
		Иначе
			HTTP = Неопределено;

			Если ПерваяПопыткаПолучить Тогда
				Если НеобходимаАвторизация И ПолучитьПараметрыСервера(ПерваяПопыткаСервера, ЗаголовокДляАвторизации, СообщениеДляАвторизации) Тогда
					Если ПустаяСтрока(КодДоступаНаСервер) Тогда
						КодДоступаНаСервер = ЛогинСервера;
					Иначе
						ЛогинСервера = КодДоступаНаСервер;
					КонецЕсли;
					Если ПустаяСтрока(ПарольДоступаНаСервер) Тогда
						ПарольДоступаНаСервер = ПарольСервера;
					Иначе
						ПарольСервера = ПарольДоступаНаСервер;
					КонецЕсли;

					HTTP = Новый HTTPСоединение(СерверИсточник, , КодДоступаНаСервер, ПарольДоступаНаСервер);
				Иначе
					HTTP = Новый HTTPСоединение(СерверИсточник);
				КонецЕсли;

				ПерваяПопыткаПолучить = Ложь;
			Иначе
				СообщениеОбОшибке = ОписаниеОшибкиСоединения;
				Результат = Ложь;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Возврат Результат;

КонецФункции

Функция ПолучитьПричинуОшибки(ИнформацияОбОшибке)

	ПричинаОшибки = ИнформацияОбОшибке.Причина;
	Если ПричинаОшибки = Неопределено Тогда
		Возврат ИнформацияОбОшибке;
	КонецЕсли;

	Пока ПричинаОшибки.Причина <> Неопределено Цикл
		ПричинаОшибки = ПричинаОшибки.Причина;
	КонецЦикла;

	Возврат ПричинаОшибки;

КонецФункции

мСерверИсточник = "";

#КонецЕсли