#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// Обработчики выгрузки конвертации УправлениеТорговлей --> Розница {be4d41b7-832e-11e3-ab51-50465d9e27f9}                                                                                           
// 
// Данный модуль содержит экспортные процедуры обработчиков событий конвертации 
// и предназначен для отладки правил обмена. После отладки рекомендуется
// скопировать текст модуля в буфер обмена и импортировать его в базу
// "Конвертация данных".
//
////////////////////////////////////////////////////////////////////////////////
// ИСПОЛЬЗУЕМЫЕ СОКРАЩЕНИЯ ИМЕН ПЕРЕМЕННЫХ (АББРЕВИАТУРЫ)
//
//  ПКО  - правило конвертации объектов
//  ПКС  - правило конвертации свойств объектов
//  ПКГС - правило конвертации группы свойств объектов
//  ПВД  - правило выгрузки данных
//  ПОД  - правило очистки данных

////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ ОБРАБОТКИ
// Данный раздел изменять запрещено.

Перем Параметры;
Перем Алгоритмы;
Перем Запросы;
Перем УзелДляОбмена;
Перем ОбщиеПроцедурыФункции;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОНВЕРТАЦИИ (ГЛОБАЛЬНЫЕ)
// В данном разделе разрешено изменять реализацию процедур.

Процедура Конвертация_ПередВыгрузкойДанных(ФайлОбмена, Отказ) Экспорт

	Параметры.Вставить("ВыгружатьСебестоимость", УзелДляОбмена.ВыгружатьСебестоимость);
	Параметры.Вставить("ДатаНачалаВыгрузкиСебестоимости",УзелДляОбмена.ДатаНачалаВыгрузкиСебестоимости);
	Параметры.Вставить("ПериодичностьПередачиСебестоимости",УзелДляОбмена.ПериодичностьПередачиСебестоимости);
	Параметры.Вставить("УзелДляОбмена",УзелДляОбмена.Ссылка);
	Параметры.Вставить("ИспользоватьОтборПоСкладам",УзелДляОбмена.ИспользоватьОтборПоСкладам);
	Если УзелДляОбмена.ИспользоватьОтборПоСкладам Тогда
		Параметры.Вставить("Склады",УзелДляОбмена.Склады.Выгрузить());
	КонецЕсли;
	Параметры.Вставить("ИспользоватьХарактеристикиНоменклатуры", Константы.ИспользоватьХарактеристикиНоменклатуры.Получить());

КонецПроцедуры

Процедура Конвертация_ПослеВыгрузкиДанных(ФайлОбмена) Экспорт

	Если Параметры.ВыгружатьСебестоимость Тогда
		ВыгрузитьСебестоимость (Параметры);
	КонецЕсли;

КонецПроцедуры

Процедура Конвертация_ПередКонвертациейОбъекта(ФайлОбмена, Источник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, ПКО,
	ВыгруженныеОбъекты, Отказ, КлючВыгружаемыхДанных, ЗапоминатьВыгруженные,
	НеЗамещатьОбъектПриЗагрузке, ВсеОбъектыВыгружены,ТолькоПолучитьУзелСсылки,
	Приемник, РежимЗаписи, РежимПроведения, НеСоздаватьЕслиНеНайден) Экспорт

	Если ТипЗнч(ВходящиеДанные) <> Тип("Структура") Тогда
		ВходящиеДанные = Новый Структура;
	КонецЕсли;

КонецПроцедуры

Процедура Конвертация_ПередОтправкойИнформацииОбУдалении(Ссылка, Отказ) Экспорт

	СсылкаНаУдаляемыйОбъект = Ссылка;
	Если ТипЗнч(СсылкаНаУдаляемыйОбъект) = Тип("ДокументСсылка.ВнутреннееПеремещениеНаличныхДенежныхСредств") Тогда
		ЗаписатьВФайлУдалениеОбъекта(СсылкаНаУдаляемыйОбъект, "ДокументСсылка.РасходныйКассовыйОрдер", "ДокументСсылка.ВнутреннееПеремещениеНаличныхДенежныхСредств");
		ЗаписатьВФайлУдалениеОбъекта(СсылкаНаУдаляемыйОбъект, "ДокументСсылка.ПриходныйКассовыйОрдер", "ДокументСсылка.ВнутреннееПеремещениеНаличныхДенежныхСредств");
		Отказ = Ложь;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОНВЕРТАЦИИ ОБЪЕКТОВ
// В данном разделе разрешено изменять реализацию процедур.

Процедура ПКО_ВидыАлкогольнойПродукции_ПередВыгрузкойОбъекта(ФайлОбмена, Источник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, ПКО,
	ВыгруженныеОбъекты, Отказ, КлючВыгружаемыхДанных, ЗапоминатьВыгруженные,
	НеЗамещатьОбъектПриЗагрузке, ВсеОбъектыВыгружены, ТолькоПолучитьУзелСсылки,
	Приемник, РежимЗаписи, РежимПроведения, НеСоздаватьЕслиНеНайден) Экспорт

	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЕСТЬNULL(СведенияОбАлкогольнойПродукции.ВидЛицензии, ЗНАЧЕНИЕ(Перечисление.ВидыЛицензийНаПродажуАлкоголя.ПустаяСсылка)) КАК ВидЛицензии,
		|	СУММА(1) КАК Количество
		|ИЗ
		|	Справочник.ВидыАлкогольнойПродукции КАК ВидыАлкогольнойПродукции
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбАлкогольнойПродукции КАК СведенияОбАлкогольнойПродукции
		|		ПО ВидыАлкогольнойПродукции.Ссылка = СведенияОбАлкогольнойПродукции.ВидПродукции
		|ГДЕ
		|	ВидыАлкогольнойПродукции.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(СведенияОбАлкогольнойПродукции.ВидЛицензии, ЗНАЧЕНИЕ(Перечисление.ВидыЛицензийНаПродажуАлкоголя.ПустаяСсылка))
		|
		|УПОРЯДОЧИТЬ ПО
		|	Количество УБЫВ");
		
	Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ВходящиеДанные = Новый Структура;
		ВходящиеДанные.Вставить("ВидЛицензии", Выборка.ВидЛицензии);
	КонецЕсли;

КонецПроцедуры

Процедура ПКО_ВидыНоменклатуры_ПередВыгрузкойОбъекта(ФайлОбмена, Источник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, ПКО,
	ВыгруженныеОбъекты, Отказ, КлючВыгружаемыхДанных, ЗапоминатьВыгруженные,
	НеЗамещатьОбъектПриЗагрузке, ВсеОбъектыВыгружены, ТолькоПолучитьУзелСсылки,
	Приемник, РежимЗаписи, РежимПроведения, НеСоздаватьЕслиНеНайден) Экспорт

	Если ВходящиеДанные.Свойство("ВестиУчетПоХарактеристикам") Тогда
		КлючВыгружаемыхДанных = ""+Источник.Ссылка.УникальныйИдентификатор()+ВходящиеДанные.ВестиУчетПоХарактеристикам;
	КонецЕсли;

КонецПроцедуры

Процедура ПКО_ВнутреннееПеремещениеНаличныхДенежныхСредств_ПослеВыгрузкиОбъектаВФайлОбмена(ФайлОбмена, Источник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, ПКО,
	ВыгруженныеОбъекты, Приемник, УзелСсылки) Экспорт

	ВходящиеДанные.Вставить("ДокументОснование", Источник.Ссылка);
	ВыгрузитьПоПравилу(Источник,,ВходящиеДанные,,"ВнутреннееПеремещениеНаличныхДенежныхСредствПКО");

КонецПроцедуры

Процедура ПКО_Номенклатура_ПередВыгрузкойОбъекта(ФайлОбмена, Источник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, ПКО,
	ВыгруженныеОбъекты, Отказ, КлючВыгружаемыхДанных, ЗапоминатьВыгруженные,
	НеЗамещатьОбъектПриЗагрузке, ВсеОбъектыВыгружены, ТолькоПолучитьУзелСсылки,
	Приемник, РежимЗаписи, РежимПроведения, НеСоздаватьЕслиНеНайден) Экспорт

	Если Источник.Набор = Истина ИЛИ Источник.Комплект = Истина Тогда
		Отказ = Истина;
	КонецЕсли;
	// Получение сведений по алкогольной продукции
	
	Если Не ЗначениеЗаполнено(ВходящиеДанные) Тогда
		ВходящиеДанные = Новый Структура(
			"АлкогольнаяПродукция, ВидАлкогольнойПродукции,
			|ИмпортнаяАлкогольнаяПродукция, ОбъемДАЛ, ПроизводительИмпортерАлкогольнойПродукции");
	КонецЕсли;
		
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Таб.Номенклатура ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК АлкогольнаяПродукция,
		|	Таб.ВидПродукции КАК ВидАлкогольнойПродукции,
		|	ЛОЖЬ КАК ИмпортнаяАлкогольнаяПродукция,
		|	Таб.КоэффПересчетаДал КАК ОбъемДАЛ,
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК ПроизводительИмпортерАлкогольнойПродукции
		|ИЗ
		|	Справочник.Номенклатура КАК Спр
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбАлкогольнойПродукции КАК Таб
		|		ПО Спр.Ссылка = Таб.Номенклатура
		|ГДЕ
		|	Спр.Ссылка = &Ссылка");
		
	Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ВходящиеДанные, Выборка);
	КонецЕсли;

КонецПроцедуры

Процедура ПКО_УпаковкиНоменклатуры_ПередВыгрузкойОбъекта(ФайлОбмена, Источник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, ПКО,
	ВыгруженныеОбъекты, Отказ, КлючВыгружаемыхДанных, ЗапоминатьВыгруженные,
	НеЗамещатьОбъектПриЗагрузке, ВсеОбъектыВыгружены, ТолькоПолучитьУзелСсылки,
	Приемник, РежимЗаписи, РежимПроведения, НеСоздаватьЕслиНеНайден) Экспорт

	Если ТипЗнч(Источник.Владелец) <> Тип("СправочникСсылка.Номенклатура") Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОНВЕРТАЦИИ СВОЙСТВ ОБЪЕКТОВ
// В данном разделе разрешено изменять реализацию процедур.

Процедура ПКС_БанковскиеСчетаКонтрагентов_НомерСчета_ПриВыгрузкеСвойства_1_27(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, КлючИЗначение, ВидСубконто,
	Субконто, Пусто, ИмяПКО, ПКОСвойств,УзелСвойства, УзелКоллекцииСвойств,
	ИмяПКОВидСубконто, ВыгрузитьОбъект) Экспорт

	Если Значение ="" Тогда
		Значение ="0";
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_БанковскиеСчетаКонтрагентов_БИКБанка_ПередВыгрузкойСвойства_2_27(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = Источник.Банк.Код;

КонецПроцедуры

Процедура ПКС_БанковскиеСчетаОрганизаций_НомерСчета_ПриВыгрузкеСвойства_1_26(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, КлючИЗначение, ВидСубконто,
	Субконто, Пусто, ИмяПКО, ПКОСвойств,УзелСвойства, УзелКоллекцииСвойств,
	ИмяПКОВидСубконто, ВыгрузитьОбъект) Экспорт

	Если Значение ="" Тогда
		Значение ="0";
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_БанковскиеСчетаОрганизаций_БИКБанка_ПередВыгрузкойСвойства_2_26(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = Источник.Банк.Код;

КонецПроцедуры

Процедура ПКС_ВидыНоменклатуры_ИспользоватьХарактеристики_ПередВыгрузкойСвойства_2_16(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Если ВходящиеДанные.Свойство("ВестиУчетПоХарактеристикам") Тогда
		Значение = ВходящиеДанные.ВестиУчетПоХарактеристикам = Истина;
	Иначе
		Значение = Ложь;
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_ВидыНоменклатуры_ИспользованиеХарактеристик_ПередВыгрузкойСвойства_6_16(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Выражение = "Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры";

КонецПроцедуры

Процедура ПКС_ВидыЦен_Идентификатор_ПередВыгрузкойСвойства_5_7(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	СтрНаименование = Источник.Наименование;
	
	Разделители	=  " .,+,-,/,*,?,=,<,>,(,)%!@#$%&*""№:;{}[]?()\|/`~'^_";
	
	Идентификатор = "";
	БылСпецСимвол = Ложь;
	
	Для НомСимвола = 1 По СтрДлина(СтрНаименование) Цикл
		
		Символ = Сред(СтрНаименование, НомСимвола, 1);
		
		Если Найти(Разделители, Символ) <> 0 Тогда
			БылСпецСимвол = Истина;
		ИначеЕсли БылСпецСимвол Тогда
			БылСпецСимвол = Ложь;
			Идентификатор = Идентификатор + ВРег(Символ);
		Иначе
			Идентификатор = Идентификатор + Символ;
		КонецЕсли;
		
	КонецЦикла;
	
	Значение = Идентификатор;

КонецПроцедуры

Процедура ПКС_ВнутреннееПеремещениеНаличныхДенежныхСредств_ХозяйственнаяОперация_ПередВыгрузкойСвойства_10_44(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = "ВыдачаДенежныхСредствВДругуюКассу";

КонецПроцедуры

Процедура ПКС_ВнутреннееПеремещениеНаличныхДенежныхСредствПКО_ХозяйственнаяОперация_ПередВыгрузкойСвойства_10_47(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = "ПоступлениеДенежныхСредствИзДругойКассы";

КонецПроцедуры

Процедура ПКС_ВозвратТоваровПоставщику_Товары_Коэффициент_ПередВыгрузкойСвойства_17_24(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = ОбъектКоллекции.Количество * ОбъектКоллекции.Коэффициент;

КонецПроцедуры

Процедура ПКС_ВозвратТоваровПоставщику_Товары_ЕдиницаИзмерения_ПриВыгрузкеСвойства_18_24(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, КлючИЗначение, ВидСубконто,
	Субконто, Пусто, ИмяПКО, ПКОСвойств,УзелСвойства, УзелКоллекцииСвойств,
	ИмяПКОВидСубконто, ВыгрузитьОбъект) Экспорт

	ВыгрузитьЕдиницуИзмерения (Значение);

КонецПроцедуры

Процедура ПКС_ВозвратТоваровПоставщику_Товары_ХарактеристикаНоменклатуры_ПередВыгрузкойСвойства_19_24(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	ВыгрузитьХарактеристики (ОбъектКоллекции, Значение, ИмяПКО, Отказ);

КонецПроцедуры

Процедура ПКС_ДоговорыЭквайринга_Организация_ПередВыгрузкойСвойства_5_18(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Если ЗначениеЗаполнено(Источник.ДоговорВзаиморасчетов) Тогда
		Значение = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Источник.ДоговорВзаиморасчетов, "Организация");
	Иначе
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_ДополнительныеРеквизитыИСведения_Тип_ПередВыгрузкойСвойства_4_32(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	МассивНаименованийТипов = Новый Массив;
	
	СоответствиеТипов = Новый Соответствие;
	СоответствиеТипов.Вставить(Тип("Число"), "Число");
	СоответствиеТипов.Вставить(Тип("Строка"), "Строка");
	СоответствиеТипов.Вставить(Тип("Булево"), "Булево");
	СоответствиеТипов.Вставить(Тип("Дата"), "Дата");
	СоответствиеТипов.Вставить(Тип("СправочникСсылка.ЗначенияСвойствОбъектов"), "СправочникСсылка.ЗначенияСвойствОбъектов");
	СоответствиеТипов.Вставить(Тип("СправочникСсылка.ФизическиеЛица"), "СправочникСсылка.ФизическиеЛица");
	СоответствиеТипов.Вставить(Тип("СправочникСсылка.Склады"), "СправочникСсылка.Магазины");
	СоответствиеТипов.Вставить(Тип("СправочникСсылка.Пользователи"), "СправочникСсылка.Пользователи");
	СоответствиеТипов.Вставить(Тип("СправочникСсылка.Организации"), "СправочникСсылка.Организации");
	СоответствиеТипов.Вставить(Тип("СправочникСсылка.НоменклатурныеГруппы"), "СправочникСсылка.НоменклатурныеГруппы");
	СоответствиеТипов.Вставить(Тип("СправочникСсылка.Номенклатура"), "СправочникСсылка.Номенклатура");
	СоответствиеТипов.Вставить(Тип("СправочникСсылка.Контрагенты"), "СправочникСсылка.Контрагенты");
	СоответствиеТипов.Вставить(Тип("СправочникСсылка.КлассификаторСтранМира"), "СправочникСсылка.СтраныМира");
	Для каждого КлючИЗначение ИЗ СоответствиеТипов Цикл
		Если Источник.ТипЗначения.СодержитТип(КлючИЗначение.Ключ) Тогда
			МассивНаименованийТипов.Добавить(КлючИЗначение.Значение);
		КонецЕсли;
	КонецЦикла;
	Значение = ЗначениеВСтрокуВнутр(МассивНаименованийТипов);

КонецПроцедуры

Процедура ПКС_ДополнительныеРеквизитыИСведения_ЭтоДополнительноеСведение_ПередВыгрузкойСвойства_6_32(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = Ложь;

КонецПроцедуры

Процедура ПКС_ЗаказНаПеремещение_Статус_ПередВыгрузкойСвойства_10_18(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = "КОбеспечению";

КонецПроцедуры

Процедура ПКС_ЗаказНаПеремещение_Товары_ЕдиницаИзмерения_ПриВыгрузкеСвойства_14_18(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, КлючИЗначение, ВидСубконто,
	Субконто, Пусто, ИмяПКО, ПКОСвойств,УзелСвойства, УзелКоллекцииСвойств,
	ИмяПКОВидСубконто, ВыгрузитьОбъект) Экспорт

	ВыгрузитьЕдиницуИзмерения (Значение);

КонецПроцедуры

Процедура ПКС_ЗаказНаПеремещение_Товары_ХарактеристикаНоменклатуры_ПередВыгрузкойСвойства_15_18(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	ВыгрузитьХарактеристики (ОбъектКоллекции, Значение, ИмяПКО, Отказ);

КонецПроцедуры

Процедура ПКС_ЗаказНаПеремещение_Товары_Коэффициент_ПередВыгрузкойСвойства_16_18(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = ОбъектКоллекции.Количество * ОбъектКоллекции.Коэффициент;

КонецПроцедуры

Процедура ПКС_КассыККМ_ИспользоватьБезПодключенияОборудования_ПередВыгрузкойСвойства_6_8(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = Ложь;

КонецПроцедуры

Процедура ПКС_КомплектующиеНоменклатуры_ХарактеристикаКомплектующей_ПередВыгрузкойСвойства_6_25(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Номенклатура = Источник.Номенклатура;
	ХарактеристикаКомплектующей = Источник.ХарактеристикаКомплектующей;
	ВестиУчетПоХарактеристикам = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Номенклатура, "ВестиУчетПоХарактеристикам");
	Если ВестиУчетПоХарактеристикам И ХарактеристикаКомплектующей.Пустая() Тогда
		Значение = Номенклатура;
		ИмяПКО = "ХарактеристикиНоменклатурыНовый";
	ИначеЕсли НЕ ВестиУчетПоХарактеристикам Тогда
		Отказ = Истина;
	Иначе
		Значение = ХарактеристикаКомплектующей;
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_КомплектующиеНоменклатуры_Характеристика_ПередВыгрузкойСвойства_7_25(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Номенклатура = Источник.Номенклатура;
	ХарактеристикаНоменклатуры = Источник.ХарактеристикаНоменклатуры;
	ВестиУчетПоХарактеристикам = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Номенклатура, "ВестиУчетПоХарактеристикам");
	Если ВестиУчетПоХарактеристикам И ХарактеристикаНоменклатуры.Пустая() Тогда
		Значение = Номенклатура;
		ИмяПКО = "ХарактеристикиНоменклатурыНовый";
	ИначеЕсли НЕ ВестиУчетПоХарактеристикам Тогда
		Отказ = Истина;
	Иначе
		Значение = ХарактеристикаНоменклатуры;
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_КомплектующиеНоменклатуры_ЕдиницаИзмерения_ПриВыгрузкеСвойства_8_25(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, КлючИЗначение, ВидСубконто,
	Субконто, Пусто, ИмяПКО, ПКОСвойств,УзелСвойства, УзелКоллекцииСвойств,
	ИмяПКОВидСубконто, ВыгрузитьОбъект) Экспорт

	ВыгрузитьЕдиницуИзмерения (Значение);

КонецПроцедуры

Процедура ПКС_Контрагенты_ЮрФизЛицо_ПередВыгрузкойСвойства_11_11(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Если НЕ ЗначениеЗаполнено(Источник.ЮрФизЛицо) Тогда
		Выражение = "Перечисления.ЮрФизЛицо.ЮрЛицо";
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_Номенклатура_ВидНоменклатуры_ПередВыгрузкойСвойства_8_12(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	ИсходящиеДанные = Новый Структура;
	ИсходящиеДанные.Вставить("ВестиУчетПоХарактеристикам", Источник.ВестиУчетПоХарактеристикам = Истина);

КонецПроцедуры

Процедура ПКС_Номенклатура_СтавкаНДС_ПередВыгрузкойСвойства_10_12(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Если НЕ ЗначениеЗаполнено(Источник.СтавкаНДС) Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_Номенклатура_ТипНоменклатуры_ПередВыгрузкойСвойства_13_12(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Если НЕ Источник.ЭтоГруппа Тогда
		Если Источник.Услуга Тогда
			Значение = Перечисления.ТипыНоменклатуры.Услуга;
		Иначе
			Значение = Перечисления.ТипыНоменклатуры.Товар;
		КонецЕсли;
	Иначе
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_ОприходованиеТоваров_УИ_ПередВыгрузкойСвойства_10_20(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Если ТипЗнч(Источник) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		Значение = Источник.УникальныйИдентификатор();
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ОприходованиеТоваров") Тогда
		Значение = Источник.Ссылка.УникальныйИдентификатор();
	Иначе
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_ОприходованиеТоваров_Товары_ЕдиницаИзмерения_ПриВыгрузкеСвойства_12_20(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, КлючИЗначение, ВидСубконто,
	Субконто, Пусто, ИмяПКО, ПКОСвойств,УзелСвойства, УзелКоллекцииСвойств,
	ИмяПКОВидСубконто, ВыгрузитьОбъект) Экспорт

	ВыгрузитьЕдиницуИзмерения (Значение);

КонецПроцедуры

Процедура ПКС_ОприходованиеТоваров_Товары_Коэффициент_ПередВыгрузкойСвойства_13_20(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = ОбъектКоллекции.Количество * ОбъектКоллекции.Коэффициент;

КонецПроцедуры

Процедура ПКС_ОприходованиеТоваров_Товары_ХарактеристикаНоменклатуры_ПередВыгрузкойСвойства_18_20(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	ВыгрузитьХарактеристики (ОбъектКоллекции, Значение, ИмяПКО, Отказ);

КонецПроцедуры

Процедура ПКС_Организации_ЮрФизЛицо_ПередВыгрузкойСвойства_10_11(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Если Источник.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		Выражение = "Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель";
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_ПеремещениеТоваров_ВнутреннийЗаказ_ПередВыгрузкойСвойства_10_18(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	НеЗамещать = Истина;
	Пусто = Истина;

КонецПроцедуры

Процедура ПКС_ПеремещениеТоваров_Товары_ЕдиницаИзмерения_ПриВыгрузкеСвойства_12_18(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, КлючИЗначение, ВидСубконто,
	Субконто, Пусто, ИмяПКО, ПКОСвойств,УзелСвойства, УзелКоллекцииСвойств,
	ИмяПКОВидСубконто, ВыгрузитьОбъект) Экспорт

	ВыгрузитьЕдиницуИзмерения (Значение);

КонецПроцедуры

Процедура ПКС_ПеремещениеТоваров_Товары_Коэффициент_ПередВыгрузкойСвойства_13_18(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = ОбъектКоллекции.Количество * ОбъектКоллекции.Коэффициент;

КонецПроцедуры

Процедура ПКС_ПеремещениеТоваров_Товары_ХарактеристикаНоменклатуры_ПередВыгрузкойСвойства_17_18(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	ВыгрузитьХарактеристики (ОбъектКоллекции, Значение, ИмяПКО, Отказ);

КонецПроцедуры

Процедура ПКС_ПеремещениеТоваров_Товары_Количество_ПередВыгрузкойСвойства_18_18(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = ОбъектКоллекции.Цена * ОбъектКоллекции.Количество;

КонецПроцедуры

Процедура ПКС_ПКО_ОтПокупателя_РасшифровкаПлатежа_ДокументРасчетовСКонтрагентом_ПередВыгрузкойСвойства_17_16(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Отказ = ТипЗнч(ОбъектКоллекции.ДокументРасчетовСКонтрагентом) = Тип("ДокументСсылка.РеализацияТоваровУслуг");

КонецПроцедуры

Процедура ПКС_ПоступлениеТоваров_СуммаДокумента_ПередВыгрузкойСвойства_11_18(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = Источник.Товары.Итог("Сумма");

КонецПроцедуры

Процедура ПКС_ПоступлениеТоваров_СкладОрдер_ПередВыгрузкойСвойства_13_18(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Если ТипЗнч(Источник.СкладОрдер) = Тип("ДокументСсылка.ПриходныйОрдерНаТовары") Тогда
		Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник.СкладОрдер,"Склад");
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_ПоступлениеТоваров_Товары_Коэффициент_ПередВыгрузкойСвойства_18_18(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = ОбъектКоллекции.Количество * ОбъектКоллекции.Коэффициент;

КонецПроцедуры

Процедура ПКС_ПоступлениеТоваров_Товары_ЕдиницаИзмерения_ПриВыгрузкеСвойства_19_18(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, КлючИЗначение, ВидСубконто,
	Субконто, Пусто, ИмяПКО, ПКОСвойств,УзелСвойства, УзелКоллекцииСвойств,
	ИмяПКОВидСубконто, ВыгрузитьОбъект) Экспорт

	ВыгрузитьЕдиницуИзмерения (Значение);

КонецПроцедуры

Процедура ПКС_ПоступлениеТоваров_Товары_ХарактеристикаНоменклатуры_ПередВыгрузкойСвойства_20_18(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	ВыгрузитьХарактеристики (ОбъектКоллекции, Значение, ИмяПКО, Отказ);

КонецПроцедуры

Процедура ПКС_ПрименениеЦенНоменклатуры_Товары_Характеристика_ПередВыгрузкойСвойства_11_25(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Если ОбъектКоллекции.ХарактеристикаНоменклатуры.Пустая() Тогда
		Значение = ОбъектКоллекции.Номенклатура;
		ИмяПКО = "ХарактеристикиНоменклатурыНовый";
	Иначе
		Значение = ОбъектКоллекции.ХарактеристикаНоменклатуры;
		ИмяПКО = "ХарактеристикиНоменклатуры";
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_ПриходныйОрдерНаТовары_Товары_ЕдиницаИзмерения_ПриВыгрузкеСвойства_10_22(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, КлючИЗначение, ВидСубконто,
	Субконто, Пусто, ИмяПКО, ПКОСвойств,УзелСвойства, УзелКоллекцииСвойств,
	ИмяПКОВидСубконто, ВыгрузитьОбъект) Экспорт

	ВыгрузитьЕдиницуИзмерения (Значение);

КонецПроцедуры

Процедура ПКС_ПриходныйОрдерНаТовары_Товары_Коэффициент_ПередВыгрузкойСвойства_11_22(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = ОбъектКоллекции.Количество * ОбъектКоллекции.Коэффициент;

КонецПроцедуры

Процедура ПКС_ПриходныйОрдерНаТовары_Товары_ХарактеристикаНоменклатуры_ПередВыгрузкойСвойства_14_22(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	ВыгрузитьХарактеристики (ОбъектКоллекции, Значение, ИмяПКО, Отказ);

КонецПроцедуры

Процедура ПКС_РасходныйОрдерНаТовары_ДокументПередачи_ПередВыгрузкойСвойства_8_22(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Если ТипЗнч(Источник.ДокументПередачи) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ИмяПКО = "ПеремещениеТоваров";
	ИначеЕсли ТипЗнч(Источник.ДокументПередачи) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		ИмяПКО = "ВозвратТоваровПоставщику";
	Иначе
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_РасходныйОрдерНаТовары_Товары_ЕдиницаИзмерения_ПриВыгрузкеСвойства_10_22(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, КлючИЗначение, ВидСубконто,
	Субконто, Пусто, ИмяПКО, ПКОСвойств,УзелСвойства, УзелКоллекцииСвойств,
	ИмяПКОВидСубконто, ВыгрузитьОбъект) Экспорт

	ВыгрузитьЕдиницуИзмерения (Значение);

КонецПроцедуры

Процедура ПКС_РасходныйОрдерНаТовары_Товары_Коэффициент_ПередВыгрузкойСвойства_11_22(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = ОбъектКоллекции.Количество * ОбъектКоллекции.Коэффициент;

КонецПроцедуры

Процедура ПКС_РасходныйОрдерНаТовары_Товары_ХарактеристикаНоменклатуры_ПередВыгрузкойСвойства_14_22(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	ВыгрузитьХарактеристики (ОбъектКоллекции, Значение, ИмяПКО, Отказ);

КонецПроцедуры

Процедура ПКС_РКО_Банк_НомерСумки_ПередВыгрузкойСвойства_16_8(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = "0";

КонецПроцедуры

Процедура ПКС_РКО_ВозвратПокупателю_Контрагент_ПередВыгрузкойСвойства_6_21(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Если ТипЗнч(Источник.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
		ИмяПКО = "Контрагенты";
	ИначеЕсли ТипЗнч(Источник.Контрагент) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		ИмяПКО = "ФизическиеЛица";
	Иначе
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_РКО_ККМ_Контрагент_ПередВыгрузкойСвойства_6_7(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Отказ = ТипЗнч(Источник.Контрагент) <> Тип("СправочникСсылка.КассыККМ");

КонецПроцедуры

Процедура ПКС_РКО_ОплатаПоставщику_Контрагент_ПередВыгрузкойСвойства_6_20(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Если ТипЗнч(Источник.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
		ИмяПКО = "Контрагенты";
	ИначеЕсли ТипЗнч(Источник.Контрагент) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		ИмяПКО = "ФизическиеЛица";
	Иначе
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_РКО_ПрочиеРасчеты_Контрагент_ПередВыгрузкойСвойства_7_17(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Если ТипЗнч(Источник.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
		ИмяПКО = "Контрагенты";
	ИначеЕсли ТипЗнч(Источник.Контрагент) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		ИмяПКО = "ФизическиеЛица";
	Иначе
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_РКО_ПрочиеРасчеты_ХозяйственнаяОперация_ПередВыгрузкойСвойства_17_17(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Выражение = "Перечисления.ХозяйственныеОперации.ПрочиеРасходы";

КонецПроцедуры

Процедура ПКС_РКО_ПрочийРасход_ХозяйственнаяОперация_ПередВыгрузкойСвойства_14_16(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Выражение = "Перечисления.ХозяйственныеОперации.ПрочиеРасходы";

КонецПроцедуры

Процедура ПКС_СборкаТоваров_ЕдиницаИзмерения_ПриВыгрузкеСвойства_12_13(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, КлючИЗначение, ВидСубконто,
	Субконто, Пусто, ИмяПКО, ПКОСвойств,УзелСвойства, УзелКоллекцииСвойств,
	ИмяПКОВидСубконто, ВыгрузитьОбъект) Экспорт

	ВыгрузитьЕдиницуИзмерения (Значение);

КонецПроцедуры

Процедура ПКС_СборкаТоваров_Коэффициент_ПередВыгрузкойСвойства_13_13(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = Источник.Количество * Источник.Коэффициент;

КонецПроцедуры

Процедура ПКС_СборкаТоваров_ХарактеристикаНоменклатуры_ПередВыгрузкойСвойства_14_13(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Если Источник.ХарактеристикаНоменклатуры.Пустая() Тогда
		Значение = Источник.Номенклатура;
		ИмяПКО = "ХарактеристикиНоменклатурыНовый";
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_СборкаТоваров_Комплектующие_ЕдиницаИзмерения_ПередВыгрузкойСвойства_16_13(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = ОбъектКоллекции.ЕдиницаИзмерения;
	ВыгрузитьЕдиницуИзмерения (Значение);

КонецПроцедуры

Процедура ПКС_СборкаТоваров_Комплектующие_Коэффициент_ПередВыгрузкойСвойства_17_13(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = ОбъектКоллекции.Количество * ОбъектКоллекции.Коэффициент;

КонецПроцедуры

Процедура ПКС_СборкаТоваров_Комплектующие_ХарактеристикаНоменклатуры_ПередВыгрузкойСвойства_20_13(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	ВыгрузитьХарактеристики (ОбъектКоллекции, Значение, ИмяПКО, Отказ);

КонецПроцедуры

Процедура ПКС_СборкаТоваров_Комплектующие_ДоляСтоимости_ПриВыгрузкеСвойства_21_13(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, КлючИЗначение, ВидСубконто,
	Субконто, Пусто, ИмяПКО, ПКОСвойств,УзелСвойства, УзелКоллекцииСвойств,
	ИмяПКОВидСубконто, ВыгрузитьОбъект) Экспорт

	Если Значение = 0 Тогда
		Значение = 1;
	конецЕсли;

КонецПроцедуры

Процедура ПКС_Склады_ВидСклада_ПередВыгрузкойСвойства_4_6(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Если Источник.ВидСклада <> Перечисления.ВидыСкладов.Розничный Тогда
		Значение = Истина;
	Иначе
		Отказ = Истина;
	конецЕсли;

КонецПроцедуры

Процедура ПКС_СписаниеТоваров_Товары_ЕдиницаИзмерения_ПриВыгрузкеСвойства_11_15(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, КлючИЗначение, ВидСубконто,
	Субконто, Пусто, ИмяПКО, ПКОСвойств,УзелСвойства, УзелКоллекцииСвойств,
	ИмяПКОВидСубконто, ВыгрузитьОбъект) Экспорт

	ВыгрузитьЕдиницуИзмерения (Значение);

КонецПроцедуры

Процедура ПКС_СписаниеТоваров_Товары_Коэффициент_ПередВыгрузкойСвойства_12_15(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = ОбъектКоллекции.Количество * ОбъектКоллекции.Коэффициент;

КонецПроцедуры

Процедура ПКС_СписаниеТоваров_Товары_ХарактеристикаНоменклатуры_ПередВыгрузкойСвойства_17_15(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	ВыгрузитьХарактеристики (ОбъектКоллекции, Значение, ИмяПКО, Отказ);

КонецПроцедуры

Процедура ПКС_СписаниеТоваров_УИ_ПередВыгрузкойСвойства_18_15(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Если ТипЗнч(Источник) = Тип("ДокументСсылка.СписаниеТоваров") Тогда
		Значение = Источник.УникальныйИдентификатор();
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.СписаниеТоваров") Тогда
		Значение = Источник.Ссылка.УникальныйИдентификатор();
	Иначе
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_УпаковкиНоменклатуры_ЕдиницаПоКлассификатору_ПриВыгрузкеСвойства_2_20(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, КлючИЗначение, ВидСубконто,
	Субконто, Пусто, ИмяПКО, ПКОСвойств,УзелСвойства, УзелКоллекцииСвойств,
	ИмяПКОВидСубконто, ВыгрузитьОбъект) Экспорт

	Если НЕ ЗначениеЗаполнено(Значение) Тогда
		Значение = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Источник.Владелец, "БазоваяЕдиницаИзмерения")
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_УстановкаСебестоимости_Товары_Характеристика_ПередВыгрузкойСвойства_8_22(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Если ОбъектКоллекции.ХарактеристикаНоменклатуры.Пустая() Тогда
		Значение = ОбъектКоллекции.Номенклатура;
		ИмяПКО = "ХарактеристикиНоменклатурыНовый";
	Иначе
		Значение = ОбъектКоллекции.ХарактеристикаНоменклатуры;
		ИмяПКО = "ХарактеристикиНоменклатуры";
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_УстановкаЦенНоменклатуры_Товары_ЕдиницаИзмерения_ПриВыгрузкеСвойства_10_24(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, КлючИЗначение, ВидСубконто,
	Субконто, Пусто, ИмяПКО, ПКОСвойств,УзелСвойства, УзелКоллекцииСвойств,
	ИмяПКОВидСубконто, ВыгрузитьОбъект) Экспорт

	ВыгрузитьЕдиницуИзмерения (Значение);

КонецПроцедуры

Процедура ПКС_УстановкаЦенНоменклатуры_Товары_ХарактеристикаНоменклатуры_ПередВыгрузкойСвойства_12_24(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	ВыгрузитьХарактеристики (ОбъектКоллекции, Значение, ИмяПКО, Отказ);

КонецПроцедуры

Процедура ПКС_ФизическиеЛица_ДатаРождения_ПередВыгрузкойСвойства_3_14(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Если НЕ ЗначениеЗаполнено(Источник.ДатаРождения) Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ПКС_ХарактеристикиНоменклатурыНовый_Владелец_ПередВыгрузкойСвойства_1_31(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = Источник.Ссылка;

КонецПроцедуры

Процедура ПКС_ХарактеристикиНоменклатурыНовый_Наименование_ПередВыгрузкойСвойства_2_31(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = "<Не заполнено>";

КонецПроцедуры

Процедура ПКС_ХарактеристикиНоменклатурыНовый_ПометкаУдаления_ПередВыгрузкойСвойства_3_31(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Значение = Ложь;

КонецПроцедуры

Процедура ПКС_Штрихкоды_ЕдиницаИзмерения_ПриВыгрузкеСвойства_5_9(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, КлючИЗначение, ВидСубконто,
	Субконто, Пусто, ИмяПКО, ПКОСвойств,УзелСвойства, УзелКоллекцииСвойств,
	ИмяПКОВидСубконто, ВыгрузитьОбъект) Экспорт

	ВыгрузитьЕдиницуИзмерения (Значение);

КонецПроцедуры

Процедура ПКС_Штрихкоды_Характеристика_ПередВыгрузкойСвойства_6_9(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные,
	ПКС, ПКО, ОбъектКоллекции, Отказ, Значение, ТипПриемника, ИмяПКО,
	ИмяПКОВидСубконто, Пусто, Выражение, УзелКоллекцииСвойств, НеЗамещать,
	ВыгрузитьОбъект) Экспорт

	Номенклатура = Источник.Владелец;
	ХарактеристикаНоменклатуры = Источник.ХарактеристикаНоменклатуры;
	ВестиУчетПоХарактеристикам = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Номенклатура, "ВестиУчетПоХарактеристикам");
	Если ВестиУчетПоХарактеристикам И ХарактеристикаНоменклатуры.Пустая() Тогда
		Значение = Номенклатура;
		ИмяПКО = "ХарактеристикиНоменклатурыНовый";
	ИначеЕсли НЕ ВестиУчетПоХарактеристикам Тогда
		Отказ = Истина;
	Иначе
		Значение = ХарактеристикаНоменклатуры;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОНВЕРТАЦИИ ГРУПП СВОЙСТВ ОБЪЕКТОВ
// В данном разделе разрешено изменять реализацию процедур.

Процедура ПКГС_Контрагенты_ДополнительныеРеквизиты_ПередОбработкойВыгрузки_13_11(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные, ПКО,
	ПКГС, Отказ, КоллекцияОбъектов, НеЗамещать, УзелКоллекцииСвойств, НеОчищать) Экспорт

	Если Источник.ЭтоГруппа Тогда
		Отказ = Истина;
	Иначе
		ДопРеквизиты (Источник, КоллекцияОбъектов, Отказ);
	КонецЕсли;

КонецПроцедуры

Процедура ПКГС_Номенклатура_ДополнительныеРеквизиты_ПередОбработкойВыгрузки_16_12(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные, ПКО,
	ПКГС, Отказ, КоллекцияОбъектов, НеЗамещать, УзелКоллекцииСвойств, НеОчищать) Экспорт

	Если Источник.ЭтоГруппа Тогда
		Отказ = Истина;
	Иначе
		ДопРеквизиты (Источник, КоллекцияОбъектов, Отказ);
	КонецЕсли;

КонецПроцедуры

Процедура ПКГС_ПрименениеЦенНоменклатуры_Товары_ПередВыгрузкойСвойства_9_25(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные, ПКО,
	ПКГС, Отказ, ОбъектКоллекции, УзелКоллекцииСвойств, УзелКоллекцииОбъектов) Экспорт

	Если ОбъектКоллекции.ЦенаВРознице = 0 Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ПКГС_Склады_ДополнительныеРеквизиты_ПередОбработкойВыгрузки_5_6(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные, ПКО,
	ПКГС, Отказ, КоллекцияОбъектов, НеЗамещать, УзелКоллекцииСвойств, НеОчищать) Экспорт

	Если Источник.ЭтоГруппа Тогда
		Отказ = Истина;
	Иначе
		ДопРеквизиты (Источник, КоллекцияОбъектов, Отказ);
	КонецЕсли;

КонецПроцедуры

Процедура ПКГС_УстановкаЦенНоменклатуры_Товары_ПередВыгрузкойСвойства_7_24(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные, ПКО,
	ПКГС, Отказ, ОбъектКоллекции, УзелКоллекцииСвойств, УзелКоллекцииОбъектов) Экспорт

	ОтказНаборКомплект (ОбъектКоллекции, Отказ);

КонецПроцедуры

Процедура ПКГС_ФизическиеЛица_ДополнительныеРеквизиты_ПередОбработкойВыгрузки_7_14(ФайлОбмена, Источник, Приемник, ВходящиеДанные, ИсходящиеДанные, ПКО,
	ПКГС, Отказ, КоллекцияОбъектов, НеЗамещать, УзелКоллекцииСвойств, НеОчищать) Экспорт

	Если Источник.ЭтоГруппа Тогда
		Отказ = Истина;
	Иначе
		ДопРеквизиты (Источник, КоллекцияОбъектов, Отказ);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ВЫГРУЗКИ ДАННЫХ
// В данном разделе разрешено изменять реализацию процедур.

Процедура ПВД_БанковскиеСчета_ПередВыгрузкойОбъекта(ФайлОбмена, Отказ, ИмяПКО, Правило, ВходящиеДанные, ИсходящиеДанные, Объект) Экспорт

	ТипВладелца = ТипЗнч(Объект.Владелец);
	Если ТипВладелца = Тип("СправочникСсылка.Организации") Тогда
		ИмяПКО = "БанковскиеСчетаОрганизаций";
	ИначеЕсли ТипВладелца = Тип("СправочникСсылка.Контрагенты") Тогда
		ИмяПКО = "БанковскиеСчетаКонтрагентов";
	Иначе
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ПВД_ВидыНоменклатуры_ПередВыгрузкойОбъекта(ФайлОбмена, Отказ, ИмяПКО, Правило, ВходящиеДанные, ИсходящиеДанные, Объект) Экспорт

	Если Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар 
		ИЛИ Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
		ИсходящиеДанные = Новый Структура("ВестиУчетПоХарактеристикам");
		Запросы.ИспользованиеХарактеристик.УстановитьПараметр("ВидНоменклатуры",Объект.Ссылка);
		Результат = Запросы.ИспользованиеХарактеристик.Выполнить();
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		КоличествоХарактеристик = Выборка.ВестиУчетПоХарактеристикамКоличество;
		ЗначениеХарактеристик = КоличествоХарактеристик<>0 И Выборка.ВестиУчетПоХарактеристикам;
		Если КоличествоХарактеристик <> 2 Тогда
			ИсходящиеДанные.ВестиУчетПоХарактеристикам = ЗначениеХарактеристик;
			ВыгрузитьПоПравилу(Объект,,ИсходящиеДанные,,"ВидыНоменклатуры");
		ИначеЕсли КоличествоХарактеристик = 2 Тогда
			ИсходящиеДанные.ВестиУчетПоХарактеристикам =ЗначениеХарактеристик;
			ВыгрузитьПоПравилу(Объект,,ИсходящиеДанные,,"ВидыНоменклатуры");
			ИсходящиеДанные.ВестиУчетПоХарактеристикам =НЕ ЗначениеХарактеристик;
			ВыгрузитьПоПравилу(Объект,,ИсходящиеДанные,,"ВидыНоменклатуры");
		Конецесли;
	КонецЕсли;
	Отказ = Истина;

КонецПроцедуры

Процедура ПВД_ОтветственныеЛицаОрганизации_ПередВыгрузкойОбъекта(ФайлОбмена, Отказ, ИмяПКО, Правило, ВходящиеДанные, ИсходящиеДанные, Объект) Экспорт

	Если ТипЗнч(Объект.Отбор.СтруктурнаяЕдиница.Значение)<> Тип("СправочникСсылка.Организации") Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ПВД_ПериодыВыгрузкиСебестоимостиВРозницу_ПередВыгрузкойОбъекта(ФайлОбмена, Отказ, ИмяПКО, Правило, ВходящиеДанные, ИсходящиеДанные, Объект) Экспорт

	Отказ = Истина;

КонецПроцедуры

Процедура ПВД_ПриходныйКассовыйОрдер_ПередВыгрузкойОбъекта(ФайлОбмена, Отказ, ИмяПКО, Правило, ВходящиеДанные, ИсходящиеДанные, Объект) Экспорт

	Если Объект.ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПокупателя Тогда
		ИмяПКО = "ПКО_ОтПокупателя";
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийПКО.ПриходДенежныхСредствРозничнаяВыручка Тогда
		ИмяПКО = "ПКО_ИзККМ";
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратДенежныхСредствПоставщиком Тогда
		ИмяПКО = "ПКО_ОтПоставщика";
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийПКО.ПолучениеНаличныхДенежныхСредствВБанке Тогда
		ИмяПКО = "ПКО_ИзБанка";
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийПКО.ПриходДенежныхСредствПрочее Тогда
		ИмяПКО = "ПКО_Прочее";
	Иначе
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ПВД_РасходныйКассовыйОрдер_ПередВыгрузкойОбъекта(ФайлОбмена, Отказ, ИмяПКО, Правило, ВходящиеДанные, ИсходящиеДанные, Объект) Экспорт

	Если Объект.ВидОперации = Перечисления.ВидыОперацийРКО.ОплатаПоставщику Тогда
		ИмяПКО = "РКО_ОплатаПоставщику";
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийРКО.ВозвратДенежныхСредствПокупателю Тогда
		ИмяПКО = "РКО_ВозвратПокупателю";
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийРКО.ПрочиеРасчетыСКонтрагентами Тогда
		ИмяПКО = "РКО_ПрочиеРасчеты";
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийРКО.ВыдачаДенежныхСредствКассеККМ Тогда
		ИмяПКО = "РКО_ККМ";
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийРКО.РасходДенежныхСредствПрочее Тогда
		ИмяПКО = "РКО_ПрочийРасход";
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийРКО.ВзносНаличнымиВБанк Тогда
		ИмяПКО = "РКО_Банк";
	Иначе
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ОЧИСТКИ ДАННЫХ
// В данном разделе разрешено изменять реализацию процедур.

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ПАРАМЕТРОВ
// В данном разделе разрешено изменять реализацию процедур.

////////////////////////////////////////////////////////////////////////////////
// АЛГОРИТМЫ
// Данный раздел разрешено изменять.
// Также допустимо размещать процедуры с алгоритмами в любом из разделов выше.

Процедура ВыгрузитьЕдиницуИзмерения(Значение) Экспорт

	Если ЗначениеЗаполнено(Значение) Тогда
		ДанныеЕдиницыИзмерения = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Значение, "Владелец,Коэффициент,ЕдиницаПоКлассификатору");
		ДанныеВладельца = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ДанныеЕдиницыИзмерения.Владелец, "БазоваяЕдиницаИзмерения");
		Если ДанныеЕдиницыИзмерения.Коэффициент = 1 
			И ДанныеЕдиницыИзмерения.ЕдиницаПоКлассификатору = ДанныеВладельца.БазоваяЕдиницаИзмерения Тогда
			Значение = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ВыгрузитьСебестоимость(Параметры) Экспорт

	ПостроительЗапроса = Новый ПостроительЗапроса;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПериодыВыгрузки.Дата КАК Дата
	|ПОМЕСТИТЬ ПериодыВыгрузкиСебестоимости
	|ИЗ
	|	РегистрСведений.ПериодыВыгрузкиСебестоимостиВРозницу.Изменения КАК ПериодыВыгрузки
	|ГДЕ
	|	ПериодыВыгрузки.Узел = &Узел
	|	И ПериодыВыгрузки.Дата >= НАЧАЛОПЕРИОДА(&ДатаНачала, &Периодичность)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ПродажиСебестоимость.Период, &Периодичность) КАК Период,
	|	ВЫБОР
	|		КОГДА ПродажиСебестоимость.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|				ИЛИ ПродажиСебестоимость.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|			ТОГДА ПродажиСебестоимость.Регистратор.Склад
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПродажиСебестоимость.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|					ТОГДА ВЫБОР
	|							КОГДА ПродажиСебестоимость.Регистратор.ВидПоступления = ЗНАЧЕНИЕ(Перечисление.ВидыПоступленияТоваров.НаСклад)
	|								ТОГДА ПродажиСебестоимость.Регистратор.СкладОрдер
	|							ИНАЧЕ ПродажиСебестоимость.Регистратор.СкладОрдер.Склад
	|						КОНЕЦ
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ КАК Склад,
	|	ПродажиСебестоимость.Номенклатура КАК Номенклатура,
	|	ПродажиСебестоимость.ХарактеристикаНоменклатуры,
	|	ПродажиСебестоимость.Количество КАК Количество,
	|	ПродажиСебестоимость.Стоимость КАК Стоимость
	|ПОМЕСТИТЬ ВременнаяТаблицаРегистра
	|ИЗ
	|	РегистрНакопления.ПродажиСебестоимость КАК ПродажиСебестоимость
	|ГДЕ
	|	НЕ ПродажиСебестоимость.Регистратор ССЫЛКА Документ.КорректировкаСтоимостиСписанияТоваров
	|	И НАЧАЛОПЕРИОДА(ПродажиСебестоимость.Регистратор.Дата, &Периодичность) В
	|			(ВЫБРАТЬ
	|				Периоды.Дата
	|			ИЗ
	|				ПериодыВыгрузкиСебестоимости КАК Периоды)
	|	И НЕ ПродажиСебестоимость.Номенклатура.Комплект
	|	И НЕ ПродажиСебестоимость.Номенклатура.Набор
	|{ГДЕ
	|	ПродажиСебестоимость.Номенклатура.*}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ПродажиСебестоимость.ДокументДвижения.Дата, &Периодичность),
	|	ВЫБОР
	|		КОГДА ПродажиСебестоимость.ДокументДвижения ССЫЛКА Документ.РеализацияТоваровУслуг
	|				ИЛИ ПродажиСебестоимость.ДокументДвижения ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|			ТОГДА ПродажиСебестоимость.ДокументДвижения.Склад
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПродажиСебестоимость.ДокументДвижения ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|					ТОГДА ВЫБОР
	|							КОГДА ПродажиСебестоимость.ДокументДвижения.ВидПоступления = ЗНАЧЕНИЕ(Перечисление.ВидыПоступленияТоваров.НаСклад)
	|								ТОГДА ПродажиСебестоимость.ДокументДвижения.СкладОрдер
	|							ИНАЧЕ ПродажиСебестоимость.ДокументДвижения.СкладОрдер.Склад
	|						КОНЕЦ
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ПродажиСебестоимость.Номенклатура,
	|	ПродажиСебестоимость.ХарактеристикаНоменклатуры,
	|	ПродажиСебестоимость.Количество,
	|	ПродажиСебестоимость.Стоимость
	|ИЗ
	|	РегистрНакопления.ПродажиСебестоимость КАК ПродажиСебестоимость
	|ГДЕ
	|	ПродажиСебестоимость.Регистратор ССЫЛКА Документ.КорректировкаСтоимостиСписанияТоваров
	|	И НАЧАЛОПЕРИОДА(ПродажиСебестоимость.ДокументДвижения.Дата, &Периодичность) В
	|			(ВЫБРАТЬ
	|				Периоды.Дата
	|			ИЗ
	|				ПериодыВыгрузкиСебестоимости КАК Периоды)
	|	И НЕ ПродажиСебестоимость.Номенклатура.Комплект
	|	И НЕ ПродажиСебестоимость.Номенклатура.Набор
	|{ГДЕ
	|	ПродажиСебестоимость.Номенклатура.*}
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаРегистра.Период КАК Период,
	|	ВременнаяТаблицаРегистра.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаРегистра.ХарактеристикаНоменклатуры,
	|	СУММА(ВременнаяТаблицаРегистра.Количество) КАК Количество,
	|	СУММА(ВременнаяТаблицаРегистра.Стоимость) КАК Стоимость,
	|	ВЫБОР
	|		КОГДА СУММА(ВременнаяТаблицаРегистра.Количество) <> 0
	|			ТОГДА СУММА(ВременнаяТаблицаРегистра.Стоимость) / СУММА(ВременнаяТаблицаРегистра.Количество)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Цена,
	|	ВременнаяТаблицаРегистра.Склад
	|ИЗ
	|	ВременнаяТаблицаРегистра КАК ВременнаяТаблицаРегистра
	|ГДЕ
	|	ВременнаяТаблицаРегистра.Склад В(&МассивСкладов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРегистра.Период,
	|	ВременнаяТаблицаРегистра.Номенклатура,
	|	ВременнаяТаблицаРегистра.ХарактеристикаНоменклатуры,
	|	ВременнаяТаблицаРегистра.Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|ИТОГИ ПО
	|	Период ПЕРИОДАМИ(&Периодичность, , )";
	
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Периодичность",
	?(Параметры.ПериодичностьПередачиСебестоимости.Пустая(),Перечисления.Периодичность.Год,Параметры.ПериодичностьПередачиСебестоимости));
	ПостроительЗапроса.Текст = ТекстЗапроса;
	
	Если Параметры.ИспользоватьОтборПоСкладам Тогда
		ПостроительЗапроса.Параметры.Вставить("МассивСкладов", Параметры.Склады.ВыгрузитьКолонку("Склад"));
	Иначе
		ПостроительЗапроса.Текст = СтрЗаменить(ТекстЗапроса, "ГДЕ
		|	ВременнаяТаблицаРегистра.Склад В(&МассивСкладов)","");
	КонецЕсли;
	
	ПостроительЗапроса.Параметры.Вставить("Узел", Параметры.УзелДляОбмена);
	ПостроительЗапроса.Параметры.Вставить("ДатаНачала", Параметры.ДатаНачалаВыгрузкиСебестоимости);
	
	// Подготовим структуры данных
	ТаблицаДокумента = Новый ТаблицаЗначений;
	ТаблицаДокумента.Колонки.Добавить("Номенклатура");
	ТаблицаДокумента.Колонки.Добавить("ХарактеристикаНоменклатуры");
	ТаблицаДокумента.Колонки.Добавить("Цена");
	
	СтруктураВыгрузки = Новый Структура;
	
	// Обход результата запроса и выгрузка
	ПостроительЗапроса.Выполнить();
	ВыборкаПоДатам = ПостроительЗапроса.Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоДатам.Следующий() Цикл
		ТаблицаДокумента.Очистить();
		ВыборкаПоМагазинам = ВыборкаПоДатам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Склад = Неопределено;
		Пока ВыборкаПоМагазинам.Следующий() Цикл
			Если ВыборкаПоМагазинам.Стоимость = 0 Тогда
				Продолжить;
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(ТаблицаДокумента.Добавить(),ВыборкаПоМагазинам);
			Склад = ВыборкаПоМагазинам.Склад;
		КонецЦикла;
		Если Склад = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ВходящиеДанные = Новый Структура;
		ВходящиеДанные.Вставить("Дата", ВыборкаПоДатам.Период);
		ВходящиеДанные.Вставить("Магазин", Склад);
		ВходящиеДанные.Вставить("ПометкаУдаления", Ложь);
		ВходящиеДанные.Вставить("Проведен", Истина);
		ВходящиеДанные.Вставить("ПринятИзУправляющейСистемы", Истина);
		ВходящиеДанные.Вставить("Товары",ТаблицаДокумента.Скопировать());
		ВыгрузитьПоПравилу(,,ВходящиеДанные,,"УстановкаСебестоимости");
	КонецЦикла;

КонецПроцедуры

Процедура ВыгрузитьХарактеристики(ОбъектКоллекции, Значение, ИмяПКО, Отказ) Экспорт

	Номенклатура = ОбъектКоллекции.Номенклатура;
	ХарактеристикаНоменклатуры = ОбъектКоллекции.ХарактеристикаНоменклатуры;
	ВестиУчетПоХарактеристикам = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Номенклатура, "ВестиУчетПоХарактеристикам");
	Если ВестиУчетПоХарактеристикам И ХарактеристикаНоменклатуры.Пустая() Тогда
		Значение = Номенклатура;
		ИмяПКО = "ХарактеристикиНоменклатурыНовый";
	ИначеЕсли НЕ ВестиУчетПоХарактеристикам Тогда
		Отказ = Истина;
	Иначе
		Значение = ХарактеристикаНоменклатуры;
	КонецЕсли;

КонецПроцедуры

Процедура ДопРеквизиты(Источник, КоллекцияОбъектов, Отказ) Экспорт

	Запрос = Новый Запрос("ВЫБРАТЬ
	| ЗначенияСвойствОбъектов.Свойство КАК Свойство,
	| ЗначенияСвойствОбъектов.Значение КАК Значение
	|ИЗ
	| РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	| ЗначенияСвойствОбъектов.Объект = &Объект");
	Запрос.УстановитьПараметр("Объект", Источник.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		КоллекцияОбъектов = РезультатЗапроса.Выгрузить();
	Иначе
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ОтказНаборКомплект(ОбъектКоллекции, Отказ) Экспорт

	ПараметрыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОбъектКоллекции.Номенклатура, "Набор,Комплект");
	Если ПараметрыНоменклатуры.Свойство("Набор") и ПараметрыНоменклатуры.Набор Тогда
		Отказ = Истина;
	КонецЕсли;
	Если ПараметрыНоменклатуры.Свойство("Комплект") и ПараметрыНоменклатуры.Комплект Тогда
		Отказ = Истина;
	КонецЕсли

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
// Данный раздел изменять запрещено.

// Создает в файле обмена запись об удалении объекта.
//
// Параметры:
//	Ссылка - Ссылка на удаляемый объект.
//	ТипПриемника - Строка - Содержит строковое представление типа приемника.
//	ТипИсточника - Строка - Содережит строковое представление типа источника.
// 
Процедура ЗаписатьВФайлУдалениеОбъекта(Ссылка, Знач ТипПриемника, Знач ТипИсточника)
	
	ОбщиеПроцедурыФункции.ЗаписатьВФайлУдалениеОбъекта(Ссылка, ТипПриемника, ТипИсточника);
	
КонецПроцедуры

// Производит выгрузку объекта в соответствии с указанным правилом конвертации
//
// Параметры:
//  Источник				 - произвольный источник данных
//  Приемник				 - xml-узел объекта приемника
//  ВходящиеДанные			 - произвольные вспомогательные данные, передаваемые правилу
//                             для выполнения конвертации
//  ИсходящиеДанные			 - произвольные вспомогательные данные, передаваемые правилам
//                             конвертации свойств
//  ИмяПКО					 - имя правила конвертации, согласно которому осуществляется выгрузка
//
// Возвращаемое значение:
//  xml-узел ссылки или значение приемника
//
Функция ВыгрузитьПоПравилу(Источник					= Неопределено,
						   Приемник					= Неопределено,
						   ВходящиеДанные			= Неопределено,
						   ИсходящиеДанные			= Неопределено,
						   ИмяПКО					= "")
						   
	Возврат ОбщиеПроцедурыФункции.ВыгрузитьПоПравилу(Источник, Приемник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО);

КонецФункции

// Служебная. Инициализирует переменные, необходимые для отладки
//
// Параметры:
//  Владелец - Обработка КонвертацияОбъектовИнформационныхБаз
//
Процедура ПодключитьОбработкуДляОтладки(Владелец) Экспорт

	Параметры            	 = Владелец.Параметры;
	ОбщиеПроцедурыФункции	 = Владелец;
	Запросы              	 = Владелец.Запросы;
	УзелДляОбмена		 	 = Владелец.УзелДляОбмена;

КонецПроцедуры

#КонецЕсли
