&НаКлиенте
Перем СоответствиеКлючейИСертификатов;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВнешнийПодключаемыйМодуль = ЭлектронныеДокументыСлужебныйКлиент.ВнешнийПодключаемыйМодуль(Параметры.СоглашениеЭД);
	
	Если ВнешнийПодключаемыйМодуль = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Устройства = ЭлектронныеДокументыСлужебныйКлиент.ПодключенныеХранилища(ВнешнийПодключаемыйМодуль);
	Если Устройства=Неопределено ИЛИ Устройства.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Если Устройства.Количество() = 1 Тогда
		ИдентификаторХранилища = Устройства[0];
	Иначе
		ИдентификаторХранилища = ЭлектронныеДокументыСлужебныйКлиент.ВыбратьХранилище(Параметры.СоглашениеЭД,
		                                                                              ВнешнийПодключаемыйМодуль);
		Если Не ЗначениеЗаполнено(ИдентификаторХранилища) Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
		
	ПинКодУстановлен = ЭлектронныеДокументыСлужебныйКлиент.УстановитьПинКодЕслиТребуется(ВнешнийПодключаемыйМодуль,
	                                                                                     ИдентификаторХранилища);
	Если Не ПинКодУстановлен Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Попытка
		СертификатыНаУстройстве = ВнешнийПодключаемыйМодуль.СертификатыВХранилище(ИдентификаторХранилища);
	Исключение
		ШаблонОшибки = НСтр("ru = 'Ошибка получения банковских сертификатов.
		                          |Код ошибки: %1
		                          |%2'");
		ДеталиОшибки = ВнешнийПодключаемыйМодуль.ДеталиОшибки();
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонОшибки,
		                                                                         ДеталиОшибки.Код,
		                                                                         ДеталиОшибки.Сообщение);
		Операция = НСтр("ru = 'Получение банковских сертификатов'");
		ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЭлектронныеДокументыСлужебныйВызовСервера.ОбработатьИсключениеПоЭДНаСервере(Операция,
		                                                                            ПодробноеПредставлениеОшибки,
		                                                                            ТекстСообщения,
		                                                                            1);
		Отказ = Истина;
		Возврат;
	КонецПопытки;
	
	Если СертификатыНаУстройстве.Количество() = 0 Тогда
		ТекстСобщения = НСтр("ru = 'Не найдены сертификаты в хранилище.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСобщения);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СоответствиеКлючейИСертификатов = Новый Соответствие;
	
	Если СертификатыНаУстройстве.Количество() = 1 Тогда
		
		ДанныеСертификата = ЭлектронныеДокументыСлужебныйКлиент.ДанныеСертификатаЧерезДопОбработку(
		                                                                ВнешнийПодключаемыйМодуль,
		                                                                СертификатыНаУстройстве[0]);
		Если ДанныеСертификата = Неопределено тогда
			Возврат;
		КонецЕсли;
		Ключ = ДанныеСертификата.Псевдоним;
		СоответствиеКлючейИСертификатов.Вставить(Ключ, СертификатыНаУстройстве[0]);
		Элементы.Ключ.ТолькоПросмотр = Истина;
		ТекущийЭлемент = Элементы.Пароль;
	Иначе
		Для Каждого СертификатXML ИЗ СертификатыНаУстройстве Цикл
			Ошибка = Ложь;
			ДанныеСертификата = ЭлектронныеДокументыСлужебныйКлиент.ДанныеСертификатаЧерезДопОбработку(ВнешнийПодключаемыйМодуль,
			                                                                                           СертификатXML);
			Если ДанныеСертификата = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Элементы.Ключ.СписокВыбора.Добавить(ДанныеСертификата.Псевдоним);
			СоответствиеКлючейИСертификатов.Вставить(ДанныеСертификата.Псевдоним, СертификатXML);
		КонецЦикла;
		Элементы.Ключ.СписокВыбора.СортироватьПоЗначению();
		Если Элементы.Ключ.СписокВыбора.Количество() = 0 Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		ТекущийЭлемент = Элементы.Ключ;
	КонецЕсли;
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Готово(Команда)
	
	ВнешнийПодключаемыйМодуль = ЭлектронныеДокументыСлужебныйКлиент.ВнешнийПодключаемыйМодуль(Параметры.СоглашениеЭД);
	
	Если ВнешнийПодключаемыйМодуль = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СертификатXML = СоответствиеКлючейИСертификатов.Получить(Ключ);
	
	ПарольУстановлен = ЭлектронныеДокументыСлужебныйКлиент.УстановитьПарольСертификатаЧерезДополнительнуюОбработку(
	                                                                                    ВнешнийПодключаемыйМодуль,
	                                                                                    СертификатXML,
	                                                                                    Пароль);
	Если НЕ ПарольУстановлен Тогда
		Возврат;
	КонецЕсли;
	
	СоединениеУстановлено = ЭлектронныеДокументыСлужебныйКлиент.УстановитьСоединениеЧерезДопОбработку(
	                                                                                    Параметры.СоглашениеЭД,
	                                                                                    ВнешнийПодключаемыйМодуль,
	                                                                                    СертификатXML);
	Если Не СоединениеУстановлено Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		СертификатXML = ВнешнийПодключаемыйМодуль.ДополнитьСертификат(СертификатXML);
	Исключение
		ШаблонОшибки = НСтр("ru = 'Ошибка дополнения данных сертификата.
								|Код ошибки: %1
								|%2'");
		ДеталиОшибки = ВнешнийПодключаемыйМодуль.ДеталиОшибки();
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
															ШаблонОшибки,
															ДеталиОшибки.Код,
															ДеталиОшибки.Сообщение);
		Операция = НСтр("ru = 'Получение дополнительных данных сертификата'");
		ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЭлектронныеДокументыСлужебныйВызовСервера.ОбработатьИсключениеПоЭДНаСервере(Операция,
																					ПодробноеПредставлениеОшибки,
																					ТекстСообщения,
																					1);
		Возврат;
	КонецПопытки;
	
	ОповеститьОВыборе(СертификатXML);
	
КонецПроцедуры
