
Процедура ДобавитьСтрокиПрайсЛистаВДеревоТэгов(СтрокиДерева, Отказ, Сообщение);
	
	ЦенаВключаетНДС = ТипЦен.ЦенаВключаетНДС;
	АтрибутыСуммы   = Новый Структура("Валюта", ТипЦен.ВалютаЦены.Код);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭлектронныйДокументИсходящийТовары.НомерСтроки,
	|	ЭлектронныйДокументИсходящийТовары.Номенклатура,
	|	ЭлектронныйДокументИсходящийТовары.ХарактеристикаНоменклатуры,
	|	НоменклатураКонтрагентов.КодНоменклатурыКонтрагента КАК ИдТовараКонтрагента,
	|	ЭлектронныйДокументИсходящийТовары.Цена,
	|	ЭлектронныйДокументИсходящийТовары.СтавкаНДС,
	|	ЭлектронныйДокументИсходящийТовары.СуммаНДС,
	|	ЭлектронныйДокументИсходящийТовары.Примечание
	|ИЗ
	|	Документ.ИсходящийПрайсЛист.Товары КАК ЭлектронныйДокументИсходящийТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	|		ПО НоменклатураКонтрагентов.Номенклатура = ЭлектронныйДокументИсходящийТовары.Номенклатура
	|			И НоменклатураКонтрагентов.ХарактеристикаНоменклатуры = ЭлектронныйДокументИсходящийТовары.ХарактеристикаНоменклатуры
	|			И НоменклатураКонтрагентов.Контрагент = ЭлектронныйДокументИсходящийТовары.Ссылка.Контрагент
	|ГДЕ
	|	ЭлектронныйДокументИсходящийТовары.Ссылка = &ЭлектронныйДокумент";
	Запрос.УстановитьПараметр("ЭлектронныйДокумент", Ссылка);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СообщениеСтроки = "";
		
		Если Не ЗначениеЗаполнено(Выборка.ИдТовараКонтрагента) Тогда
			СообщениеСтроки = СообщениеСтроки + Символы.ПС + "- не определен идентификатор";
		КонецЕсли; 
		
		Если Не ЗначениеЗаполнено(Выборка.Цена) Тогда
			СообщениеСтроки = СообщениеСтроки + Символы.ПС + "- не определена цена";
		КонецЕсли;
		
		СтрокиТовара = ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиДерева, "ТоварПрайсЛист").Строки;
		
		ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиТовара, "ИдТовара"  , Выборка.ИдТовараКонтрагента, "ТоварИД");
		
		СтрокиЦены = ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиТовара, "Цена").Строки;
		ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиЦены, "Сумма", ЭлектронныеДокументы.ХМЛЧисло(Выборка.Цена), , АтрибутыСуммы);
		
		Если ЗначениеЗаполнено(Выборка.СуммаНДС) Тогда
			СтрокиНалога = ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиЦены, "Налог").Строки;
			ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиНалога, "ТипНалога", "НДС");
			ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиНалога, "ВеличинаСтавкиНалога", ЭлектронныеДокументы.ХМЛЧисло(УчетНДС.ПолучитьСтавкуНДС(Выборка.СтавкаНДС)));
			ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиНалога, "Сумма", ЭлектронныеДокументы.ХМЛЧисло(Выборка.СуммаНДС), , АтрибутыСуммы);
			ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиНалога, "ВключеноВСтоимость", ЭлектронныеДокументы.ХМЛБулево(ЦенаВключаетНДС));
		КонецЕсли; 
		
		Если Не ПустаяСтрока(Выборка.Примечание) Тогда
			ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиТовара, "Примечание" , Выборка.Примечание);
		КонецЕсли; 
		
		Если Не ПустаяСтрока(СообщениеСтроки) Тогда
			Сообщение = Сообщение + Символы.ПС + "Строка: " + Выборка.НомерСтроки + "; Номенклатура: " + Выборка.Номенклатура + " содержит ошибки:" + СообщениеСтроки;
			Отказ = Истина;
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьXML(ОбъектXML, Отказ, Сообщение, ДобавлятьАтрибутПроверки = Ложь, ДополнятьИсходящееСообщениеПриложеннымиФайлами = Ложь) Экспорт
	
	ПрефиксИмен = "";
	ПространствоИменСОДИ    = "urn:moo-sodi.ru:commerceml_sodi";
	
	ОбъектXML.ЗаписатьНачалоЭлемента("ПрайсЛист", ПространствоИменСОДИ);
	ОбъектXML.ЗаписатьСоответствиеПространстваИмен(ПрефиксИмен, ПространствоИменСОДИ);
	ОбъектXML.ЗаписатьСоответствиеПространстваИмен("xsi", "http://www.w3.org/2001/XMLSchema-instance");
	
	Если ДобавлятьАтрибутПроверки Тогда
		ОбъектXML.ЗаписатьАтрибут("xsi:schemaLocation","urn:moo-sodi.ru:commerceml_sodi cml-price-3.0sodi.xsd");
	КонецЕсли;
	
	ДеревоТэгов  = ЭлектронныеДокументы.ИнициализироватьДеревоТэгов(ЭтотОбъект, Отказ, Сообщение);
	СтрокиДерева = ДеревоТэгов.Строки;
		
	ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиДерева, "НомерИсходногоДокумента", ИсходныйДокумент.НомерВходящегоДокумента, "ДокументИД");
	Если ЗначениеЗаполнено(ДлительностьОжиданияОтвета) Тогда
		ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиДерева, "ДлительностьОжиданияОтвета", ЭлектронныеДокументы.ХМЛДлительность(ДлительностьОжиданияОтвета));
	КонецЕсли;
	
	ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиДерева, "ПолныйПрайсЛист", ЭлектронныеДокументы.ХМЛБулево(ЭтоПолныйПрайсЛист));
		
	Если ЗначениеЗаполнено(НачалоДействия) Тогда
		ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиДерева, "НачалоДействия", ЭлектронныеДокументы.ХМЛДата(НачалоДействия));
	КонецЕсли;
		
	Если ЗначениеЗаполнено(ОкончаниеДействия) Тогда
		ЭлектронныеДокументы.ДобавитьСтрокуВДеревоТэгов(СтрокиДерева, "ОкончаниеДействия", ЭлектронныеДокументы.ХМЛДата(ОкончаниеДействия));
	КонецЕсли;

	ДобавитьСтрокиПрайсЛистаВДеревоТэгов(СтрокиДерева, Отказ, Сообщение);
	ЭлектронныеДокументы.ЗаписатьТэгиВXMLДокумент(ОбъектXML, ДеревоТэгов.Строки, ПрефиксИмен);
	ОбъектXML.ЗаписатьКонецЭлемента();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ЭлектронныеДокументы.ПередЗаписьюДокументаВведенногоНаОсновании(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(Основание)
	
	Если ТипЗнч(Основание) = Тип("ДокументОбъект.ВходящийЗапросПрайсЛиста") Тогда
		
		ЭлектронныеДокументы.ЗаполнитьШапкуИсходящегоДокументаПоОснованию(ЭтотОбъект, Основание);
		
	КонецЕсли;
	
КонецПроцедуры

Функция SOAPAction() Экспорт
	
	Возврат "prices";
	
КонецФункции // () 