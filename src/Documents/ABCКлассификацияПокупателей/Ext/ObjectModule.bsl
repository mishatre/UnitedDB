Перем мУдалятьДвижения;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;

КонецФункции // ПолучитьТаблицуПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Процедура проверяет наличие строк с одинаковыми контрагентами в табличной части
//
// Параметры
//  Отказ - булево
//
// Возвращаемое значение:
//   НЕТ
//
Процедура ПроверитьТабличнуюЧасть(Отказ)

	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаКонтрагентов.Контрагент             КАК Контрагент,
	|	КОЛИЧЕСТВО(ТаблицаКонтрагентов.Контрагент) КАК Количество
	|
	|ИЗ
	|	Документ.ABCКлассификацияПокупателей.ТаблицаРаспределенияКонтрагентов КАК ТаблицаКонтрагентов
	|
	|ГДЕ
	|	ТаблицаКонтрагентов.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаКонтрагентов.Контрагент
	|";
	
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	СписокКонтрагентов = "";
	Для каждого СтрокаТаблицы Из ТаблицаЗапроса Цикл
		Если СтрокаТаблицы.Количество > 1 Тогда
			СписокКонтрагентов = СписокКонтрагентов + Символы.ПС + СтрокаТаблицы.Контрагент;
		КонецЕсли; 
	КонецЦикла; 
	
	Если НЕ ПустаяСтрока(СписокКонтрагентов) Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьОбОшибке("Найдены строки с повторяющимися контрагентами!" + СписокКонтрагентов, Отказ);
	КонецЕсли; 
	
КонецПроцедуры // ПроверитьТабличнуюЧасть()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаПроведения".
//
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	ПроверитьТабличнуюЧасть(Отказ);
	
	Для Каждого ТекСтрокаТаблицаРаспределенияКонтрагентов Из ТаблицаРаспределенияКонтрагентов Цикл
		Движение = Движения.ABCКлассификацияПокупателей.Добавить();
		Движение.Период = Дата;
		Движение.Контрагент = ТекСтрокаТаблицаРаспределенияКонтрагентов.Контрагент;
		Движение.ABCКлассПокупателя = ТекСтрокаТаблицаРаспределенияКонтрагентов.ABCКлассификация;
	КонецЦикла;

	Попытка
		Движения.ABCКлассификацияПокупателей.Записать();
	Исключение
		Отказ = Истина;
		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(), Отказ);
	КонецПопытки;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	мУдалятьДвижения = НЕ ЭтоНовый();

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);

КонецПроцедуры
